-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_v_frmbuf_wr_0_0_AXIvideo2MultiPixStr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_V_val_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_V_val_0_V_full_n : IN STD_LOGIC;
    img_V_val_0_V_write : OUT STD_LOGIC;
    img_V_val_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_V_val_1_V_full_n : IN STD_LOGIC;
    img_V_val_1_V_write : OUT STD_LOGIC;
    img_V_val_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_V_val_2_V_full_n : IN STD_LOGIC;
    img_V_val_2_V_write : OUT STD_LOGIC;
    HwReg_height_cast5_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    HwReg_height_cast5_loc_empty_n : IN STD_LOGIC;
    HwReg_height_cast5_loc_read : OUT STD_LOGIC;
    WidthIn : IN STD_LOGIC_VECTOR (11 downto 0);
    colorFormat : IN STD_LOGIC_VECTOR (7 downto 0);
    HwReg_height_cast5_loc_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    HwReg_height_cast5_loc_out_full_n : IN STD_LOGIC;
    HwReg_height_cast5_loc_out_write : OUT STD_LOGIC );
end;


architecture behav of system_v_frmbuf_wr_0_0_AXIvideo2MultiPixStr is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal AXI_video_strm_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_data_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_user_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_vld_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_ack_in : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal AXI_video_strm_V_last_V_0_sel : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_load_A : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_load_B : STD_LOGIC;
    signal AXI_video_strm_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal AXI_video_strm_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_vld_in : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_ack_out : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal s_axis_video_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond2_i_i_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_reg_549 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal eol_2_i_i_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_V_val_0_V_blk_n : STD_LOGIC;
    signal img_V_val_1_V_blk_n : STD_LOGIC;
    signal img_V_val_2_V_blk_n : STD_LOGIC;
    signal HwReg_height_cast5_loc_blk_n : STD_LOGIC;
    signal HwReg_height_cast5_loc_out_blk_n : STD_LOGIC;
    signal eol_i_i_reg_254 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_i_i_reg_266 : STD_LOGIC_VECTOR (11 downto 0);
    signal eol_reg_277 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_i_reg_288 : STD_LOGIC_VECTOR (23 downto 0);
    signal axi_last_V_3_i_i_reg_335 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_3_i_i_reg_347 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal HwReg_height_cast5_l_reg_484 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reg_unsigned_short_s_fu_369_ap_done : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_375_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal grp_reg_unsigned_short_s_fu_369_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_reg_494 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_reg_unsigned_short_s_fu_375_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_107_reg_499 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_V_reg_504 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_last_V_reg_512 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_524 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond1_i_i_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_fu_400_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_reg_535 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond2_i_i_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op75_read_state7 : BOOLEAN;
    signal img_V_val_0_V1_status : STD_LOGIC;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_fu_411_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal brmerge_i_i_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_eol_2_i_i_phi_fu_327_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_reg_unsigned_short_s_fu_369_ap_start : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_369_ap_idle : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_369_ap_ready : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_375_ap_start : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_375_ap_idle : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_375_ap_ready : STD_LOGIC;
    signal axi_last_V1_i_i_reg_223 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal axi_data_V1_i_i_reg_233 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_i_i_reg_243 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_eol_i_i_phi_fu_258_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_Val2_s_phi_fu_316_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_axi_last_V_2_i_i_reg_299 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter1_p_Val2_s_reg_312 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_grp_reg_unsigned_short_s_fu_369_ap_start : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call17 : BOOLEAN;
    signal ap_reg_grp_reg_unsigned_short_s_fu_375_ap_start : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call18 : BOOLEAN;
    signal img_V_val_0_V1_update : STD_LOGIC;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sof_1_i_i_fu_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal pix_val_2_V_fu_445_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_0_V_fu_431_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_val_1_V_16_fu_441_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_fu_381_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_condition_518 : BOOLEAN;

    component system_v_frmbuf_wr_0_0_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    grp_reg_unsigned_short_s_fu_369 : component system_v_frmbuf_wr_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reg_unsigned_short_s_fu_369_ap_start,
        ap_done => grp_reg_unsigned_short_s_fu_369_ap_done,
        ap_idle => grp_reg_unsigned_short_s_fu_369_ap_idle,
        ap_ready => grp_reg_unsigned_short_s_fu_369_ap_ready,
        in_r => HwReg_height_cast5_l_reg_484,
        ap_return => grp_reg_unsigned_short_s_fu_369_ap_return);

    grp_reg_unsigned_short_s_fu_375 : component system_v_frmbuf_wr_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reg_unsigned_short_s_fu_375_ap_start,
        ap_done => grp_reg_unsigned_short_s_fu_375_ap_done,
        ap_idle => grp_reg_unsigned_short_s_fu_375_ap_idle,
        ap_ready => grp_reg_unsigned_short_s_fu_375_ap_ready,
        in_r => WidthIn,
        ap_return => grp_reg_unsigned_short_s_fu_375_ap_return);





    AXI_video_strm_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out))) then 
                                        AXI_video_strm_V_data_V_0_sel_rd <= not(AXI_video_strm_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in))) then 
                                        AXI_video_strm_V_data_V_0_sel_wr <= not(AXI_video_strm_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = AXI_video_strm_V_data_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in)) or ((ap_const_lv2_3 = AXI_video_strm_V_data_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = AXI_video_strm_V_data_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out)) or ((ap_const_lv2_3 = AXI_video_strm_V_data_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_data_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in))) and (ap_const_lv2_3 = AXI_video_strm_V_data_V_0_state)) or ((ap_const_lv2_1 = AXI_video_strm_V_data_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_ack_out)) or ((ap_const_lv2_2 = AXI_video_strm_V_data_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_in)))) then 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = AXI_video_strm_V_dest_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = AXI_video_strm_V_dest_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out)) or ((ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_dest_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in))) and (ap_const_lv2_3 = AXI_video_strm_V_dest_V_0_state)) or ((ap_const_lv2_1 = AXI_video_strm_V_dest_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_ack_out)) or ((ap_const_lv2_2 = AXI_video_strm_V_dest_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_dest_V_0_vld_in)))) then 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_out))) then 
                                        AXI_video_strm_V_last_V_0_sel_rd <= not(AXI_video_strm_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in))) then 
                                        AXI_video_strm_V_last_V_0_sel_wr <= not(AXI_video_strm_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = AXI_video_strm_V_last_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = AXI_video_strm_V_last_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out)) or ((ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = AXI_video_strm_V_last_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_last_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in))) and (ap_const_lv2_3 = AXI_video_strm_V_last_V_0_state)) or ((ap_const_lv2_1 = AXI_video_strm_V_last_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_ack_out)) or ((ap_const_lv2_2 = AXI_video_strm_V_last_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_last_V_0_vld_in)))) then 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_out))) then 
                                        AXI_video_strm_V_user_V_0_sel_rd <= not(AXI_video_strm_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in))) then 
                                        AXI_video_strm_V_user_V_0_sel_wr <= not(AXI_video_strm_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    AXI_video_strm_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                AXI_video_strm_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = AXI_video_strm_V_user_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = AXI_video_strm_V_user_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out)) or ((ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state) and (ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = AXI_video_strm_V_user_V_0_vld_in) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = AXI_video_strm_V_user_V_0_ack_out) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in))) and (ap_const_lv2_3 = AXI_video_strm_V_user_V_0_state)) or ((ap_const_lv2_1 = AXI_video_strm_V_user_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_ack_out)) or ((ap_const_lv2_2 = AXI_video_strm_V_user_V_0_state) and (ap_const_logic_1 = AXI_video_strm_V_user_V_0_vld_in)))) then 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    AXI_video_strm_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((exitcond2_i_i_fu_406_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_phi_mux_eol_2_i_i_phi_fu_327_p4 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_reg_unsigned_short_s_fu_369_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_reg_unsigned_short_s_fu_369_ap_start <= ap_const_logic_0;
            else
                if ((not(((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_reg_grp_reg_unsigned_short_s_fu_369_ap_start <= ap_const_logic_1;
                elsif ((grp_reg_unsigned_short_s_fu_369_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_reg_unsigned_short_s_fu_369_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_reg_unsigned_short_s_fu_375_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_reg_unsigned_short_s_fu_375_ap_start <= ap_const_logic_0;
            else
                if ((not(((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_reg_grp_reg_unsigned_short_s_fu_375_ap_start <= ap_const_logic_1;
                elsif ((grp_reg_unsigned_short_s_fu_375_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_reg_unsigned_short_s_fu_375_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_i_i_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                axi_data_V1_i_i_reg_233 <= tmp_data_V_reg_504;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                axi_data_V1_i_i_reg_233 <= axi_data_V_3_i_i_reg_347;
            end if; 
        end if;
    end process;

    axi_data_V_1_i_i_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                axi_data_V_1_i_i_reg_288 <= ap_phi_mux_p_Val2_s_phi_fu_316_p4;
            elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                axi_data_V_1_i_i_reg_288 <= axi_data_V1_i_i_reg_233;
            end if; 
        end if;
    end process;

    axi_data_V_3_i_i_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                axi_data_V_3_i_i_reg_347 <= axi_data_V_1_i_i_reg_288;
            elsif (((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                axi_data_V_3_i_i_reg_347 <= AXI_video_strm_V_data_V_0_data_out;
            end if; 
        end if;
    end process;

    axi_last_V1_i_i_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                axi_last_V1_i_i_reg_223 <= tmp_last_V_reg_512;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                axi_last_V1_i_i_reg_223 <= axi_last_V_3_i_i_reg_335;
            end if; 
        end if;
    end process;

    axi_last_V_3_i_i_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                axi_last_V_3_i_i_reg_335 <= eol_reg_277;
            elsif (((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                axi_last_V_3_i_i_reg_335 <= AXI_video_strm_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_2_i_i_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                eol_2_i_i_reg_324 <= eol_i_i_reg_254;
            elsif (((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                eol_2_i_i_reg_324 <= AXI_video_strm_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    eol_i_i_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                eol_i_i_reg_254 <= ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4;
            elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                eol_i_i_reg_254 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    eol_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                eol_reg_277 <= ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4;
            elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                eol_reg_277 <= axi_last_V1_i_i_reg_223;
            end if; 
        end if;
    end process;

    i_i_i_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_i_i_reg_243 <= ap_const_lv12_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i_i_i_reg_243 <= i_reg_535;
            end if; 
        end if;
    end process;

    j_i_i_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_i_i_fu_406_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                j_i_i_reg_266 <= j_fu_411_p2;
            elsif (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                j_i_i_reg_266 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    sof_1_i_i_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_i_i_fu_406_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                sof_1_i_i_fu_162 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sof_1_i_i_fu_162 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_load_A)) then
                AXI_video_strm_V_data_V_0_payload_A <= s_axis_video_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_load_B)) then
                AXI_video_strm_V_data_V_0_payload_B <= s_axis_video_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_load_A)) then
                AXI_video_strm_V_last_V_0_payload_A <= s_axis_video_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_load_B)) then
                AXI_video_strm_V_last_V_0_payload_B <= s_axis_video_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_load_A)) then
                AXI_video_strm_V_user_V_0_payload_A <= s_axis_video_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_load_B)) then
                AXI_video_strm_V_user_V_0_payload_B <= s_axis_video_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                HwReg_height_cast5_l_reg_484 <= HwReg_height_cast5_loc_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_i_i_fu_406_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                brmerge_i_i_reg_549 <= brmerge_i_i_fu_420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond2_i_i_reg_540 <= exitcond2_i_i_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_reg_535 <= i_fu_400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                sel_tmp2_reg_524 <= sel_tmp2_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_data_V_reg_504 <= AXI_video_strm_V_data_V_0_data_out;
                tmp_last_V_reg_512 <= AXI_video_strm_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_i_i_107_reg_499 <= grp_reg_unsigned_short_s_fu_375_ap_return;
                tmp_i_i_reg_494 <= grp_reg_unsigned_short_s_fu_369_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, AXI_video_strm_V_data_V_0_vld_out, HwReg_height_cast5_loc_empty_n, HwReg_height_cast5_loc_out_full_n, ap_CS_fsm_state3, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, exitcond1_i_i_fu_395_p2, ap_CS_fsm_state5, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_subdone, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_subdone, tmp_user_V_fu_381_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_user_V_fu_381_p1 = ap_const_lv1_0) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((tmp_user_V_fu_381_p1 = ap_const_lv1_1) and (ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    AXI_video_strm_V_data_V_0_ack_in <= AXI_video_strm_V_data_V_0_state(1);

    AXI_video_strm_V_data_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_CS_fsm_state3, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_324, ap_predicate_op75_read_state7, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op75_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            AXI_video_strm_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_data_V_0_data_out_assign_proc : process(AXI_video_strm_V_data_V_0_payload_A, AXI_video_strm_V_data_V_0_payload_B, AXI_video_strm_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_sel)) then 
            AXI_video_strm_V_data_V_0_data_out <= AXI_video_strm_V_data_V_0_payload_B;
        else 
            AXI_video_strm_V_data_V_0_data_out <= AXI_video_strm_V_data_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_data_V_0_load_A <= (not(AXI_video_strm_V_data_V_0_sel_wr) and AXI_video_strm_V_data_V_0_state_cmp_full);
    AXI_video_strm_V_data_V_0_load_B <= (AXI_video_strm_V_data_V_0_state_cmp_full and AXI_video_strm_V_data_V_0_sel_wr);
    AXI_video_strm_V_data_V_0_sel <= AXI_video_strm_V_data_V_0_sel_rd;
    AXI_video_strm_V_data_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_data_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_data_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_data_V_0_vld_out <= AXI_video_strm_V_data_V_0_state(0);

    AXI_video_strm_V_dest_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_CS_fsm_state3, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_324, ap_predicate_op75_read_state7, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op75_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            AXI_video_strm_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_last_V_0_ack_in <= AXI_video_strm_V_last_V_0_state(1);

    AXI_video_strm_V_last_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_CS_fsm_state3, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_324, ap_predicate_op75_read_state7, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op75_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            AXI_video_strm_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_last_V_0_data_out_assign_proc : process(AXI_video_strm_V_last_V_0_payload_A, AXI_video_strm_V_last_V_0_payload_B, AXI_video_strm_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_last_V_0_sel)) then 
            AXI_video_strm_V_last_V_0_data_out <= AXI_video_strm_V_last_V_0_payload_B;
        else 
            AXI_video_strm_V_last_V_0_data_out <= AXI_video_strm_V_last_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_last_V_0_load_A <= (not(AXI_video_strm_V_last_V_0_sel_wr) and AXI_video_strm_V_last_V_0_state_cmp_full);
    AXI_video_strm_V_last_V_0_load_B <= (AXI_video_strm_V_last_V_0_state_cmp_full and AXI_video_strm_V_last_V_0_sel_wr);
    AXI_video_strm_V_last_V_0_sel <= AXI_video_strm_V_last_V_0_sel_rd;
    AXI_video_strm_V_last_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_last_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_last_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_last_V_0_vld_out <= AXI_video_strm_V_last_V_0_state(0);
    AXI_video_strm_V_user_V_0_ack_in <= AXI_video_strm_V_user_V_0_state(1);

    AXI_video_strm_V_user_V_0_ack_out_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_CS_fsm_state3, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_324, ap_predicate_op75_read_state7, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op75_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_logic_1 = AXI_video_strm_V_data_V_0_vld_out) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            AXI_video_strm_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            AXI_video_strm_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_user_V_0_data_out_assign_proc : process(AXI_video_strm_V_user_V_0_payload_A, AXI_video_strm_V_user_V_0_payload_B, AXI_video_strm_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = AXI_video_strm_V_user_V_0_sel)) then 
            AXI_video_strm_V_user_V_0_data_out <= AXI_video_strm_V_user_V_0_payload_B;
        else 
            AXI_video_strm_V_user_V_0_data_out <= AXI_video_strm_V_user_V_0_payload_A;
        end if; 
    end process;

    AXI_video_strm_V_user_V_0_load_A <= (not(AXI_video_strm_V_user_V_0_sel_wr) and AXI_video_strm_V_user_V_0_state_cmp_full);
    AXI_video_strm_V_user_V_0_load_B <= (AXI_video_strm_V_user_V_0_state_cmp_full and AXI_video_strm_V_user_V_0_sel_wr);
    AXI_video_strm_V_user_V_0_sel <= AXI_video_strm_V_user_V_0_sel_rd;
    AXI_video_strm_V_user_V_0_state_cmp_full <= '0' when (AXI_video_strm_V_user_V_0_state = ap_const_lv2_1) else '1';
    AXI_video_strm_V_user_V_0_vld_in <= s_axis_video_TVALID;
    AXI_video_strm_V_user_V_0_vld_out <= AXI_video_strm_V_user_V_0_state(0);

    HwReg_height_cast5_loc_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_height_cast5_loc_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_cast5_loc_blk_n <= HwReg_height_cast5_loc_empty_n;
        else 
            HwReg_height_cast5_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    HwReg_height_cast5_loc_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_height_cast5_loc_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_cast5_loc_out_blk_n <= HwReg_height_cast5_loc_out_full_n;
        else 
            HwReg_height_cast5_loc_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    HwReg_height_cast5_loc_out_din <= HwReg_height_cast5_loc_dout;

    HwReg_height_cast5_loc_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_height_cast5_loc_empty_n, HwReg_height_cast5_loc_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_cast5_loc_out_write <= ap_const_logic_1;
        else 
            HwReg_height_cast5_loc_out_write <= ap_const_logic_0;
        end if; 
    end process;


    HwReg_height_cast5_loc_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, HwReg_height_cast5_loc_empty_n, HwReg_height_cast5_loc_out_full_n)
    begin
        if ((not(((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HwReg_height_cast5_loc_read <= ap_const_logic_1;
        else 
            HwReg_height_cast5_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_enable_reg_pp1_iter1, exitcond2_i_i_reg_540, ap_predicate_op75_read_state7, img_V_val_0_V1_status)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out) and (ap_predicate_op75_read_state7 = ap_const_boolean_1)) or ((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (img_V_val_0_V1_status = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_enable_reg_pp1_iter1, exitcond2_i_i_reg_540, ap_predicate_op75_read_state7, img_V_val_0_V1_status)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out) and (ap_predicate_op75_read_state7 = ap_const_boolean_1)) or ((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (img_V_val_0_V1_status = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_enable_reg_pp1_iter1, exitcond2_i_i_reg_540, ap_predicate_op75_read_state7, img_V_val_0_V1_status)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out) and (ap_predicate_op75_read_state7 = ap_const_boolean_1)) or ((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (img_V_val_0_V1_status = ap_const_logic_0))));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_324)
    begin
                ap_block_pp2_stage0_11001 <= ((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, ap_enable_reg_pp2_iter1, eol_2_i_i_reg_324)
    begin
                ap_block_pp2_stage0_subdone <= ((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, HwReg_height_cast5_loc_empty_n, HwReg_height_cast5_loc_out_full_n)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state10_pp2_stage0_iter1_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, eol_2_i_i_reg_324)
    begin
                ap_block_state10_pp2_stage0_iter1 <= ((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out));
    end process;


    ap_block_state1_ignore_call17_assign_proc : process(real_start, ap_done_reg, HwReg_height_cast5_loc_empty_n, HwReg_height_cast5_loc_out_full_n)
    begin
                ap_block_state1_ignore_call17 <= ((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call18_assign_proc : process(real_start, ap_done_reg, HwReg_height_cast5_loc_empty_n, HwReg_height_cast5_loc_out_full_n)
    begin
                ap_block_state1_ignore_call18 <= ((ap_const_logic_0 = HwReg_height_cast5_loc_out_full_n) or (ap_const_logic_0 = HwReg_height_cast5_loc_empty_n) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_reg_unsigned_short_s_fu_369_ap_done, grp_reg_unsigned_short_s_fu_375_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_reg_unsigned_short_s_fu_375_ap_done = ap_const_logic_0) or (grp_reg_unsigned_short_s_fu_369_ap_done = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(AXI_video_strm_V_data_V_0_vld_out, exitcond2_i_i_reg_540, ap_predicate_op75_read_state7, img_V_val_0_V1_status)
    begin
                ap_block_state7_pp1_stage0_iter1 <= (((ap_const_logic_0 = AXI_video_strm_V_data_V_0_vld_out) and (ap_predicate_op75_read_state7 = ap_const_boolean_1)) or ((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (img_V_val_0_V1_status = ap_const_logic_0)));
    end process;

        ap_block_state9_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_518_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_i_i_reg_540)
    begin
                ap_condition_518 <= ((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_i_fu_395_p2, ap_CS_fsm_state5)
    begin
        if (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4_assign_proc : process(AXI_video_strm_V_last_V_0_data_out, brmerge_i_i_reg_549, eol_reg_277, ap_phi_reg_pp1_iter1_axi_last_V_2_i_i_reg_299, ap_condition_518)
    begin
        if ((ap_const_boolean_1 = ap_condition_518)) then
            if ((brmerge_i_i_reg_549 = ap_const_lv1_1)) then 
                ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4 <= eol_reg_277;
            elsif ((brmerge_i_i_reg_549 = ap_const_lv1_0)) then 
                ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4 <= AXI_video_strm_V_last_V_0_data_out;
            else 
                ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4 <= ap_phi_reg_pp1_iter1_axi_last_V_2_i_i_reg_299;
            end if;
        else 
            ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4 <= ap_phi_reg_pp1_iter1_axi_last_V_2_i_i_reg_299;
        end if; 
    end process;


    ap_phi_mux_eol_2_i_i_phi_fu_327_p4_assign_proc : process(AXI_video_strm_V_last_V_0_data_out, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, eol_2_i_i_reg_324)
    begin
        if (((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_eol_2_i_i_phi_fu_327_p4 <= AXI_video_strm_V_last_V_0_data_out;
        else 
            ap_phi_mux_eol_2_i_i_phi_fu_327_p4 <= eol_2_i_i_reg_324;
        end if; 
    end process;


    ap_phi_mux_eol_i_i_phi_fu_258_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_i_i_reg_540, eol_i_i_reg_254, ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4)
    begin
        if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_eol_i_i_phi_fu_258_p4 <= ap_phi_mux_axi_last_V_2_i_i_phi_fu_304_p4;
        else 
            ap_phi_mux_eol_i_i_phi_fu_258_p4 <= eol_i_i_reg_254;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_316_p4_assign_proc : process(AXI_video_strm_V_data_V_0_data_out, brmerge_i_i_reg_549, axi_data_V_1_i_i_reg_288, ap_phi_reg_pp1_iter1_p_Val2_s_reg_312, ap_condition_518)
    begin
        if ((ap_const_boolean_1 = ap_condition_518)) then
            if ((brmerge_i_i_reg_549 = ap_const_lv1_1)) then 
                ap_phi_mux_p_Val2_s_phi_fu_316_p4 <= axi_data_V_1_i_i_reg_288;
            elsif ((brmerge_i_i_reg_549 = ap_const_lv1_0)) then 
                ap_phi_mux_p_Val2_s_phi_fu_316_p4 <= AXI_video_strm_V_data_V_0_data_out;
            else 
                ap_phi_mux_p_Val2_s_phi_fu_316_p4 <= ap_phi_reg_pp1_iter1_p_Val2_s_reg_312;
            end if;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_316_p4 <= ap_phi_reg_pp1_iter1_p_Val2_s_reg_312;
        end if; 
    end process;

    ap_phi_reg_pp1_iter1_axi_last_V_2_i_i_reg_299 <= "X";
    ap_phi_reg_pp1_iter1_p_Val2_s_reg_312 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op75_read_state7_assign_proc : process(exitcond2_i_i_reg_540, brmerge_i_i_reg_549)
    begin
                ap_predicate_op75_read_state7 <= ((brmerge_i_i_reg_549 = ap_const_lv1_0) and (exitcond2_i_i_reg_540 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_i_i_fu_420_p2 <= (sof_1_i_i_fu_162 or ap_phi_mux_eol_i_i_phi_fu_258_p4);
    exitcond1_i_i_fu_395_p2 <= "1" when (i_i_i_reg_243 = tmp_i_i_reg_494) else "0";
    exitcond2_i_i_fu_406_p2 <= "1" when (j_i_i_reg_266 = tmp_i_i_107_reg_499) else "0";
    grp_reg_unsigned_short_s_fu_369_ap_start <= ap_reg_grp_reg_unsigned_short_s_fu_369_ap_start;
    grp_reg_unsigned_short_s_fu_375_ap_start <= ap_reg_grp_reg_unsigned_short_s_fu_375_ap_start;
    i_fu_400_p2 <= std_logic_vector(unsigned(i_i_i_reg_243) + unsigned(ap_const_lv12_1));
    img_V_val_0_V1_status <= (img_V_val_2_V_full_n and img_V_val_1_V_full_n and img_V_val_0_V_full_n);

    img_V_val_0_V1_update_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond2_i_i_reg_540, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_V_val_0_V1_update <= ap_const_logic_1;
        else 
            img_V_val_0_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    img_V_val_0_V_blk_n_assign_proc : process(img_V_val_0_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_i_i_reg_540)
    begin
        if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_V_val_0_V_blk_n <= img_V_val_0_V_full_n;
        else 
            img_V_val_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_V_val_0_V_din <= 
        pix_val_0_V_fu_431_p4 when (sel_tmp2_reg_524(0) = '1') else 
        pix_val_1_V_16_fu_441_p1;
    img_V_val_0_V_write <= img_V_val_0_V1_update;

    img_V_val_1_V_blk_n_assign_proc : process(img_V_val_1_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_i_i_reg_540)
    begin
        if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_V_val_1_V_blk_n <= img_V_val_1_V_full_n;
        else 
            img_V_val_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_V_val_1_V_din <= 
        pix_val_1_V_16_fu_441_p1 when (sel_tmp2_reg_524(0) = '1') else 
        pix_val_2_V_fu_445_p4;
    img_V_val_1_V_write <= img_V_val_0_V1_update;

    img_V_val_2_V_blk_n_assign_proc : process(img_V_val_2_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_i_i_reg_540)
    begin
        if (((exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_V_val_2_V_blk_n <= img_V_val_2_V_full_n;
        else 
            img_V_val_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_V_val_2_V_din <= 
        pix_val_2_V_fu_445_p4 when (sel_tmp2_reg_524(0) = '1') else 
        pix_val_0_V_fu_431_p4;
    img_V_val_2_V_write <= img_V_val_0_V1_update;

    internal_ap_ready_assign_proc : process(exitcond1_i_i_fu_395_p2, ap_CS_fsm_state5)
    begin
        if (((exitcond1_i_i_fu_395_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_411_p2 <= std_logic_vector(unsigned(j_i_i_reg_266) + unsigned(ap_const_lv12_1));
    pix_val_0_V_fu_431_p4 <= ap_phi_mux_p_Val2_s_phi_fu_316_p4(23 downto 16);
    pix_val_1_V_16_fu_441_p1 <= ap_phi_mux_p_Val2_s_phi_fu_316_p4(8 - 1 downto 0);
    pix_val_2_V_fu_445_p4 <= ap_phi_mux_p_Val2_s_phi_fu_316_p4(15 downto 8);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    s_axis_video_TDATA_blk_n_assign_proc : process(AXI_video_strm_V_data_V_0_state, ap_CS_fsm_state3, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond2_i_i_reg_540, brmerge_i_i_reg_549, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, eol_2_i_i_reg_324)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((eol_2_i_i_reg_324 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((brmerge_i_i_reg_549 = ap_const_lv1_0) and (exitcond2_i_i_reg_540 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            s_axis_video_TDATA_blk_n <= AXI_video_strm_V_data_V_0_state(0);
        else 
            s_axis_video_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_video_TREADY <= AXI_video_strm_V_dest_V_0_state(1);
    sel_tmp2_fu_385_p2 <= "1" when (colorFormat = ap_const_lv8_0) else "0";
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_user_V_fu_381_p1 <= AXI_video_strm_V_user_V_0_data_out;
end behav;
