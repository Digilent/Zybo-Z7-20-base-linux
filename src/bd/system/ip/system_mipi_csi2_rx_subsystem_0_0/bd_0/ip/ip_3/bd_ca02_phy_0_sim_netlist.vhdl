-- Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2017.4 (lin64) Build 2086221 Fri Dec 15 20:54:30 MST 2017
-- Date        : Sat Mar 31 13:24:40 2018
-- Host        : ubuntu running 64-bit Ubuntu 16.04.3 LTS
-- Command     : write_vhdl -force -mode funcsim
--               /home/digilent/work/git/Zybo-Z7-20-base-linux/src/bd/system/ip/system_mipi_csi2_rx_subsystem_0_0/bd_0/ip/ip_3/bd_ca02_phy_0_sim_netlist.vhdl
-- Design      : bd_ca02_phy_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7z020clg400-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series is
  port (
    core_clk : in STD_LOGIC;
    div4_clk_out : out STD_LOGIC;
    system_reset : in STD_LOGIC;
    clk_reset : in STD_LOGIC;
    io_reset : in STD_LOGIC;
    data_in_to_device : out STD_LOGIC_VECTOR ( 15 downto 0 );
    data_hs_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_hs_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 );
    clk_hs_rxp : in STD_LOGIC;
    clk_hs_rxn : in STD_LOGIC;
    rx_clk_active : in STD_LOGIC;
    cal_start : in STD_LOGIC;
    tap_val_pass_in : in STD_LOGIC_VECTOR ( 3 downto 0 );
    idelay_tap_val_out : out STD_LOGIC_VECTOR ( 4 downto 0 );
    pass_in_rst : out STD_LOGIC;
    dlyctrl_rdy : out STD_LOGIC;
    cal_pass : out STD_LOGIC;
    cal_done : out STD_LOGIC
  );
  attribute CAL_CHECK_TAP_MAX : string;
  attribute CAL_CHECK_TAP_MAX of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "5'b11111";
  attribute CAL_CHECK_TAP_MIN : string;
  attribute CAL_CHECK_TAP_MIN of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "5'b00001";
  attribute CAL_CHECK_TAP_MIN_INT : string;
  attribute CAL_CHECK_TAP_MIN_INT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "5'b00000";
  attribute C_CAL_MODE : string;
  attribute C_CAL_MODE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "FIXED";
  attribute C_DPHY_LANES : integer;
  attribute C_DPHY_LANES of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is 2;
  attribute C_IDLY_GRP_NAME : string;
  attribute C_IDLY_GRP_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "mipi_csi2rx_idly_group";
  attribute C_IDLY_TAP : integer;
  attribute C_IDLY_TAP of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is 1;
  attribute C_SHARE_IDLYCTRL : string;
  attribute C_SHARE_IDLYCTRL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "true";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "yes";
  attribute GEN_LD : string;
  attribute GEN_LD of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "2'b01";
  attribute GEN_PASS_RST : string;
  attribute GEN_PASS_RST of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "2'b10";
  attribute IDLE : string;
  attribute IDLE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "2'b00";
  attribute ISERDES_IOBDELAY : string;
  attribute ISERDES_IOBDELAY of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "BOTH";
  attribute MTBF_SYNC_STAGES : integer;
  attribute MTBF_SYNC_STAGES of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is 3;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "mipi_dphy_v4_0_1_rx_ioi_7series";
  attribute PASS_IN_WAIT_TIME : string;
  attribute PASS_IN_WAIT_TIME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "32'b00000000000000010000000000000000";
  attribute PASS_RST_WAIT_TIME : string;
  attribute PASS_RST_WAIT_TIME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "6'b101000";
  attribute PASS_WAIT : string;
  attribute PASS_WAIT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series : entity is "2'b11";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series is
  signal \<const0>\ : STD_LOGIC;
  signal clk_active_r1 : STD_LOGIC;
  signal clk_active_r1_i_1_n_0 : STD_LOGIC;
  signal clk_in_int : STD_LOGIC;
  signal clk_in_int_buf : STD_LOGIC;
  signal data_in_from_pins_delay_0 : STD_LOGIC;
  signal data_in_from_pins_delay_1 : STD_LOGIC;
  signal data_in_from_pins_int_0 : STD_LOGIC;
  signal data_in_from_pins_int_1 : STD_LOGIC;
  signal \^div4_clk_out\ : STD_LOGIC;
  signal io_rst_2clks_r : STD_LOGIC;
  signal io_rst_2clks_r_i_1_n_0 : STD_LOGIC;
  signal tap_load : STD_LOGIC;
  signal tap_val : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_dl0_iserdese2_master_O_UNCONNECTED : STD_LOGIC;
  signal NLW_dl0_iserdese2_master_SHIFTOUT1_UNCONNECTED : STD_LOGIC;
  signal NLW_dl0_iserdese2_master_SHIFTOUT2_UNCONNECTED : STD_LOGIC;
  signal \NLW_dl0_with_delay.idelaye2_bus_0_CNTVALUEOUT_UNCONNECTED\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \NLW_dl1_ibufds_inst.dl1_iserdese2_master_O_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT1_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT2_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_dl1_ibufds_inst.idelaye2_bus_1_CNTVALUEOUT_UNCONNECTED\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute BOX_TYPE : string;
  attribute BOX_TYPE of bufio_inst : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of clk_active_r1_i_1 : label is "soft_lutpair71";
  attribute BOX_TYPE of clkout_buf_inst : label is "PRIMITIVE";
  attribute BOX_TYPE of dl0_iserdese2_master : label is "PRIMITIVE";
  attribute BOX_TYPE of \dl0_with_delay.idelaye2_bus_0\ : label is "PRIMITIVE";
  attribute IODELAY_GROUP : string;
  attribute IODELAY_GROUP of \dl0_with_delay.idelaye2_bus_0\ : label is "mipi_csi2rx_idly_group";
  attribute SIM_DELAY_D : integer;
  attribute SIM_DELAY_D of \dl0_with_delay.idelaye2_bus_0\ : label is 0;
  attribute BOX_TYPE of \dl1_ibufds_inst.dl1_iserdese2_master\ : label is "PRIMITIVE";
  attribute BOX_TYPE of \dl1_ibufds_inst.ibufds_dl1_inst\ : label is "PRIMITIVE";
  attribute CAPACITANCE : string;
  attribute CAPACITANCE of \dl1_ibufds_inst.ibufds_dl1_inst\ : label is "DONT_CARE";
  attribute IBUF_DELAY_VALUE : string;
  attribute IBUF_DELAY_VALUE of \dl1_ibufds_inst.ibufds_dl1_inst\ : label is "0";
  attribute IFD_DELAY_VALUE : string;
  attribute IFD_DELAY_VALUE of \dl1_ibufds_inst.ibufds_dl1_inst\ : label is "AUTO";
  attribute BOX_TYPE of \dl1_ibufds_inst.idelaye2_bus_1\ : label is "PRIMITIVE";
  attribute IODELAY_GROUP of \dl1_ibufds_inst.idelaye2_bus_1\ : label is "mipi_csi2rx_idly_group";
  attribute SIM_DELAY_D of \dl1_ibufds_inst.idelaye2_bus_1\ : label is 0;
  attribute BOX_TYPE of ibufds_clk_inst : label is "PRIMITIVE";
  attribute CAPACITANCE of ibufds_clk_inst : label is "DONT_CARE";
  attribute IBUF_DELAY_VALUE of ibufds_clk_inst : label is "0";
  attribute IFD_DELAY_VALUE of ibufds_clk_inst : label is "AUTO";
  attribute BOX_TYPE of ibufds_dl0_inst : label is "PRIMITIVE";
  attribute CAPACITANCE of ibufds_dl0_inst : label is "DONT_CARE";
  attribute IBUF_DELAY_VALUE of ibufds_dl0_inst : label is "0";
  attribute IFD_DELAY_VALUE of ibufds_dl0_inst : label is "AUTO";
  attribute BOX_TYPE of \idly_ctrl.delayctrl\ : label is "PRIMITIVE";
  attribute IODELAY_GROUP of \idly_ctrl.delayctrl\ : label is "mipi_csi2rx_idly_group";
  attribute SOFT_HLUTNM of io_rst_2clks_r_i_1 : label is "soft_lutpair71";
begin
  cal_done <= \<const0>\;
  cal_pass <= \<const0>\;
  div4_clk_out <= \^div4_clk_out\;
  idelay_tap_val_out(4) <= \<const0>\;
  idelay_tap_val_out(3) <= \<const0>\;
  idelay_tap_val_out(2) <= \<const0>\;
  idelay_tap_val_out(1) <= \<const0>\;
  idelay_tap_val_out(0) <= \<const0>\;
  pass_in_rst <= \<const0>\;
  tap_load <= 'Z';
  tap_val(0) <= 'Z';
  tap_val(1) <= 'Z';
  tap_val(2) <= 'Z';
  tap_val(3) <= 'Z';
  tap_val(4) <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
bufio_inst: unisim.vcomponents.BUFIO
     port map (
      I => clk_in_int,
      O => clk_in_int_buf
    );
clk_active_r1_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => clk_active_r1,
      I1 => io_rst_2clks_r,
      O => clk_active_r1_i_1_n_0
    );
clk_active_r1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^div4_clk_out\,
      CE => '1',
      D => clk_active_r1_i_1_n_0,
      Q => clk_active_r1,
      R => '0'
    );
clkout_buf_inst: unisim.vcomponents.BUFR
    generic map(
      BUFR_DIVIDE => "4",
      SIM_DEVICE => "7SERIES"
    )
        port map (
      CE => '1',
      CLR => '0',
      I => clk_in_int,
      O => \^div4_clk_out\
    );
dl0_iserdese2_master: unisim.vcomponents.ISERDESE2
    generic map(
      DATA_RATE => "DDR",
      DATA_WIDTH => 8,
      DYN_CLKDIV_INV_EN => "FALSE",
      DYN_CLK_INV_EN => "FALSE",
      INIT_Q1 => '0',
      INIT_Q2 => '0',
      INIT_Q3 => '0',
      INIT_Q4 => '0',
      INTERFACE_TYPE => "NETWORKING",
      IOBDELAY => "BOTH",
      IS_CLKB_INVERTED => '1',
      IS_CLKDIVP_INVERTED => '0',
      IS_CLKDIV_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_OCLKB_INVERTED => '0',
      IS_OCLK_INVERTED => '0',
      NUM_CE => 2,
      OFB_USED => "FALSE",
      SERDES_MODE => "MASTER",
      SRVAL_Q1 => '0',
      SRVAL_Q2 => '0',
      SRVAL_Q3 => '0',
      SRVAL_Q4 => '0'
    )
        port map (
      BITSLIP => '0',
      CE1 => '1',
      CE2 => '1',
      CLK => clk_in_int_buf,
      CLKB => clk_in_int_buf,
      CLKDIV => \^div4_clk_out\,
      CLKDIVP => '0',
      D => '0',
      DDLY => data_in_from_pins_delay_0,
      DYNCLKDIVSEL => '0',
      DYNCLKSEL => '0',
      O => NLW_dl0_iserdese2_master_O_UNCONNECTED,
      OCLK => '0',
      OCLKB => '0',
      OFB => '0',
      Q1 => data_in_to_device(7),
      Q2 => data_in_to_device(6),
      Q3 => data_in_to_device(5),
      Q4 => data_in_to_device(4),
      Q5 => data_in_to_device(3),
      Q6 => data_in_to_device(2),
      Q7 => data_in_to_device(1),
      Q8 => data_in_to_device(0),
      RST => io_rst_2clks_r,
      SHIFTIN1 => '0',
      SHIFTIN2 => '0',
      SHIFTOUT1 => NLW_dl0_iserdese2_master_SHIFTOUT1_UNCONNECTED,
      SHIFTOUT2 => NLW_dl0_iserdese2_master_SHIFTOUT2_UNCONNECTED
    );
\dl0_with_delay.idelaye2_bus_0\: unisim.vcomponents.IDELAYE2
    generic map(
      CINVCTRL_SEL => "FALSE",
      DELAY_SRC => "IDATAIN",
      HIGH_PERFORMANCE_MODE => "FALSE",
      IDELAY_TYPE => "FIXED",
      IDELAY_VALUE => 1,
      IS_C_INVERTED => '0',
      IS_DATAIN_INVERTED => '0',
      IS_IDATAIN_INVERTED => '0',
      PIPE_SEL => "FALSE",
      REFCLK_FREQUENCY => 200.000000,
      SIGNAL_PATTERN => "DATA"
    )
        port map (
      C => core_clk,
      CE => '0',
      CINVCTRL => '0',
      CNTVALUEIN(4 downto 0) => tap_val(4 downto 0),
      CNTVALUEOUT(4 downto 0) => \NLW_dl0_with_delay.idelaye2_bus_0_CNTVALUEOUT_UNCONNECTED\(4 downto 0),
      DATAIN => '0',
      DATAOUT => data_in_from_pins_delay_0,
      IDATAIN => data_in_from_pins_int_0,
      INC => '0',
      LD => tap_load,
      LDPIPEEN => '0',
      REGRST => system_reset
    );
\dl1_ibufds_inst.dl1_iserdese2_master\: unisim.vcomponents.ISERDESE2
    generic map(
      DATA_RATE => "DDR",
      DATA_WIDTH => 8,
      DYN_CLKDIV_INV_EN => "FALSE",
      DYN_CLK_INV_EN => "FALSE",
      INIT_Q1 => '0',
      INIT_Q2 => '0',
      INIT_Q3 => '0',
      INIT_Q4 => '0',
      INTERFACE_TYPE => "NETWORKING",
      IOBDELAY => "BOTH",
      IS_CLKB_INVERTED => '1',
      IS_CLKDIVP_INVERTED => '0',
      IS_CLKDIV_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_OCLKB_INVERTED => '0',
      IS_OCLK_INVERTED => '0',
      NUM_CE => 2,
      OFB_USED => "FALSE",
      SERDES_MODE => "MASTER",
      SRVAL_Q1 => '0',
      SRVAL_Q2 => '0',
      SRVAL_Q3 => '0',
      SRVAL_Q4 => '0'
    )
        port map (
      BITSLIP => '0',
      CE1 => '1',
      CE2 => '1',
      CLK => clk_in_int_buf,
      CLKB => clk_in_int_buf,
      CLKDIV => \^div4_clk_out\,
      CLKDIVP => '0',
      D => '0',
      DDLY => data_in_from_pins_delay_1,
      DYNCLKDIVSEL => '0',
      DYNCLKSEL => '0',
      O => \NLW_dl1_ibufds_inst.dl1_iserdese2_master_O_UNCONNECTED\,
      OCLK => '0',
      OCLKB => '0',
      OFB => '0',
      Q1 => data_in_to_device(15),
      Q2 => data_in_to_device(14),
      Q3 => data_in_to_device(13),
      Q4 => data_in_to_device(12),
      Q5 => data_in_to_device(11),
      Q6 => data_in_to_device(10),
      Q7 => data_in_to_device(9),
      Q8 => data_in_to_device(8),
      RST => io_rst_2clks_r,
      SHIFTIN1 => '0',
      SHIFTIN2 => '0',
      SHIFTOUT1 => \NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT1_UNCONNECTED\,
      SHIFTOUT2 => \NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT2_UNCONNECTED\
    );
\dl1_ibufds_inst.ibufds_dl1_inst\: unisim.vcomponents.IBUFDS
    generic map(
      IOSTANDARD => "DEFAULT"
    )
        port map (
      I => data_hs_rxp(1),
      IB => data_hs_rxn(1),
      O => data_in_from_pins_int_1
    );
\dl1_ibufds_inst.idelaye2_bus_1\: unisim.vcomponents.IDELAYE2
    generic map(
      CINVCTRL_SEL => "FALSE",
      DELAY_SRC => "IDATAIN",
      HIGH_PERFORMANCE_MODE => "FALSE",
      IDELAY_TYPE => "FIXED",
      IDELAY_VALUE => 1,
      IS_C_INVERTED => '0',
      IS_DATAIN_INVERTED => '0',
      IS_IDATAIN_INVERTED => '0',
      PIPE_SEL => "FALSE",
      REFCLK_FREQUENCY => 200.000000,
      SIGNAL_PATTERN => "DATA"
    )
        port map (
      C => core_clk,
      CE => '0',
      CINVCTRL => '0',
      CNTVALUEIN(4 downto 0) => tap_val(4 downto 0),
      CNTVALUEOUT(4 downto 0) => \NLW_dl1_ibufds_inst.idelaye2_bus_1_CNTVALUEOUT_UNCONNECTED\(4 downto 0),
      DATAIN => '0',
      DATAOUT => data_in_from_pins_delay_1,
      IDATAIN => data_in_from_pins_int_1,
      INC => '0',
      LD => tap_load,
      LDPIPEEN => '0',
      REGRST => system_reset
    );
ibufds_clk_inst: unisim.vcomponents.IBUFDS
    generic map(
      IOSTANDARD => "DEFAULT"
    )
        port map (
      I => clk_hs_rxp,
      IB => clk_hs_rxn,
      O => clk_in_int
    );
ibufds_dl0_inst: unisim.vcomponents.IBUFDS
    generic map(
      IOSTANDARD => "DEFAULT"
    )
        port map (
      I => data_hs_rxp(0),
      IB => data_hs_rxn(0),
      O => data_in_from_pins_int_0
    );
\idly_ctrl.delayctrl\: unisim.vcomponents.IDELAYCTRL
    generic map(
      SIM_DEVICE => "7SERIES"
    )
        port map (
      RDY => dlyctrl_rdy,
      REFCLK => core_clk,
      RST => system_reset
    );
io_rst_2clks_r_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => clk_active_r1,
      O => io_rst_2clks_r_i_1_n_0
    );
io_rst_2clks_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => \^div4_clk_out\,
      CE => '1',
      D => io_rst_2clks_r_i_1_n_0,
      Q => io_rst_2clks_r,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync is
  port (
    prmry_in : in STD_LOGIC;
    scndry_aclk : in STD_LOGIC;
    scndry_out : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync : entity is "mipi_dphy_v4_0_1_rx_rst_sync";
  attribute c_init_val : string;
  attribute c_init_val of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync : entity is "1'b1";
  attribute c_mtbf_stages : string;
  attribute c_mtbf_stages of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync : entity is "5'b00010";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync is
  signal \<const0>\ : STD_LOGIC;
  signal stg1_mipi_dphy_cdc_to : STD_LOGIC;
  attribute async_reg : string;
  attribute async_reg of stg1_mipi_dphy_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of stg1_mipi_dphy_cdc_to : signal is "{no}";
  signal stg2 : STD_LOGIC;
  attribute async_reg of stg2 : signal is "true";
  attribute shift_extract of stg2 : signal is "{no}";
  signal stg3 : STD_LOGIC;
  attribute async_reg of stg3 : signal is "true";
  attribute shift_extract of stg3 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of stg1_mipi_dphy_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of stg1_mipi_dphy_cdc_to_reg : label is "yes";
  attribute shift_extract of stg1_mipi_dphy_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg2_reg : label is std.standard.true;
  attribute KEEP of stg2_reg : label is "yes";
  attribute shift_extract of stg2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg3_reg : label is std.standard.true;
  attribute KEEP of stg3_reg : label is "yes";
  attribute shift_extract of stg3_reg : label is "{no}";
begin
  scndry_out <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
stg1_mipi_dphy_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => stg1_mipi_dphy_cdc_to,
      R => '0'
    );
stg2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => stg1_mipi_dphy_cdc_to,
      Q => stg2,
      R => '0'
    );
stg3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => stg2,
      Q => stg3,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\ is
  port (
    prmry_in : in STD_LOGIC;
    scndry_aclk : in STD_LOGIC;
    scndry_out : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\ : entity is "mipi_dphy_v4_0_1_rx_rst_sync";
  attribute c_init_val : string;
  attribute c_init_val of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\ : entity is "1'b1";
  attribute c_mtbf_stages : string;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\ : entity is "5'b00010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\ is
  signal \<const0>\ : STD_LOGIC;
  signal stg1_mipi_dphy_cdc_to : STD_LOGIC;
  attribute async_reg : string;
  attribute async_reg of stg1_mipi_dphy_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of stg1_mipi_dphy_cdc_to : signal is "{no}";
  signal stg2 : STD_LOGIC;
  attribute async_reg of stg2 : signal is "true";
  attribute shift_extract of stg2 : signal is "{no}";
  signal stg3 : STD_LOGIC;
  attribute async_reg of stg3 : signal is "true";
  attribute shift_extract of stg3 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of stg1_mipi_dphy_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of stg1_mipi_dphy_cdc_to_reg : label is "yes";
  attribute shift_extract of stg1_mipi_dphy_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg2_reg : label is std.standard.true;
  attribute KEEP of stg2_reg : label is "yes";
  attribute shift_extract of stg2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg3_reg : label is std.standard.true;
  attribute KEEP of stg3_reg : label is "yes";
  attribute shift_extract of stg3_reg : label is "{no}";
begin
  scndry_out <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
stg1_mipi_dphy_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => stg1_mipi_dphy_cdc_to,
      R => '0'
    );
stg2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => stg1_mipi_dphy_cdc_to,
      Q => stg2,
      R => '0'
    );
stg3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => stg2,
      Q => stg3,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\ is
  port (
    prmry_in : in STD_LOGIC;
    scndry_aclk : in STD_LOGIC;
    scndry_out : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\ : entity is "mipi_dphy_v4_0_1_rx_rst_sync";
  attribute c_init_val : string;
  attribute c_init_val of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\ : entity is "1'b1";
  attribute c_mtbf_stages : string;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\ : entity is "5'b00010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\ is
  signal stg1_mipi_dphy_cdc_to : STD_LOGIC;
  attribute async_reg : string;
  attribute async_reg of stg1_mipi_dphy_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of stg1_mipi_dphy_cdc_to : signal is "{no}";
  signal stg2 : STD_LOGIC;
  attribute async_reg of stg2 : signal is "true";
  attribute shift_extract of stg2 : signal is "{no}";
  signal stg3 : STD_LOGIC;
  attribute async_reg of stg3 : signal is "true";
  attribute shift_extract of stg3 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of stg1_mipi_dphy_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of stg1_mipi_dphy_cdc_to_reg : label is "yes";
  attribute shift_extract of stg1_mipi_dphy_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg2_reg : label is std.standard.true;
  attribute KEEP of stg2_reg : label is "yes";
  attribute shift_extract of stg2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg3_reg : label is std.standard.true;
  attribute KEEP of stg3_reg : label is "yes";
  attribute shift_extract of stg3_reg : label is "{no}";
begin
  scndry_out <= stg3;
stg1_mipi_dphy_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => stg1_mipi_dphy_cdc_to,
      R => '0'
    );
stg2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => stg1_mipi_dphy_cdc_to,
      Q => stg2,
      R => '0'
    );
stg3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => stg2,
      Q => stg3,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0\ is
  port (
    fifo_rd_rst_t2_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0\ : entity is "mipi_dphy_v4_0_1_rx_rst_sync";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0\ is
  signal stg1_mipi_dphy_cdc_to : STD_LOGIC;
  attribute async_reg : string;
  attribute async_reg of stg1_mipi_dphy_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of stg1_mipi_dphy_cdc_to : signal is "{no}";
  signal stg2 : STD_LOGIC;
  attribute async_reg of stg2 : signal is "true";
  attribute shift_extract of stg2 : signal is "{no}";
  signal stg3 : STD_LOGIC;
  attribute async_reg of stg3 : signal is "true";
  attribute shift_extract of stg3 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of stg1_mipi_dphy_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of stg1_mipi_dphy_cdc_to_reg : label is "yes";
  attribute shift_extract of stg1_mipi_dphy_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg2_reg : label is std.standard.true;
  attribute KEEP of stg2_reg : label is "yes";
  attribute shift_extract of stg2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of stg3_reg : label is std.standard.true;
  attribute KEEP of stg3_reg : label is "yes";
  attribute shift_extract of stg3_reg : label is "{no}";
begin
  fifo_rd_rst_t2_reg <= stg3;
stg1_mipi_dphy_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => \out\,
      Q => stg1_mipi_dphy_cdc_to,
      R => '0'
    );
stg2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => stg1_mipi_dphy_cdc_to,
      Q => stg2,
      R => '0'
    );
stg3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => stg2,
      Q => stg3,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell : entity is "6'b000010";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell is
  signal \<const0>\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= \<const0>\;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => scndry_rst_n,
      O => p_0_in
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => p_0_in
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => p_0_in
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => p_0_in
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => p_0_in
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => p_0_in
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => p_0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ : entity is "6'b000010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\ is
  signal \<const0>\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= s_level_out_d3;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ : entity is "6'b000010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\ is
  signal \<const0>\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= s_level_out_d3;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ : entity is "6'b000010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\ is
  signal \<const0>\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= s_level_out_d3;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => scndry_rst_n,
      O => p_0_in
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => p_0_in
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => p_0_in
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => p_0_in
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => p_0_in
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => p_0_in
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => p_0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ : entity is "6'b000010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\ is
  signal \<const0>\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= s_level_out_d3;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => scndry_rst_n,
      O => p_0_in
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_d1_cdc_to,
      R => p_0_in
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => p_0_in
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => p_0_in
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => p_0_in
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => p_0_in
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => p_0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ : entity is "6'b000010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\ is
  signal \<const0>\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= s_level_out_d3;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => prmry_in,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ is
  port (
    prmry_aclk : in STD_LOGIC;
    prmry_rst_n : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    prmry_vect_in : in STD_LOGIC_VECTOR ( 1 downto 0 );
    scndry_aclk : in STD_LOGIC;
    scndry_rst_n : in STD_LOGIC;
    prmry_ack : out STD_LOGIC;
    scndry_out : out STD_LOGIC;
    scndry_vect_out : out STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "yes";
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ : entity is "6'b000010";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\ is
  signal \<const0>\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  prmry_ack <= \<const0>\;
  scndry_out <= s_level_out_d3;
  scndry_vect_out(1) <= \<const0>\;
  scndry_vect_out(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => '1',
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => scndry_aclk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0\ is
  port (
    \out\ : out STD_LOGIC;
    dl_en_hs_lpn_i : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0\ is
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= dl_en_hs_lpn_i;
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10\ is
  port (
    \out\ : out STD_LOGIC;
    dl_en_hs_lpn_i : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10\ is
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= dl_en_hs_lpn_i;
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11\ is
  port (
    \out\ : out STD_LOGIC;
    dl_status_reg_bit_0_reg : out STD_LOGIC;
    dl_stopstate_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    rx_dl0_lp_dn : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    lp_11_r_dly : in STD_LOGIC;
    s_level_out_d2_reg_0 : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[3]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    system_rst_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    dl_status_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    lp_11_r_reg : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]\ : in STD_LOGIC;
    lp_10_r : in STD_LOGIC;
    lp_00_r : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]_0\ : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11\ is
  signal \FSM_sequential_dl_rx_state[1]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[2]_i_2_n_0\ : STD_LOGIC;
  signal dl_rx_state09_out : STD_LOGIC;
  signal dl_status_reg_bit_0 : STD_LOGIC;
  signal dl_status_reg_bit_0_i_4_n_0 : STD_LOGIC;
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= rx_dl0_lp_dn;
\FSM_sequential_dl_rx_state[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFE2E2E2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[1]_i_2_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[2]\,
      I3 => system_rst_reg,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => D(0)
    );
\FSM_sequential_dl_rx_state[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000202AA80"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I4 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      I5 => \FSM_sequential_dl_rx_state_reg[3]\(3),
      O => \FSM_sequential_dl_rx_state[1]_i_2_n_0\
    );
\FSM_sequential_dl_rx_state[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00E2E2E2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[2]_i_2_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[0]_0\,
      I3 => system_rst_reg,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => D(1)
    );
\FSM_sequential_dl_rx_state[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"30303330C8C8C8C8"
    )
        port map (
      I0 => cl_rxclkactivehs_reg,
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(3),
      I2 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      I5 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      O => \FSM_sequential_dl_rx_state[2]_i_2_n_0\
    );
dl_status_reg_bit_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"004F4F4F00404040"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I2 => dl_status_reg_bit_0,
      I3 => system_rst_reg,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I5 => dl_status_reg(0),
      O => dl_status_reg_bit_0_reg
    );
dl_status_reg_bit_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F008F8F0F008080"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      I1 => lp_11_r_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I3 => \FSM_sequential_dl_rx_state_reg[0]\,
      I4 => \FSM_sequential_dl_rx_state_reg[3]\(3),
      I5 => dl_status_reg_bit_0_i_4_n_0,
      O => dl_status_reg_bit_0
    );
dl_status_reg_bit_0_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000FEE0E00000000"
    )
        port map (
      I0 => lp_10_r,
      I1 => lp_00_r,
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      I4 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I5 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      O => dl_status_reg_bit_0_i_4_n_0
    );
dl_stopstate_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFAF4A0AEFAF4A0F"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I1 => dl_rx_state09_out,
      I2 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      I3 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I4 => lp_11_r_reg,
      I5 => cl_rxclkactivehs_reg,
      O => dl_stopstate_reg
    );
dl_stopstate_i_5: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      O => dl_rx_state09_out
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12\ is
  port (
    \out\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    dl_en_hs_lpn_reg : out STD_LOGIC;
    dl_status_reg_bit_4_reg : out STD_LOGIC;
    dl_stopstate_reg : out STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    rx_dl0_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[3]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    system_rst_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    s_level_out_d2_reg_0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    lp_11_r_reg : in STD_LOGIC;
    lp_01_r : in STD_LOGIC;
    lp_10_r_reg : in STD_LOGIC;
    \lp_st_cnt_reg[3]\ : in STD_LOGIC;
    lp_10_r : in STD_LOGIC;
    lp_00_r : in STD_LOGIC;
    \lp_st_dup_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    time_out_settle_reg : in STD_LOGIC;
    lp_11_r_reg_0 : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    dl_en_hs_lpn_reg_0 : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    dl_status_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_sequential_dl_rx_state_reg[1]\ : in STD_LOGIC;
    dl_stopstate : in STD_LOGIC;
    cl_rxclkactivehs_reg_0 : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[2]\ : in STD_LOGIC;
    lp_11_r_dly : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12\ is
  signal \FSM_sequential_dl_rx_state[3]_i_10_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_3_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_4_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_5_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_8_n_0\ : STD_LOGIC;
  signal dl_en_hs_lpn_i_4_n_0 : STD_LOGIC;
  signal dl_en_hs_lpn_reg_i_3_n_0 : STD_LOGIC;
  signal dl_status_reg_bit_4_i_3_n_0 : STD_LOGIC;
  signal dl_status_reg_bit_4_i_4_n_0 : STD_LOGIC;
  signal dl_stopstate_i_3_n_0 : STD_LOGIC;
  signal dl_stopstate_i_4_n_0 : STD_LOGIC;
  signal dl_stopstate_i_6_n_0 : STD_LOGIC;
  signal \lp_st_cnt[0]_i_3_n_0\ : STD_LOGIC;
  signal \lp_st_cnt[4]_i_2_n_0\ : STD_LOGIC;
  signal p_0_in8_in : STD_LOGIC;
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \lp_st_cnt[2]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \lp_st_cnt[3]_i_1\ : label is "soft_lutpair20";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= rx_dl0_lp_dp;
\FSM_sequential_dl_rx_state[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEEE2EEE2EEE2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[3]_i_3_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I3 => \FSM_sequential_dl_rx_state[3]_i_4_n_0\,
      I4 => system_rst_reg,
      I5 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => E(0)
    );
\FSM_sequential_dl_rx_state[3]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B33FB33FB33F830C"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      I4 => lp_00_r,
      I5 => lp_10_r,
      O => \FSM_sequential_dl_rx_state[3]_i_10_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E222222"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[3]_i_5_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I3 => \FSM_sequential_dl_rx_state_reg[0]\,
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I5 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      O => \FSM_sequential_dl_rx_state_reg[3]\(0)
    );
\FSM_sequential_dl_rx_state[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFCDFFFFFFCD0000"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => lp_11_r_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I5 => \FSM_sequential_dl_rx_state[3]_i_8_n_0\,
      O => \FSM_sequential_dl_rx_state[3]_i_3_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8FFF800FFFFFFFF"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => time_out_settle_reg,
      I2 => lp_11_r_reg,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => p_0_in8_in,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      O => \FSM_sequential_dl_rx_state[3]_i_4_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0300030304040404"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      O => \FSM_sequential_dl_rx_state[3]_i_5_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBBB88BB88BB88"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[3]_i_10_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I2 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I4 => s_level_out_d2,
      I5 => s_level_out_d2_reg_0,
      O => \FSM_sequential_dl_rx_state[3]_i_8_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_9__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => s_level_out_d2_reg_0,
      O => p_0_in8_in
    );
dl_en_hs_lpn_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000020FF00002000"
    )
        port map (
      I0 => time_out_settle_reg,
      I1 => lp_11_r_reg_0,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => dl_en_hs_lpn_reg_i_3_n_0,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I5 => dl_en_hs_lpn_reg_0,
      O => dl_en_hs_lpn_reg
    );
dl_en_hs_lpn_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0045FFFF00450000"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I1 => lp_11_r_reg,
      I2 => cl_rxclkactivehs_reg_0,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I5 => dl_status_reg_bit_4_i_4_n_0,
      O => dl_en_hs_lpn_i_4_n_0
    );
dl_en_hs_lpn_reg_i_3: unisim.vcomponents.MUXF7
     port map (
      I0 => dl_en_hs_lpn_i_4_n_0,
      I1 => \FSM_sequential_dl_rx_state_reg[2]\,
      O => dl_en_hs_lpn_reg_i_3_n_0,
      S => \FSM_sequential_dl_rx_state_reg[3]_0\(1)
    );
dl_status_reg_bit_4_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000F8FF00000800"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I1 => cl_rxclkactivehs_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I3 => dl_status_reg_bit_4_i_3_n_0,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I5 => dl_status_reg(0),
      O => dl_status_reg_bit_4_reg
    );
dl_status_reg_bit_4_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00D1FFFF00D10000"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I2 => lp_11_r_reg,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I5 => dl_status_reg_bit_4_i_4_n_0,
      O => dl_status_reg_bit_4_i_3_n_0
    );
dl_status_reg_bit_4_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4545450000000000"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => lp_00_r,
      I4 => lp_10_r,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      O => dl_status_reg_bit_4_i_4_n_0
    );
dl_stopstate_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000ABFB0000A808"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[1]\,
      I1 => dl_stopstate_i_3_n_0,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I3 => dl_stopstate_i_4_n_0,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I5 => dl_stopstate,
      O => dl_stopstate_reg
    );
dl_stopstate_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF0000CD00CD00"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => lp_11_r_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I4 => dl_stopstate_i_6_n_0,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      O => dl_stopstate_i_3_n_0
    );
dl_stopstate_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF800080"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => lp_11_r_reg,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      O => dl_stopstate_i_4_n_0
    );
dl_stopstate_i_6: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B333B333B3338300"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      I4 => lp_00_r,
      I5 => lp_10_r,
      O => dl_stopstate_i_6_n_0
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
\lp_st_cnt[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5755000057555555"
    )
        port map (
      I0 => Q(0),
      I1 => lp_11_r_reg,
      I2 => lp_01_r,
      I3 => lp_10_r_reg,
      I4 => \lp_st_cnt[0]_i_3_n_0\,
      I5 => \lp_st_cnt_reg[3]\,
      O => D(0)
    );
\lp_st_cnt[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \lp_st_dup_reg[1]\(1),
      I1 => s_level_out_d2,
      I2 => \lp_st_dup_reg[1]\(0),
      I3 => s_level_out_d2_reg_0,
      O => \lp_st_cnt[0]_i_3_n_0\
    );
\lp_st_cnt[1]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000555555540000"
    )
        port map (
      I0 => \lp_st_cnt[4]_i_2_n_0\,
      I1 => Q(3),
      I2 => Q(4),
      I3 => Q(2),
      I4 => Q(1),
      I5 => Q(0),
      O => D(1)
    );
\lp_st_cnt[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0078"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => Q(2),
      I3 => \lp_st_cnt[4]_i_2_n_0\,
      O => D(2)
    );
\lp_st_cnt[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00007F80"
    )
        port map (
      I0 => Q(2),
      I1 => Q(1),
      I2 => Q(0),
      I3 => Q(3),
      I4 => \lp_st_cnt[4]_i_2_n_0\,
      O => D(3)
    );
\lp_st_cnt[4]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1555555540000000"
    )
        port map (
      I0 => \lp_st_cnt[4]_i_2_n_0\,
      I1 => Q(3),
      I2 => Q(0),
      I3 => Q(1),
      I4 => Q(2),
      I5 => Q(4),
      O => D(4)
    );
\lp_st_cnt[4]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000002"
    )
        port map (
      I0 => \lp_st_cnt[0]_i_3_n_0\,
      I1 => lp_11_r_reg,
      I2 => lp_01_r,
      I3 => lp_10_r,
      I4 => lp_00_r,
      O => \lp_st_cnt[4]_i_2_n_0\
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26\ is
  port (
    \out\ : out STD_LOGIC;
    \cl_rx_state_reg[1]\ : out STD_LOGIC;
    cl_rx_state : out STD_LOGIC;
    cl_stopstate_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    cl_status_reg_bit_0_reg : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \cl_rx_state_reg[0]\ : out STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : out STD_LOGIC;
    rx_cl_lp_dn : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \cl_rx_state_reg[1]_0\ : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    p_0_out : in STD_LOGIC_VECTOR ( 0 to 0 );
    \s_level_out_bus_d3_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    core_rst : in STD_LOGIC;
    \cl_rx_state_reg[0]_0\ : in STD_LOGIC;
    s_level_out_d2_reg_0 : in STD_LOGIC;
    \cl_rx_state_reg[2]\ : in STD_LOGIC;
    lp_11_r_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \lp_st_dup_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    lp_00_r_reg : in STD_LOGIC;
    lp_11_r_reg_0 : in STD_LOGIC;
    cl_status_reg_bit_0_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    CO : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26\ is
  signal \^sr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^cl_rx_state\ : STD_LOGIC;
  signal \cl_rx_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \cl_rx_state[2]_i_5_n_0\ : STD_LOGIC;
  signal cl_status_reg_bit_0_i_2_n_0 : STD_LOGIC;
  signal \lp_st_cnt[4]_i_2__1_n_0\ : STD_LOGIC;
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \lp_st_cnt[2]_i_1__1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \lp_st_cnt[3]_i_1__1\ : label is "soft_lutpair1";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  SR(0) <= \^sr\(0);
  cl_rx_state <= \^cl_rx_state\;
  \out\ <= s_level_out_d2;
  p_level_in_int <= rx_cl_lp_dn;
\cl_rx_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00D8FFFFFFFF0000"
    )
        port map (
      I0 => \cl_rx_state_reg[2]\,
      I1 => lp_11_r_reg_0,
      I2 => \cl_rx_state[0]_i_2_n_0\,
      I3 => \cl_rx_state_reg[1]_0\,
      I4 => \^cl_rx_state\,
      I5 => \cl_rx_state_reg[0]_0\,
      O => \cl_rx_state_reg[0]\
    );
\cl_rx_state[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => s_level_out_d2_reg_0,
      I2 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_1\,
      O => \cl_rx_state[0]_i_2_n_0\
    );
\cl_rx_state[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FECE0000"
    )
        port map (
      I0 => \cl_rx_state_reg[1]_0\,
      I1 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I2 => \^cl_rx_state\,
      I3 => p_0_out(0),
      I4 => \s_level_out_bus_d3_reg[1]\(0),
      I5 => core_rst,
      O => \cl_rx_state_reg[1]\
    );
\cl_rx_state[2]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => \cl_rx_state[2]_i_5_n_0\,
      I1 => lp_11_r_reg,
      I2 => \cl_rx_state_reg[2]\,
      O => \^cl_rx_state\
    );
\cl_rx_state[2]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF3B0CCC0C"
    )
        port map (
      I0 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_1\,
      I1 => \cl_rx_state_reg[0]_0\,
      I2 => \cl_rx_state_reg[1]_0\,
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      I5 => \cl_rx_state_reg[2]\,
      O => \cl_rx_state[2]_i_5_n_0\
    );
cl_status_reg_bit_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F77F555F0000000A"
    )
        port map (
      I0 => \cl_rx_state_reg[2]\,
      I1 => lp_11_r_reg_0,
      I2 => \cl_rx_state_reg[0]_0\,
      I3 => \cl_rx_state_reg[1]_0\,
      I4 => cl_status_reg_bit_0_i_2_n_0,
      I5 => cl_status_reg_bit_0_reg_0(0),
      O => cl_status_reg_bit_0_reg
    );
cl_status_reg_bit_0_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \cl_rx_state_reg[0]_0\,
      I1 => \cl_rx_state_reg[1]_0\,
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      O => cl_status_reg_bit_0_i_2_n_0
    );
cl_stopstate_i_5: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00480000"
    )
        port map (
      I0 => \cl_rx_state_reg[0]_0\,
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \cl_rx_state_reg[2]\,
      I4 => \cl_rx_state_reg[1]_0\,
      O => cl_stopstate_reg
    );
\en_cl_init_to_blk.cl_init_done_coreclk_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEAEAEAEAEAEAE00"
    )
        port map (
      I0 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_1\,
      I1 => CO(0),
      I2 => \^sr\(0),
      I3 => \cl_rx_state_reg[2]\,
      I4 => \cl_rx_state_reg[1]_0\,
      I5 => \cl_rx_state_reg[0]_0\,
      O => \en_cl_init_to_blk.cl_init_done_coreclk_reg\
    );
\en_cl_init_to_blk.init_to_cnt_level1[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FDFFFFFF"
    )
        port map (
      I0 => \cl_rx_state_reg[0]_0\,
      I1 => \cl_rx_state_reg[2]\,
      I2 => \cl_rx_state_reg[1]_0\,
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      O => \^sr\(0)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
\lp_st_cnt[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000FFFDFFFD"
    )
        port map (
      I0 => Q(1),
      I1 => Q(2),
      I2 => Q(4),
      I3 => Q(3),
      I4 => \lp_st_cnt[4]_i_2__1_n_0\,
      I5 => Q(0),
      O => D(0)
    );
\lp_st_cnt[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000555555540000"
    )
        port map (
      I0 => \lp_st_cnt[4]_i_2__1_n_0\,
      I1 => Q(3),
      I2 => Q(4),
      I3 => Q(2),
      I4 => Q(1),
      I5 => Q(0),
      O => D(1)
    );
\lp_st_cnt[2]_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0078"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => Q(2),
      I3 => \lp_st_cnt[4]_i_2__1_n_0\,
      O => D(2)
    );
\lp_st_cnt[3]_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00007F80"
    )
        port map (
      I0 => Q(2),
      I1 => Q(1),
      I2 => Q(0),
      I3 => Q(3),
      I4 => \lp_st_cnt[4]_i_2__1_n_0\,
      O => D(3)
    );
\lp_st_cnt[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1555555540000000"
    )
        port map (
      I0 => \lp_st_cnt[4]_i_2__1_n_0\,
      I1 => Q(3),
      I2 => Q(0),
      I3 => Q(1),
      I4 => Q(2),
      I5 => Q(4),
      O => D(4)
    );
\lp_st_cnt[4]_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00006FF6"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => \lp_st_dup_reg[1]\(0),
      I2 => s_level_out_d2_reg_0,
      I3 => \lp_st_dup_reg[1]\(1),
      I4 => lp_00_r_reg,
      O => \lp_st_cnt[4]_i_2__1_n_0\
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27\ is
  port (
    \out\ : out STD_LOGIC;
    cl_init_done_coreclk0 : out STD_LOGIC;
    \en_cl_init_to_blk.init_to_cnt_level20\ : out STD_LOGIC;
    \cl_status_reg_bit_4__0\ : out STD_LOGIC;
    p_0_out : out STD_LOGIC_VECTOR ( 0 to 0 );
    \cl_rx_state_reg[1]\ : out STD_LOGIC;
    cl_stopstate_reg : out STD_LOGIC;
    \cl_rx_state_reg[2]\ : out STD_LOGIC;
    rx_cl_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_level_out_d2_reg_0 : in STD_LOGIC;
    \cl_rx_state_reg[1]_0\ : in STD_LOGIC;
    \cl_rx_state_reg[2]_0\ : in STD_LOGIC;
    \cl_rx_state_reg[0]\ : in STD_LOGIC;
    \en_cl_init_to_blk.init_to_cnt_level1_tc\ : in STD_LOGIC;
    lp_11_r_dly : in STD_LOGIC;
    lp_11_r_reg : in STD_LOGIC;
    \cl_rx_state_reg[1]_1\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    \cl_rx_state_reg[0]_0\ : in STD_LOGIC;
    cl_stopstate : in STD_LOGIC;
    cl_rx_state : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27\ is
  signal \cl_rx_state[2]_i_2_n_0\ : STD_LOGIC;
  signal \cl_rx_state[2]_i_3_n_0\ : STD_LOGIC;
  signal cl_status_reg_bit_4_i_3_n_0 : STD_LOGIC;
  signal cl_stopstate_i_3_n_0 : STD_LOGIC;
  signal cl_stopstate_i_4_n_0 : STD_LOGIC;
  signal cl_stopstate_i_6_n_0 : STD_LOGIC;
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= rx_cl_lp_dp;
\cl_rx_state[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555FEFE5555AA80"
    )
        port map (
      I0 => \cl_rx_state_reg[0]\,
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I4 => \cl_rx_state_reg[1]_0\,
      I5 => \cl_rx_state_reg[2]_0\,
      O => p_0_out(0)
    );
\cl_rx_state[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0FFF400"
    )
        port map (
      I0 => \cl_rx_state[2]_i_2_n_0\,
      I1 => \cl_rx_state_reg[0]\,
      I2 => \cl_rx_state[2]_i_3_n_0\,
      I3 => cl_rx_state,
      I4 => \cl_rx_state_reg[2]_0\,
      O => \cl_rx_state_reg[2]\
    );
\cl_rx_state[2]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4555"
    )
        port map (
      I0 => \cl_rx_state_reg[1]_0\,
      I1 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      O => \cl_rx_state[2]_i_2_n_0\
    );
\cl_rx_state[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000F1100000000"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => s_level_out_d2_reg_0,
      I2 => lp_11_r_reg,
      I3 => \cl_rx_state_reg[0]\,
      I4 => \cl_rx_state_reg[1]_0\,
      I5 => \cl_rx_state_reg[2]_0\,
      O => \cl_rx_state[2]_i_3_n_0\
    );
\cl_rx_state[2]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFB88888BB"
    )
        port map (
      I0 => lp_11_r_reg,
      I1 => \cl_rx_state_reg[1]_0\,
      I2 => lp_11_r_dly,
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      I5 => \cl_rx_state_reg[0]\,
      O => \cl_rx_state_reg[1]\
    );
cl_status_reg_bit_4_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFF70000FFF7FFF7"
    )
        port map (
      I0 => \cl_rx_state_reg[1]_1\,
      I1 => s_level_out_d2_reg_0,
      I2 => s_level_out_d2,
      I3 => \cl_rx_state_reg[2]_0\,
      I4 => D(0),
      I5 => cl_status_reg_bit_4_i_3_n_0,
      O => \cl_status_reg_bit_4__0\
    );
cl_status_reg_bit_4_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0303F5FF03F3FFF"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => lp_11_r_reg,
      I2 => \cl_rx_state_reg[2]_0\,
      I3 => \cl_rx_state_reg[0]\,
      I4 => \cl_rx_state_reg[1]_0\,
      I5 => cl_stopstate_i_6_n_0,
      O => cl_status_reg_bit_4_i_3_n_0
    );
cl_stopstate_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ABA8"
    )
        port map (
      I0 => cl_stopstate_i_3_n_0,
      I1 => cl_stopstate_i_4_n_0,
      I2 => \cl_rx_state_reg[0]_0\,
      I3 => cl_stopstate,
      O => cl_stopstate_reg
    );
cl_stopstate_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFEA004000FF00FF"
    )
        port map (
      I0 => \cl_rx_state_reg[1]_0\,
      I1 => cl_stopstate_i_6_n_0,
      I2 => lp_11_r_dly,
      I3 => \cl_rx_state_reg[0]\,
      I4 => lp_11_r_reg,
      I5 => \cl_rx_state_reg[2]_0\,
      O => cl_stopstate_i_3_n_0
    );
cl_stopstate_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2A28282802000000"
    )
        port map (
      I0 => \cl_rx_state_reg[2]_0\,
      I1 => \cl_rx_state_reg[0]\,
      I2 => \cl_rx_state_reg[1]_0\,
      I3 => cl_stopstate_i_6_n_0,
      I4 => lp_11_r_dly,
      I5 => lp_11_r_reg,
      O => cl_stopstate_i_4_n_0
    );
cl_stopstate_i_6: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => s_level_out_d2_reg_0,
      O => cl_stopstate_i_6_n_0
    );
\en_cl_init_to_blk.cl_init_done_div4clk_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000008000000000"
    )
        port map (
      I0 => CO(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \cl_rx_state_reg[1]_0\,
      I4 => \cl_rx_state_reg[2]_0\,
      I5 => \cl_rx_state_reg[0]\,
      O => cl_init_done_coreclk0
    );
\en_cl_init_to_blk.init_to_cnt_level2[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000008000000000"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_tc\,
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \cl_rx_state_reg[1]_0\,
      I4 => \cl_rx_state_reg[2]_0\,
      I5 => \cl_rx_state_reg[0]\,
      O => \en_cl_init_to_blk.init_to_cnt_level20\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4\ is
  port (
    \out\ : out STD_LOGIC;
    dl_status_reg_bit_0_reg : out STD_LOGIC;
    dl_stopstate_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    rx_dl1_lp_dn : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    lp_11_r_dly : in STD_LOGIC;
    s_level_out_d2_reg_0 : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[3]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    system_rst_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    dl_status_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    lp_11_r_reg : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]\ : in STD_LOGIC;
    lp_10_r : in STD_LOGIC;
    lp_00_r : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]_0\ : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[2]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4\ is
  signal \FSM_sequential_dl_rx_state[1]_i_2__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[2]_i_2__0_n_0\ : STD_LOGIC;
  signal dl_rx_state09_out : STD_LOGIC;
  signal dl_status_reg_bit_0 : STD_LOGIC;
  signal \dl_status_reg_bit_0_i_4__0_n_0\ : STD_LOGIC;
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= rx_dl1_lp_dn;
\FSM_sequential_dl_rx_state[1]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFE2E2E2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[1]_i_2__0_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[2]\,
      I3 => system_rst_reg,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => D(0)
    );
\FSM_sequential_dl_rx_state[1]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000202AA80"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I4 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      I5 => \FSM_sequential_dl_rx_state_reg[3]\(3),
      O => \FSM_sequential_dl_rx_state[1]_i_2__0_n_0\
    );
\FSM_sequential_dl_rx_state[2]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00E2E2E2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[2]_i_2__0_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[0]_0\,
      I3 => system_rst_reg,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => D(1)
    );
\FSM_sequential_dl_rx_state[2]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"30303330C8C8C8C8"
    )
        port map (
      I0 => cl_rxclkactivehs_reg,
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(3),
      I2 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      I5 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      O => \FSM_sequential_dl_rx_state[2]_i_2__0_n_0\
    );
\dl_status_reg_bit_0_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"004F4F4F00404040"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I1 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I2 => dl_status_reg_bit_0,
      I3 => system_rst_reg,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I5 => dl_status_reg(0),
      O => dl_status_reg_bit_0_reg
    );
\dl_status_reg_bit_0_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F008F8F0F008080"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      I1 => lp_11_r_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I3 => \FSM_sequential_dl_rx_state_reg[0]\,
      I4 => \FSM_sequential_dl_rx_state_reg[3]\(3),
      I5 => \dl_status_reg_bit_0_i_4__0_n_0\,
      O => dl_status_reg_bit_0
    );
\dl_status_reg_bit_0_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000FEE0E00000000"
    )
        port map (
      I0 => lp_10_r,
      I1 => lp_00_r,
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      I4 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I5 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      O => \dl_status_reg_bit_0_i_4__0_n_0\
    );
\dl_stopstate_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFAF4A0AEFAF4A0F"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]\(1),
      I1 => dl_rx_state09_out,
      I2 => \FSM_sequential_dl_rx_state_reg[3]\(2),
      I3 => \FSM_sequential_dl_rx_state_reg[3]\(0),
      I4 => lp_11_r_reg,
      I5 => cl_rxclkactivehs_reg,
      O => dl_stopstate_reg
    );
\dl_stopstate_i_5__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      O => dl_rx_state09_out
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5\ is
  port (
    \out\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    dl_en_hs_lpn_reg : out STD_LOGIC;
    dl_status_reg_bit_4_reg : out STD_LOGIC;
    dl_stopstate_reg : out STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    rx_dl1_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[3]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    system_rst_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    s_level_out_d2_reg_0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    lp_11_r_reg : in STD_LOGIC;
    lp_01_r : in STD_LOGIC;
    lp_10_r_reg : in STD_LOGIC;
    \lp_st_cnt_reg[3]\ : in STD_LOGIC;
    lp_10_r : in STD_LOGIC;
    lp_00_r : in STD_LOGIC;
    \lp_st_dup_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    time_out_settle_reg : in STD_LOGIC;
    lp_11_r_reg_0 : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    dl_en_hs_lpn_reg_0 : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    dl_status_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_sequential_dl_rx_state_reg[1]\ : in STD_LOGIC;
    dl_stopstate : in STD_LOGIC;
    cl_rxclkactivehs_reg_0 : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[2]\ : in STD_LOGIC;
    lp_11_r_dly : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5\ is
  signal \FSM_sequential_dl_rx_state[3]_i_3__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_4__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_5__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_7_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_9_n_0\ : STD_LOGIC;
  signal \dl_en_hs_lpn_i_4__0_n_0\ : STD_LOGIC;
  signal \dl_en_hs_lpn_reg_i_3__0_n_0\ : STD_LOGIC;
  signal \dl_status_reg_bit_4_i_3__0_n_0\ : STD_LOGIC;
  signal \dl_status_reg_bit_4_i_4__0_n_0\ : STD_LOGIC;
  signal \dl_stopstate_i_3__0_n_0\ : STD_LOGIC;
  signal \dl_stopstate_i_4__0_n_0\ : STD_LOGIC;
  signal \dl_stopstate_i_6__0_n_0\ : STD_LOGIC;
  signal \lp_st_cnt[0]_i_3__0_n_0\ : STD_LOGIC;
  signal \lp_st_cnt[4]_i_2__0_n_0\ : STD_LOGIC;
  signal p_0_in8_in : STD_LOGIC;
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \lp_st_cnt[2]_i_1__0\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \lp_st_cnt[3]_i_1__0\ : label is "soft_lutpair47";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
  p_level_in_int <= rx_dl1_lp_dp;
\FSM_sequential_dl_rx_state[3]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFEEE2EEE2EEE2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[3]_i_3__0_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I3 => \FSM_sequential_dl_rx_state[3]_i_4__0_n_0\,
      I4 => system_rst_reg,
      I5 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => E(0)
    );
\FSM_sequential_dl_rx_state[3]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E222222"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[3]_i_5__0_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I3 => \FSM_sequential_dl_rx_state_reg[0]\,
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I5 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      O => \FSM_sequential_dl_rx_state_reg[3]\(0)
    );
\FSM_sequential_dl_rx_state[3]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFCDFFFFFFCD0000"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => lp_11_r_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I5 => \FSM_sequential_dl_rx_state[3]_i_7_n_0\,
      O => \FSM_sequential_dl_rx_state[3]_i_3__0_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8FFF800FFFFFFFF"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => time_out_settle_reg,
      I2 => lp_11_r_reg,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => p_0_in8_in,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      O => \FSM_sequential_dl_rx_state[3]_i_4__0_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0300030304040404"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => s_level_out_d2,
      I4 => s_level_out_d2_reg_0,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      O => \FSM_sequential_dl_rx_state[3]_i_5__0_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBBB88BB88BB88"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[3]_i_9_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I2 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I4 => s_level_out_d2,
      I5 => s_level_out_d2_reg_0,
      O => \FSM_sequential_dl_rx_state[3]_i_7_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_8__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => s_level_out_d2_reg_0,
      O => p_0_in8_in
    );
\FSM_sequential_dl_rx_state[3]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B33FB33FB33F830C"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      I4 => lp_00_r,
      I5 => lp_10_r,
      O => \FSM_sequential_dl_rx_state[3]_i_9_n_0\
    );
\dl_en_hs_lpn_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000020FF00002000"
    )
        port map (
      I0 => time_out_settle_reg,
      I1 => lp_11_r_reg_0,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => \dl_en_hs_lpn_reg_i_3__0_n_0\,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I5 => dl_en_hs_lpn_reg_0,
      O => dl_en_hs_lpn_reg
    );
\dl_en_hs_lpn_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0045FFFF00450000"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I1 => lp_11_r_reg,
      I2 => cl_rxclkactivehs_reg_0,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I5 => \dl_status_reg_bit_4_i_4__0_n_0\,
      O => \dl_en_hs_lpn_i_4__0_n_0\
    );
\dl_en_hs_lpn_reg_i_3__0\: unisim.vcomponents.MUXF7
     port map (
      I0 => \dl_en_hs_lpn_i_4__0_n_0\,
      I1 => \FSM_sequential_dl_rx_state_reg[2]\,
      O => \dl_en_hs_lpn_reg_i_3__0_n_0\,
      S => \FSM_sequential_dl_rx_state_reg[3]_0\(1)
    );
\dl_status_reg_bit_4_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000F8FF00000800"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I1 => cl_rxclkactivehs_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I3 => \dl_status_reg_bit_4_i_3__0_n_0\,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I5 => dl_status_reg(0),
      O => dl_status_reg_bit_4_reg
    );
\dl_status_reg_bit_4_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00D1FFFF00D10000"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I2 => lp_11_r_reg,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I5 => \dl_status_reg_bit_4_i_4__0_n_0\,
      O => \dl_status_reg_bit_4_i_3__0_n_0\
    );
\dl_status_reg_bit_4_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4545450000000000"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => lp_00_r,
      I4 => lp_10_r,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      O => \dl_status_reg_bit_4_i_4__0_n_0\
    );
\dl_stopstate_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000ABFB0000A808"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[1]\,
      I1 => \dl_stopstate_i_3__0_n_0\,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(1),
      I3 => \dl_stopstate_i_4__0_n_0\,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      I5 => dl_stopstate,
      O => dl_stopstate_reg
    );
\dl_stopstate_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF0000CD00CD00"
    )
        port map (
      I0 => cl_rxclkactivehs_reg_0,
      I1 => lp_11_r_reg,
      I2 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      I4 => \dl_stopstate_i_6__0_n_0\,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      O => \dl_stopstate_i_3__0_n_0\
    );
\dl_stopstate_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF800080"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I1 => s_level_out_d2,
      I2 => s_level_out_d2_reg_0,
      I3 => \FSM_sequential_dl_rx_state_reg[3]_0\(2),
      I4 => lp_11_r_reg,
      I5 => \FSM_sequential_dl_rx_state_reg[3]_0\(3),
      O => \dl_stopstate_i_4__0_n_0\
    );
\dl_stopstate_i_6__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B333B333B3338300"
    )
        port map (
      I0 => lp_11_r_dly,
      I1 => \FSM_sequential_dl_rx_state_reg[3]_0\(0),
      I2 => s_level_out_d2,
      I3 => s_level_out_d2_reg_0,
      I4 => lp_00_r,
      I5 => lp_10_r,
      O => \dl_stopstate_i_6__0_n_0\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
\lp_st_cnt[0]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5755000057555555"
    )
        port map (
      I0 => Q(0),
      I1 => lp_11_r_reg,
      I2 => lp_01_r,
      I3 => lp_10_r_reg,
      I4 => \lp_st_cnt[0]_i_3__0_n_0\,
      I5 => \lp_st_cnt_reg[3]\,
      O => D(0)
    );
\lp_st_cnt[0]_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \lp_st_dup_reg[1]\(1),
      I1 => s_level_out_d2,
      I2 => \lp_st_dup_reg[1]\(0),
      I3 => s_level_out_d2_reg_0,
      O => \lp_st_cnt[0]_i_3__0_n_0\
    );
\lp_st_cnt[1]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000555555540000"
    )
        port map (
      I0 => \lp_st_cnt[4]_i_2__0_n_0\,
      I1 => Q(3),
      I2 => Q(4),
      I3 => Q(2),
      I4 => Q(1),
      I5 => Q(0),
      O => D(1)
    );
\lp_st_cnt[2]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0078"
    )
        port map (
      I0 => Q(0),
      I1 => Q(1),
      I2 => Q(2),
      I3 => \lp_st_cnt[4]_i_2__0_n_0\,
      O => D(2)
    );
\lp_st_cnt[3]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00007F80"
    )
        port map (
      I0 => Q(2),
      I1 => Q(1),
      I2 => Q(0),
      I3 => Q(3),
      I4 => \lp_st_cnt[4]_i_2__0_n_0\,
      O => D(3)
    );
\lp_st_cnt[4]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1555555540000000"
    )
        port map (
      I0 => \lp_st_cnt[4]_i_2__0_n_0\,
      I1 => Q(3),
      I2 => Q(0),
      I3 => Q(1),
      I4 => Q(2),
      I5 => Q(4),
      O => D(4)
    );
\lp_st_cnt[4]_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000002"
    )
        port map (
      I0 => \lp_st_cnt[0]_i_3__0_n_0\,
      I1 => lp_11_r_reg,
      I2 => lp_01_r,
      I3 => lp_10_r,
      I4 => lp_00_r,
      O => \lp_st_cnt[4]_i_2__0_n_0\
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1\ is
  port (
    cl_enable : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => cl_enable,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0\ is
  port (
    clk_active_r : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => clk_active_r,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2\ is
  port (
    cal_done : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => cal_done,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3\ is
  port (
    \out\ : out STD_LOGIC;
    \gen_hs_high_rates.active_sm_r_reg\ : out STD_LOGIC;
    \active_sm_r__2\ : out STD_LOGIC;
    dl1_rxactivehs : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \gen_hs_high_rates.active_sm_r_reg_0\ : in STD_LOGIC;
    stop_state_extn_r : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[0]\ : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[1]\ : in STD_LOGIC;
    dl_en_hs_lpn_i : in STD_LOGIC;
    rxactivehs_coreclk_sync_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3\ is
  signal \gen_hs_high_rates.active_sm_r_i_2__0_n_0\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
\gen_hs_high_rates.active_sm_r_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AF0AAA0AA02AAA2A"
    )
        port map (
      I0 => \gen_hs_high_rates.active_sm_r_reg_0\,
      I1 => stop_state_extn_r,
      I2 => \gen_hs_high_rates.dl_state_reg[0]\,
      I3 => \gen_hs_high_rates.dl_state_reg[1]\,
      I4 => \gen_hs_high_rates.active_sm_r_i_2__0_n_0\,
      I5 => dl_en_hs_lpn_i,
      O => \gen_hs_high_rates.active_sm_r_reg\
    );
\gen_hs_high_rates.active_sm_r_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => rxactivehs_coreclk_sync_r,
      I1 => s_level_out_d2,
      O => \gen_hs_high_rates.active_sm_r_i_2__0_n_0\
    );
\gen_hs_high_rates.stopstate_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"4"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => rxactivehs_coreclk_sync_r,
      O => \active_sm_r__2\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => dl1_rxactivehs,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6\ is
  port (
    cal_done : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => cal_done,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9\ is
  port (
    \out\ : out STD_LOGIC;
    \gen_hs_high_rates.active_sm_r_reg\ : out STD_LOGIC;
    \active_sm_r__2\ : out STD_LOGIC;
    dl0_rxactivehs : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \gen_hs_high_rates.active_sm_r_reg_0\ : in STD_LOGIC;
    stop_state_extn_r : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[0]\ : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[1]\ : in STD_LOGIC;
    dl_en_hs_lpn_i : in STD_LOGIC;
    rxactivehs_coreclk_sync_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9\ is
  signal \gen_hs_high_rates.active_sm_r_i_2_n_0\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  \out\ <= s_level_out_d2;
\gen_hs_high_rates.active_sm_r_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AF0AAA0AA02AAA2A"
    )
        port map (
      I0 => \gen_hs_high_rates.active_sm_r_reg_0\,
      I1 => stop_state_extn_r,
      I2 => \gen_hs_high_rates.dl_state_reg[0]\,
      I3 => \gen_hs_high_rates.dl_state_reg[1]\,
      I4 => \gen_hs_high_rates.active_sm_r_i_2_n_0\,
      I5 => dl_en_hs_lpn_i,
      O => \gen_hs_high_rates.active_sm_r_reg\
    );
\gen_hs_high_rates.active_sm_r_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => rxactivehs_coreclk_sync_r,
      I1 => s_level_out_d2,
      O => \gen_hs_high_rates.active_sm_r_i_2_n_0\
    );
\gen_hs_high_rates.stopstate_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"4"
    )
        port map (
      I0 => s_level_out_d2,
      I1 => rxactivehs_coreclk_sync_r,
      O => \active_sm_r__2\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => dl0_rxactivehs,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2\ is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \rd_addr_reg[6]\ : in STD_LOGIC;
    \s_level_out_bus_d3_reg[15]_0\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \s_level_out_bus_d3_reg[15]_1\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \rd_addr_reg[5]\ : in STD_LOGIC;
    \rd_addr_reg[5]_0\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \rd_addr_reg[3]\ : in STD_LOGIC;
    \s_level_out_bus_d3_reg[15]_2\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \rd_addr_reg[3]_0\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    dl_pkt_cnt : in STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2\ is
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(0),
      I3 => \s_level_out_bus_d3_reg[15]_1\(0),
      I4 => \rd_addr_reg[5]\,
      O => D(0)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(0),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(0),
      I4 => \s_level_out_bus_d3_reg[15]_2\(0),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(1),
      I3 => \s_level_out_bus_d3_reg[15]_1\(1),
      I4 => \rd_addr_reg[5]\,
      O => D(1)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(1),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(1),
      I4 => \s_level_out_bus_d3_reg[15]_2\(1),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(2),
      I3 => \s_level_out_bus_d3_reg[15]_1\(2),
      I4 => \rd_addr_reg[5]\,
      O => D(2)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(2),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(2),
      I4 => \s_level_out_bus_d3_reg[15]_2\(2),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(3),
      I3 => \s_level_out_bus_d3_reg[15]_1\(3),
      I4 => \rd_addr_reg[5]\,
      O => D(3)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(3),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(3),
      I4 => \s_level_out_bus_d3_reg[15]_2\(3),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(4),
      I3 => \s_level_out_bus_d3_reg[15]_1\(4),
      I4 => \rd_addr_reg[5]\,
      O => D(4)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(4),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(4),
      I4 => \s_level_out_bus_d3_reg[15]_2\(4),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(5),
      I3 => \s_level_out_bus_d3_reg[15]_1\(5),
      I4 => \rd_addr_reg[5]\,
      O => D(5)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(5),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(5),
      I4 => \s_level_out_bus_d3_reg[15]_2\(5),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(6),
      I3 => \s_level_out_bus_d3_reg[15]_1\(6),
      I4 => \rd_addr_reg[5]\,
      O => D(6)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(6),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(6),
      I4 => \s_level_out_bus_d3_reg[15]_2\(6),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(7),
      I3 => \s_level_out_bus_d3_reg[15]_1\(7),
      I4 => \rd_addr_reg[5]\,
      O => D(7)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(7),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(7),
      I4 => \s_level_out_bus_d3_reg[15]_2\(7),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(8),
      I3 => \s_level_out_bus_d3_reg[15]_1\(8),
      I4 => \rd_addr_reg[5]\,
      O => D(8)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(8),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(8),
      I4 => \s_level_out_bus_d3_reg[15]_2\(8),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(9),
      I3 => \s_level_out_bus_d3_reg[15]_1\(9),
      I4 => \rd_addr_reg[5]\,
      O => D(9)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(9),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(9),
      I4 => \s_level_out_bus_d3_reg[15]_2\(9),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(10),
      I3 => \s_level_out_bus_d3_reg[15]_1\(10),
      I4 => \rd_addr_reg[5]\,
      O => D(10)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(10),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(10),
      I4 => \s_level_out_bus_d3_reg[15]_2\(10),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(11),
      I3 => \s_level_out_bus_d3_reg[15]_1\(11),
      I4 => \rd_addr_reg[5]\,
      O => D(11)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(11),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(11),
      I4 => \s_level_out_bus_d3_reg[15]_2\(11),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(12),
      I3 => \s_level_out_bus_d3_reg[15]_1\(12),
      I4 => \rd_addr_reg[5]\,
      O => D(12)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(12),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(12),
      I4 => \s_level_out_bus_d3_reg[15]_2\(12),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(13),
      I3 => \s_level_out_bus_d3_reg[15]_1\(13),
      I4 => \rd_addr_reg[5]\,
      O => D(13)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(13),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(13),
      I4 => \s_level_out_bus_d3_reg[15]_2\(13),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(14),
      I3 => \s_level_out_bus_d3_reg[15]_1\(14),
      I4 => \rd_addr_reg[5]\,
      O => D(14)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(14),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(14),
      I4 => \s_level_out_bus_d3_reg[15]_2\(14),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEAEAEA"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0\,
      I1 => \rd_addr_reg[6]\,
      I2 => \s_level_out_bus_d3_reg[15]_0\(15),
      I3 => \s_level_out_bus_d3_reg[15]_1\(15),
      I4 => \rd_addr_reg[5]\,
      O => D(15)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]_0\,
      I1 => Q(15),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(15),
      I4 => \s_level_out_bus_d3_reg[15]_2\(15),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(10),
      Q => s_level_out_bus_d1_cdc_to(10),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(11),
      Q => s_level_out_bus_d1_cdc_to(11),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(12),
      Q => s_level_out_bus_d1_cdc_to(12),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(13),
      Q => s_level_out_bus_d1_cdc_to(13),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(14),
      Q => s_level_out_bus_d1_cdc_to(14),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(15),
      Q => s_level_out_bus_d1_cdc_to(15),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(1),
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(2),
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(3),
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(4),
      Q => s_level_out_bus_d1_cdc_to(4),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(5),
      Q => s_level_out_bus_d1_cdc_to(5),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(6),
      Q => s_level_out_bus_d1_cdc_to(6),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(7),
      Q => s_level_out_bus_d1_cdc_to(7),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(8),
      Q => s_level_out_bus_d1_cdc_to(8),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(9),
      Q => s_level_out_bus_d1_cdc_to(9),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17\ is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    dl_pkt_cnt : in STD_LOGIC_VECTOR ( 15 downto 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
  D(15 downto 0) <= s_level_out_bus_d3(15 downto 0);
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(10),
      Q => s_level_out_bus_d1_cdc_to(10),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(11),
      Q => s_level_out_bus_d1_cdc_to(11),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(12),
      Q => s_level_out_bus_d1_cdc_to(12),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(13),
      Q => s_level_out_bus_d1_cdc_to(13),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(14),
      Q => s_level_out_bus_d1_cdc_to(14),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(15),
      Q => s_level_out_bus_d1_cdc_to(15),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(1),
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(2),
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(3),
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(4),
      Q => s_level_out_bus_d1_cdc_to(4),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(5),
      Q => s_level_out_bus_d1_cdc_to(5),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(6),
      Q => s_level_out_bus_d1_cdc_to(6),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(7),
      Q => s_level_out_bus_d1_cdc_to(7),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(8),
      Q => s_level_out_bus_d1_cdc_to(8),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_pkt_cnt(9),
      Q => s_level_out_bus_d1_cdc_to(9),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18\ is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
  D(15 downto 0) <= s_level_out_bus_d3(15 downto 0);
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19\ is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_aresetn : in STD_LOGIC;
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19\ is
  signal \^sr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
  D(15 downto 0) <= s_level_out_bus_d3(15 downto 0);
  SR(0) <= \^sr\(0);
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => s_axi_aresetn,
      O => \^sr\(0)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => \^sr\(0)
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => \^sr\(0)
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => \^sr\(0)
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => \^sr\(0)
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => \^sr\(0)
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => \^sr\(0)
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => \^sr\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3\ is
  port (
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21\ is
  port (
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    dl_status_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg(1),
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg(0),
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \rd_addr_reg[5]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \rd_addr_reg[3]\ : in STD_LOGIC;
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \rd_addr_reg[2]\ : in STD_LOGIC;
    \rd_addr_reg[6]\ : in STD_LOGIC;
    \rd_addr_reg[5]_0\ : in STD_LOGIC;
    \rd_addr_reg[3]_0\ : in STD_LOGIC;
    \rd_addr_reg[3]_1\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    dl_status_reg_bit_6_reg : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4\ is
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
begin
\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]\,
      I1 => Q(0),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(0),
      I4 => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6]\(0),
      I5 => \rd_addr_reg[2]\,
      O => D(0)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0\,
      O => D(1)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[6]\,
      I1 => s_level_out_bus_d3(2),
      I2 => \rd_addr_reg[2]\,
      I3 => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6]\(1),
      I4 => s_level_out_bus_d3(1),
      I5 => \rd_addr_reg[5]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]\,
      I1 => Q(1),
      I2 => \rd_addr_reg[3]_0\,
      I3 => s_level_out_bus_d3(4),
      I4 => s_level_out_bus_d3(3),
      I5 => \rd_addr_reg[3]_1\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg_bit_6_reg(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg_bit_6_reg(1),
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg_bit_6_reg(2),
      Q => s_level_out_bus_d1_cdc_to(4),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \rd_addr_reg[2]\ : in STD_LOGIC;
    \rd_addr_reg[5]\ : in STD_LOGIC;
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \rd_addr_reg[3]\ : in STD_LOGIC;
    \rd_addr_reg[3]_0\ : in STD_LOGIC;
    \rd_addr_reg[3]_1\ : in STD_LOGIC;
    \rd_addr_reg[6]\ : in STD_LOGIC;
    \rd_addr_reg[5]_0\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_aclk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25\ is
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
begin
\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEEE"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0\,
      I2 => Q(0),
      I3 => \rd_addr_reg[2]\,
      O => D(0)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[5]\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2]\(0),
      I2 => \rd_addr_reg[3]\,
      I3 => s_level_out_bus_d3(0),
      I4 => s_level_out_bus_d3(4),
      I5 => \rd_addr_reg[3]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[3]_1\,
      I1 => s_level_out_bus_d3(3),
      I2 => \rd_addr_reg[6]\,
      I3 => s_level_out_bus_d3(2),
      I4 => s_level_out_bus_d3(1),
      I5 => \rd_addr_reg[5]_0\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5\ is
  port (
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0]\ : in STD_LOGIC;
    \rd_addr_reg[6]\ : in STD_LOGIC;
    \rd_addr_reg[2]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \rd_addr_reg[5]\ : in STD_LOGIC;
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1]\ : in STD_LOGIC;
    \rd_addr_reg[3]\ : in STD_LOGIC;
    \rd_addr_reg[3]_0\ : in STD_LOGIC;
    \rd_addr_reg[3]_1\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_aclk : in STD_LOGIC;
    dl_status_reg_bit_0_reg : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5\ is
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0\ : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 9 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 9 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 9 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 9 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 9 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 9 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0\,
      I2 => \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0\,
      O => D(0)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[3]\,
      I1 => s_level_out_bus_d3(0),
      I2 => \rd_addr_reg[3]_0\,
      I3 => s_level_out_bus_d3(8),
      I4 => s_level_out_bus_d3(6),
      I5 => \rd_addr_reg[3]_1\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[6]\,
      I1 => s_level_out_bus_d3(4),
      I2 => \rd_addr_reg[2]\,
      I3 => Q(0),
      I4 => s_level_out_bus_d3(2),
      I5 => \rd_addr_reg[5]\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0\,
      I2 => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0\,
      O => D(1)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[3]\,
      I1 => s_level_out_bus_d3(1),
      I2 => \rd_addr_reg[3]_0\,
      I3 => s_level_out_bus_d3(9),
      I4 => s_level_out_bus_d3(7),
      I5 => \rd_addr_reg[3]_1\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \rd_addr_reg[6]\,
      I1 => s_level_out_bus_d3(5),
      I2 => \rd_addr_reg[2]\,
      I3 => Q(1),
      I4 => s_level_out_bus_d3(3),
      I5 => \rd_addr_reg[5]\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0\
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg_bit_0_reg(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg_bit_0_reg(1),
      Q => s_level_out_bus_d1_cdc_to(6),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => dl_status_reg_bit_0_reg(2),
      Q => s_level_out_bus_d1_cdc_to(8),
      R => SR(0)
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => SR(0)
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => SR(0)
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => SR(0)
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => SR(0)
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => SR(0)
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => s_axi_aclk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6\ is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    p_5_in : out STD_LOGIC;
    cl_enable : in STD_LOGIC;
    data0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    core_clk : in STD_LOGIC;
    p_5_in_0 : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
begin
  \out\(1 downto 0) <= s_level_out_bus_d3(1 downto 0);
\FSM_sequential_rst_blk_state[2]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => cl_enable,
      I1 => s_level_out_bus_d3(0),
      O => p_5_in
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => p_5_in_0(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => data0(0),
      Q => s_level_out_bus_d1_cdc_to(1),
      R => '0'
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => '0'
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => '0'
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => '0'
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => '0'
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => '0'
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => '0'
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => '0'
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => '0'
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => '0'
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22\ is
  port (
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => '0'
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => '0'
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => '0'
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => '0'
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => '0'
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => '0'
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => '0'
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => '0'
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => '0'
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => '0'
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => '0'
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => '0'
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => '0'
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => '0'
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => '0'
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => '0'
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => '0'
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => '0'
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => '0'
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => '0'
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => '0'
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => '0'
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => '0'
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => '0'
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => '0'
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => '0'
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => '0'
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => '0'
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => '0'
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => '0'
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => '0'
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => '0'
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => '0'
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => '0'
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => '0'
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => '0'
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => '0'
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => '0'
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => '0'
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => '0'
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => '0'
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => '0'
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => '0'
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => '0'
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => '0'
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => '0'
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => '0'
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => '0'
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => '0'
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => '0'
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => '0'
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => '0'
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => '0'
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => '0'
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => '0'
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => '0'
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => '0'
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => '0'
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => '0'
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => '0'
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => '0'
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => '0'
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => '0'
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => '0'
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => '0'
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => '0'
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => '0'
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => '0'
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => '0'
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => '0'
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => '0'
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => '0'
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => '0'
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => '0'
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => '0'
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => '0'
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => '0'
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => '0'
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => '0'
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => '0'
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => '0'
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => '0'
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => '0'
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => '0'
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => '0'
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => '0'
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => '0'
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => '0'
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => '0'
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => '0'
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => '0'
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => '0'
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => '0'
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => '0'
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => '0'
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => '0'
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => '0'
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => '0'
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => '0'
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => '0'
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => '0'
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => '0'
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => '0'
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => '0'
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => '0'
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => '0'
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => '0'
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => '0'
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => '0'
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => '0'
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => '0'
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => '0'
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => '0'
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => '0'
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => '0'
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => '0'
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => '0'
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => '0'
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => '0'
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => '0'
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => '0'
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => '0'
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => '0'
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => '0'
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => '0'
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => '0'
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => '0'
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => '0'
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => '0'
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => '0'
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => '0'
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => '0'
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => '0'
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => '0'
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => '0'
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => '0'
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => '0'
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => '0'
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => '0'
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => '0'
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => '0'
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => '0'
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => '0'
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => '0'
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => '0'
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => '0'
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => '0'
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => '0'
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => '0'
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => '0'
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => '0'
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => '0'
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => '0'
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => '0'
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => '0'
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => '0'
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => '0'
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => '0'
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => '0'
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => '0'
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23\ is
  port (
    system_rst_reg : in STD_LOGIC;
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(10),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(11),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(12),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(13),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(14),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(15),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(16),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(17),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(18),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(19),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(20),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(21),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(22),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(23),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(24),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(25),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(26),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(27),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(28),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(29),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(30),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(31),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => '0',
      Q => s_level_out_bus_d1_cdc_to(9),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => system_rst_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24\ is
  port (
    \s_level_out_bus_d4_reg[22]_0\ : out STD_LOGIC_VECTOR ( 14 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[9]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[10]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[10]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[10]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[11]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[11]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[11]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[12]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[12]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[12]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[13]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[13]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[13]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[14]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[14]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[14]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[15]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[15]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[15]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[16]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[16]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[16]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[17]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[17]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[17]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[18]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[18]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[18]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[19]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[19]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[19]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[20]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[20]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[20]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[21]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[21]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[21]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[22]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[22]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[22]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[23]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[23]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[23]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[24]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[24]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[24]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[25]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[25]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[25]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[26]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[26]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[26]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[27]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[27]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[27]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[28]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[28]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[28]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[29]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[29]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[29]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[30]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[30]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[30]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[31]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[31]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[31]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[9]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[9]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[9]\ : label is "{no}";
begin
  \s_level_out_bus_d4_reg[22]_0\(14 downto 0) <= s_level_out_bus_d3(22 downto 8);
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(10),
      Q => s_level_out_bus_d1_cdc_to(10),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(11),
      Q => s_level_out_bus_d1_cdc_to(11),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(12),
      Q => s_level_out_bus_d1_cdc_to(12),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(13),
      Q => s_level_out_bus_d1_cdc_to(13),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(14),
      Q => s_level_out_bus_d1_cdc_to(14),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(15),
      Q => s_level_out_bus_d1_cdc_to(15),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(16),
      Q => s_level_out_bus_d1_cdc_to(16),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(17),
      Q => s_level_out_bus_d1_cdc_to(17),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(18),
      Q => s_level_out_bus_d1_cdc_to(18),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(19),
      Q => s_level_out_bus_d1_cdc_to(19),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(1),
      Q => s_level_out_bus_d1_cdc_to(1),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(20),
      Q => s_level_out_bus_d1_cdc_to(20),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(21),
      Q => s_level_out_bus_d1_cdc_to(21),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(22),
      Q => s_level_out_bus_d1_cdc_to(22),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(23),
      Q => s_level_out_bus_d1_cdc_to(23),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(24),
      Q => s_level_out_bus_d1_cdc_to(24),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(25),
      Q => s_level_out_bus_d1_cdc_to(25),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(26),
      Q => s_level_out_bus_d1_cdc_to(26),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(27),
      Q => s_level_out_bus_d1_cdc_to(27),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(28),
      Q => s_level_out_bus_d1_cdc_to(28),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(29),
      Q => s_level_out_bus_d1_cdc_to(29),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(2),
      Q => s_level_out_bus_d1_cdc_to(2),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(30),
      Q => s_level_out_bus_d1_cdc_to(30),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(31),
      Q => s_level_out_bus_d1_cdc_to(31),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(3),
      Q => s_level_out_bus_d1_cdc_to(3),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(4),
      Q => s_level_out_bus_d1_cdc_to(4),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(5),
      Q => s_level_out_bus_d1_cdc_to(5),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(6),
      Q => s_level_out_bus_d1_cdc_to(6),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(7),
      Q => s_level_out_bus_d1_cdc_to(7),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(8),
      Q => s_level_out_bus_d1_cdc_to(8),
      R => '0'
    );
\s_level_out_bus_d1_cdc_to_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => Q(9),
      Q => s_level_out_bus_d1_cdc_to(9),
      R => '0'
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => '0'
    );
\s_level_out_bus_d2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(10),
      Q => s_level_out_bus_d2(10),
      R => '0'
    );
\s_level_out_bus_d2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(11),
      Q => s_level_out_bus_d2(11),
      R => '0'
    );
\s_level_out_bus_d2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(12),
      Q => s_level_out_bus_d2(12),
      R => '0'
    );
\s_level_out_bus_d2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(13),
      Q => s_level_out_bus_d2(13),
      R => '0'
    );
\s_level_out_bus_d2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(14),
      Q => s_level_out_bus_d2(14),
      R => '0'
    );
\s_level_out_bus_d2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(15),
      Q => s_level_out_bus_d2(15),
      R => '0'
    );
\s_level_out_bus_d2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(16),
      Q => s_level_out_bus_d2(16),
      R => '0'
    );
\s_level_out_bus_d2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(17),
      Q => s_level_out_bus_d2(17),
      R => '0'
    );
\s_level_out_bus_d2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(18),
      Q => s_level_out_bus_d2(18),
      R => '0'
    );
\s_level_out_bus_d2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(19),
      Q => s_level_out_bus_d2(19),
      R => '0'
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => '0'
    );
\s_level_out_bus_d2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(20),
      Q => s_level_out_bus_d2(20),
      R => '0'
    );
\s_level_out_bus_d2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(21),
      Q => s_level_out_bus_d2(21),
      R => '0'
    );
\s_level_out_bus_d2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(22),
      Q => s_level_out_bus_d2(22),
      R => '0'
    );
\s_level_out_bus_d2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(23),
      Q => s_level_out_bus_d2(23),
      R => '0'
    );
\s_level_out_bus_d2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(24),
      Q => s_level_out_bus_d2(24),
      R => '0'
    );
\s_level_out_bus_d2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(25),
      Q => s_level_out_bus_d2(25),
      R => '0'
    );
\s_level_out_bus_d2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(26),
      Q => s_level_out_bus_d2(26),
      R => '0'
    );
\s_level_out_bus_d2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(27),
      Q => s_level_out_bus_d2(27),
      R => '0'
    );
\s_level_out_bus_d2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(28),
      Q => s_level_out_bus_d2(28),
      R => '0'
    );
\s_level_out_bus_d2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(29),
      Q => s_level_out_bus_d2(29),
      R => '0'
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => '0'
    );
\s_level_out_bus_d2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(30),
      Q => s_level_out_bus_d2(30),
      R => '0'
    );
\s_level_out_bus_d2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(31),
      Q => s_level_out_bus_d2(31),
      R => '0'
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => '0'
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => '0'
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => '0'
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => '0'
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => '0'
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => '0'
    );
\s_level_out_bus_d2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(9),
      Q => s_level_out_bus_d2(9),
      R => '0'
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => '0'
    );
\s_level_out_bus_d3_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(10),
      Q => s_level_out_bus_d3(10),
      R => '0'
    );
\s_level_out_bus_d3_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(11),
      Q => s_level_out_bus_d3(11),
      R => '0'
    );
\s_level_out_bus_d3_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(12),
      Q => s_level_out_bus_d3(12),
      R => '0'
    );
\s_level_out_bus_d3_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(13),
      Q => s_level_out_bus_d3(13),
      R => '0'
    );
\s_level_out_bus_d3_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(14),
      Q => s_level_out_bus_d3(14),
      R => '0'
    );
\s_level_out_bus_d3_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(15),
      Q => s_level_out_bus_d3(15),
      R => '0'
    );
\s_level_out_bus_d3_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(16),
      Q => s_level_out_bus_d3(16),
      R => '0'
    );
\s_level_out_bus_d3_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(17),
      Q => s_level_out_bus_d3(17),
      R => '0'
    );
\s_level_out_bus_d3_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(18),
      Q => s_level_out_bus_d3(18),
      R => '0'
    );
\s_level_out_bus_d3_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(19),
      Q => s_level_out_bus_d3(19),
      R => '0'
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => '0'
    );
\s_level_out_bus_d3_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(20),
      Q => s_level_out_bus_d3(20),
      R => '0'
    );
\s_level_out_bus_d3_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(21),
      Q => s_level_out_bus_d3(21),
      R => '0'
    );
\s_level_out_bus_d3_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(22),
      Q => s_level_out_bus_d3(22),
      R => '0'
    );
\s_level_out_bus_d3_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(23),
      Q => s_level_out_bus_d3(23),
      R => '0'
    );
\s_level_out_bus_d3_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(24),
      Q => s_level_out_bus_d3(24),
      R => '0'
    );
\s_level_out_bus_d3_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(25),
      Q => s_level_out_bus_d3(25),
      R => '0'
    );
\s_level_out_bus_d3_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(26),
      Q => s_level_out_bus_d3(26),
      R => '0'
    );
\s_level_out_bus_d3_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(27),
      Q => s_level_out_bus_d3(27),
      R => '0'
    );
\s_level_out_bus_d3_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(28),
      Q => s_level_out_bus_d3(28),
      R => '0'
    );
\s_level_out_bus_d3_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(29),
      Q => s_level_out_bus_d3(29),
      R => '0'
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => '0'
    );
\s_level_out_bus_d3_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(30),
      Q => s_level_out_bus_d3(30),
      R => '0'
    );
\s_level_out_bus_d3_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(31),
      Q => s_level_out_bus_d3(31),
      R => '0'
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => '0'
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => '0'
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => '0'
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => '0'
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => '0'
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => '0'
    );
\s_level_out_bus_d3_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(9),
      Q => s_level_out_bus_d3(9),
      R => '0'
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => '0'
    );
\s_level_out_bus_d4_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(10),
      Q => s_level_out_bus_d4(10),
      R => '0'
    );
\s_level_out_bus_d4_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(11),
      Q => s_level_out_bus_d4(11),
      R => '0'
    );
\s_level_out_bus_d4_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(12),
      Q => s_level_out_bus_d4(12),
      R => '0'
    );
\s_level_out_bus_d4_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(13),
      Q => s_level_out_bus_d4(13),
      R => '0'
    );
\s_level_out_bus_d4_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(14),
      Q => s_level_out_bus_d4(14),
      R => '0'
    );
\s_level_out_bus_d4_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(15),
      Q => s_level_out_bus_d4(15),
      R => '0'
    );
\s_level_out_bus_d4_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(16),
      Q => s_level_out_bus_d4(16),
      R => '0'
    );
\s_level_out_bus_d4_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(17),
      Q => s_level_out_bus_d4(17),
      R => '0'
    );
\s_level_out_bus_d4_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(18),
      Q => s_level_out_bus_d4(18),
      R => '0'
    );
\s_level_out_bus_d4_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(19),
      Q => s_level_out_bus_d4(19),
      R => '0'
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => '0'
    );
\s_level_out_bus_d4_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(20),
      Q => s_level_out_bus_d4(20),
      R => '0'
    );
\s_level_out_bus_d4_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(21),
      Q => s_level_out_bus_d4(21),
      R => '0'
    );
\s_level_out_bus_d4_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(22),
      Q => s_level_out_bus_d4(22),
      R => '0'
    );
\s_level_out_bus_d4_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(23),
      Q => s_level_out_bus_d4(23),
      R => '0'
    );
\s_level_out_bus_d4_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(24),
      Q => s_level_out_bus_d4(24),
      R => '0'
    );
\s_level_out_bus_d4_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(25),
      Q => s_level_out_bus_d4(25),
      R => '0'
    );
\s_level_out_bus_d4_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(26),
      Q => s_level_out_bus_d4(26),
      R => '0'
    );
\s_level_out_bus_d4_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(27),
      Q => s_level_out_bus_d4(27),
      R => '0'
    );
\s_level_out_bus_d4_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(28),
      Q => s_level_out_bus_d4(28),
      R => '0'
    );
\s_level_out_bus_d4_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(29),
      Q => s_level_out_bus_d4(29),
      R => '0'
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => '0'
    );
\s_level_out_bus_d4_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(30),
      Q => s_level_out_bus_d4(30),
      R => '0'
    );
\s_level_out_bus_d4_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(31),
      Q => s_level_out_bus_d4(31),
      R => '0'
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => '0'
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => '0'
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => '0'
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => '0'
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => '0'
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => '0'
    );
\s_level_out_bus_d4_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(9),
      Q => s_level_out_bus_d4(9),
      R => '0'
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => '0'
    );
\s_level_out_bus_d5_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(10),
      Q => s_level_out_bus_d5(10),
      R => '0'
    );
\s_level_out_bus_d5_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(11),
      Q => s_level_out_bus_d5(11),
      R => '0'
    );
\s_level_out_bus_d5_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(12),
      Q => s_level_out_bus_d5(12),
      R => '0'
    );
\s_level_out_bus_d5_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(13),
      Q => s_level_out_bus_d5(13),
      R => '0'
    );
\s_level_out_bus_d5_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(14),
      Q => s_level_out_bus_d5(14),
      R => '0'
    );
\s_level_out_bus_d5_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(15),
      Q => s_level_out_bus_d5(15),
      R => '0'
    );
\s_level_out_bus_d5_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(16),
      Q => s_level_out_bus_d5(16),
      R => '0'
    );
\s_level_out_bus_d5_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(17),
      Q => s_level_out_bus_d5(17),
      R => '0'
    );
\s_level_out_bus_d5_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(18),
      Q => s_level_out_bus_d5(18),
      R => '0'
    );
\s_level_out_bus_d5_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(19),
      Q => s_level_out_bus_d5(19),
      R => '0'
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => '0'
    );
\s_level_out_bus_d5_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(20),
      Q => s_level_out_bus_d5(20),
      R => '0'
    );
\s_level_out_bus_d5_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(21),
      Q => s_level_out_bus_d5(21),
      R => '0'
    );
\s_level_out_bus_d5_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(22),
      Q => s_level_out_bus_d5(22),
      R => '0'
    );
\s_level_out_bus_d5_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(23),
      Q => s_level_out_bus_d5(23),
      R => '0'
    );
\s_level_out_bus_d5_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(24),
      Q => s_level_out_bus_d5(24),
      R => '0'
    );
\s_level_out_bus_d5_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(25),
      Q => s_level_out_bus_d5(25),
      R => '0'
    );
\s_level_out_bus_d5_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(26),
      Q => s_level_out_bus_d5(26),
      R => '0'
    );
\s_level_out_bus_d5_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(27),
      Q => s_level_out_bus_d5(27),
      R => '0'
    );
\s_level_out_bus_d5_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(28),
      Q => s_level_out_bus_d5(28),
      R => '0'
    );
\s_level_out_bus_d5_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(29),
      Q => s_level_out_bus_d5(29),
      R => '0'
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => '0'
    );
\s_level_out_bus_d5_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(30),
      Q => s_level_out_bus_d5(30),
      R => '0'
    );
\s_level_out_bus_d5_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(31),
      Q => s_level_out_bus_d5(31),
      R => '0'
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => '0'
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => '0'
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => '0'
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => '0'
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => '0'
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => '0'
    );
\s_level_out_bus_d5_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(9),
      Q => s_level_out_bus_d5(9),
      R => '0'
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => '0'
    );
\s_level_out_bus_d6_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(10),
      Q => s_level_out_bus_d6(10),
      R => '0'
    );
\s_level_out_bus_d6_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(11),
      Q => s_level_out_bus_d6(11),
      R => '0'
    );
\s_level_out_bus_d6_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(12),
      Q => s_level_out_bus_d6(12),
      R => '0'
    );
\s_level_out_bus_d6_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(13),
      Q => s_level_out_bus_d6(13),
      R => '0'
    );
\s_level_out_bus_d6_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(14),
      Q => s_level_out_bus_d6(14),
      R => '0'
    );
\s_level_out_bus_d6_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(15),
      Q => s_level_out_bus_d6(15),
      R => '0'
    );
\s_level_out_bus_d6_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(16),
      Q => s_level_out_bus_d6(16),
      R => '0'
    );
\s_level_out_bus_d6_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(17),
      Q => s_level_out_bus_d6(17),
      R => '0'
    );
\s_level_out_bus_d6_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(18),
      Q => s_level_out_bus_d6(18),
      R => '0'
    );
\s_level_out_bus_d6_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(19),
      Q => s_level_out_bus_d6(19),
      R => '0'
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => '0'
    );
\s_level_out_bus_d6_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(20),
      Q => s_level_out_bus_d6(20),
      R => '0'
    );
\s_level_out_bus_d6_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(21),
      Q => s_level_out_bus_d6(21),
      R => '0'
    );
\s_level_out_bus_d6_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(22),
      Q => s_level_out_bus_d6(22),
      R => '0'
    );
\s_level_out_bus_d6_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(23),
      Q => s_level_out_bus_d6(23),
      R => '0'
    );
\s_level_out_bus_d6_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(24),
      Q => s_level_out_bus_d6(24),
      R => '0'
    );
\s_level_out_bus_d6_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(25),
      Q => s_level_out_bus_d6(25),
      R => '0'
    );
\s_level_out_bus_d6_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(26),
      Q => s_level_out_bus_d6(26),
      R => '0'
    );
\s_level_out_bus_d6_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(27),
      Q => s_level_out_bus_d6(27),
      R => '0'
    );
\s_level_out_bus_d6_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(28),
      Q => s_level_out_bus_d6(28),
      R => '0'
    );
\s_level_out_bus_d6_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(29),
      Q => s_level_out_bus_d6(29),
      R => '0'
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => '0'
    );
\s_level_out_bus_d6_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(30),
      Q => s_level_out_bus_d6(30),
      R => '0'
    );
\s_level_out_bus_d6_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(31),
      Q => s_level_out_bus_d6(31),
      R => '0'
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => '0'
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => '0'
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => '0'
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => '0'
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => '0'
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => '0'
    );
\s_level_out_bus_d6_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(9),
      Q => s_level_out_bus_d6(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8\ is
  port (
    S : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \settle_cnt_reg[0]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \settle_cnt_reg[0]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \settle_cnt_reg[0]_1\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \settle_cnt_reg[0]_2\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \settle_cnt_reg[0]_3\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \settle_cnt_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    system_rst_reg : in STD_LOGIC;
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\ : in STD_LOGIC_VECTOR ( 8 downto 0 );
    core_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8\ is
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  signal time_out_settle0_carry_i_10_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_11_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_12_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_13_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_14_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_15_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_16_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_17_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_18_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_19_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_20_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_21_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_5_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_6_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_7_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_8_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_i_9_n_0 : STD_LOGIC;
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d1_cdc_to_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d2_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d2_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d2_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d3_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d3_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d3_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d4_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d4_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d4_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d5_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d5_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d5_reg[8]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[0]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[0]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[0]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[1]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[1]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[1]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[2]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[2]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[2]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[3]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[3]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[3]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[4]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[4]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[4]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[5]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[5]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[5]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[6]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[6]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[6]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[7]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[7]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[7]\ : label is "{no}";
  attribute ASYNC_REG_boolean of \s_level_out_bus_d6_reg[8]\ : label is std.standard.true;
  attribute KEEP of \s_level_out_bus_d6_reg[8]\ : label is "yes";
  attribute shift_extract of \s_level_out_bus_d6_reg[8]\ : label is "{no}";
begin
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d4
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d5
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d6
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d1_cdc_to
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d2
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_d3
    );
\s_level_out_bus_d1_cdc_to_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(0),
      Q => s_level_out_bus_d1_cdc_to(0),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(1),
      Q => s_level_out_bus_d1_cdc_to(1),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(2),
      Q => s_level_out_bus_d1_cdc_to(2),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(3),
      Q => s_level_out_bus_d1_cdc_to(3),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(4),
      Q => s_level_out_bus_d1_cdc_to(4),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(5),
      Q => s_level_out_bus_d1_cdc_to(5),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(6),
      Q => s_level_out_bus_d1_cdc_to(6),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(7),
      Q => s_level_out_bus_d1_cdc_to(7),
      R => system_rst_reg
    );
\s_level_out_bus_d1_cdc_to_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(8),
      Q => s_level_out_bus_d1_cdc_to(8),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(0),
      Q => s_level_out_bus_d2(0),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(1),
      Q => s_level_out_bus_d2(1),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(2),
      Q => s_level_out_bus_d2(2),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(3),
      Q => s_level_out_bus_d2(3),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(4),
      Q => s_level_out_bus_d2(4),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(5),
      Q => s_level_out_bus_d2(5),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(6),
      Q => s_level_out_bus_d2(6),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(7),
      Q => s_level_out_bus_d2(7),
      R => system_rst_reg
    );
\s_level_out_bus_d2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d1_cdc_to(8),
      Q => s_level_out_bus_d2(8),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(0),
      Q => s_level_out_bus_d3(0),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(1),
      Q => s_level_out_bus_d3(1),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(2),
      Q => s_level_out_bus_d3(2),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(3),
      Q => s_level_out_bus_d3(3),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(4),
      Q => s_level_out_bus_d3(4),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(5),
      Q => s_level_out_bus_d3(5),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(6),
      Q => s_level_out_bus_d3(6),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(7),
      Q => s_level_out_bus_d3(7),
      R => system_rst_reg
    );
\s_level_out_bus_d3_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d2(8),
      Q => s_level_out_bus_d3(8),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(0),
      Q => s_level_out_bus_d4(0),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(1),
      Q => s_level_out_bus_d4(1),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(2),
      Q => s_level_out_bus_d4(2),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(3),
      Q => s_level_out_bus_d4(3),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(4),
      Q => s_level_out_bus_d4(4),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(5),
      Q => s_level_out_bus_d4(5),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(6),
      Q => s_level_out_bus_d4(6),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(7),
      Q => s_level_out_bus_d4(7),
      R => system_rst_reg
    );
\s_level_out_bus_d4_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d3(8),
      Q => s_level_out_bus_d4(8),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(0),
      Q => s_level_out_bus_d5(0),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(1),
      Q => s_level_out_bus_d5(1),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(2),
      Q => s_level_out_bus_d5(2),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(3),
      Q => s_level_out_bus_d5(3),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(4),
      Q => s_level_out_bus_d5(4),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(5),
      Q => s_level_out_bus_d5(5),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(6),
      Q => s_level_out_bus_d5(6),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(7),
      Q => s_level_out_bus_d5(7),
      R => system_rst_reg
    );
\s_level_out_bus_d5_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d4(8),
      Q => s_level_out_bus_d5(8),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(0),
      Q => s_level_out_bus_d6(0),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(1),
      Q => s_level_out_bus_d6(1),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(2),
      Q => s_level_out_bus_d6(2),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(3),
      Q => s_level_out_bus_d6(3),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(4),
      Q => s_level_out_bus_d6(4),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(5),
      Q => s_level_out_bus_d6(5),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(6),
      Q => s_level_out_bus_d6(6),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(7),
      Q => s_level_out_bus_d6(7),
      R => system_rst_reg
    );
\s_level_out_bus_d6_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => s_level_out_bus_d5(8),
      Q => s_level_out_bus_d6(8),
      R => system_rst_reg
    );
\time_out_settle0_carry__0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_1\(3)
    );
\time_out_settle0_carry__0_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_3\(3)
    );
\time_out_settle0_carry__0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_1\(2)
    );
\time_out_settle0_carry__0_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_3\(2)
    );
\time_out_settle0_carry__0_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_1\(1)
    );
\time_out_settle0_carry__0_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_3\(1)
    );
\time_out_settle0_carry__0_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_1\(0)
    );
\time_out_settle0_carry__0_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_3\(0)
    );
\time_out_settle0_carry__1_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_0\(2)
    );
\time_out_settle0_carry__1_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_2\(2)
    );
\time_out_settle0_carry__1_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_2\(1)
    );
\time_out_settle0_carry__1_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_0\(1)
    );
\time_out_settle0_carry__1_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_2\(0)
    );
\time_out_settle0_carry__1_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]_0\(0)
    );
time_out_settle0_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => S(3)
    );
time_out_settle0_carry_i_10: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => time_out_settle0_carry_i_17_n_0,
      I1 => time_out_settle0_carry_i_16_n_0,
      I2 => time_out_settle0_carry_i_15_n_0,
      O => time_out_settle0_carry_i_10_n_0
    );
time_out_settle0_carry_i_11: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => time_out_settle0_carry_i_15_n_0,
      I1 => time_out_settle0_carry_i_16_n_0,
      O => time_out_settle0_carry_i_11_n_0
    );
time_out_settle0_carry_i_12: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DD55D5DDAA22882A"
    )
        port map (
      I0 => time_out_settle0_carry_i_14_n_0,
      I1 => time_out_settle0_carry_i_18_n_0,
      I2 => s_level_out_bus_d3(0),
      I3 => s_level_out_bus_d3(2),
      I4 => s_level_out_bus_d3(1),
      I5 => time_out_settle0_carry_i_19_n_0,
      O => time_out_settle0_carry_i_12_n_0
    );
time_out_settle0_carry_i_13: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4ED45ED55485D48D"
    )
        port map (
      I0 => time_out_settle0_carry_i_18_n_0,
      I1 => time_out_settle0_carry_i_14_n_0,
      I2 => s_level_out_bus_d3(2),
      I3 => time_out_settle0_carry_i_19_n_0,
      I4 => s_level_out_bus_d3(0),
      I5 => s_level_out_bus_d3(1),
      O => time_out_settle0_carry_i_13_n_0
    );
time_out_settle0_carry_i_14: unisim.vcomponents.LUT6
    generic map(
      INIT => X"662B4400FFDD2B99"
    )
        port map (
      I0 => s_level_out_bus_d3(3),
      I1 => time_out_settle0_carry_i_15_n_0,
      I2 => s_level_out_bus_d3(1),
      I3 => s_level_out_bus_d3(2),
      I4 => time_out_settle0_carry_i_19_n_0,
      I5 => time_out_settle0_carry_i_20_n_0,
      O => time_out_settle0_carry_i_14_n_0
    );
time_out_settle0_carry_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A56186A5A7E59EA7"
    )
        port map (
      I0 => s_level_out_bus_d3(5),
      I1 => s_level_out_bus_d3(8),
      I2 => s_level_out_bus_d3(7),
      I3 => s_level_out_bus_d3(6),
      I4 => s_level_out_bus_d3(4),
      I5 => s_level_out_bus_d3(3),
      O => time_out_settle0_carry_i_15_n_0
    );
time_out_settle0_carry_i_16: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAA22882A"
    )
        port map (
      I0 => time_out_settle0_carry_i_14_n_0,
      I1 => time_out_settle0_carry_i_18_n_0,
      I2 => s_level_out_bus_d3(0),
      I3 => s_level_out_bus_d3(2),
      I4 => s_level_out_bus_d3(1),
      I5 => time_out_settle0_carry_i_19_n_0,
      O => time_out_settle0_carry_i_16_n_0
    );
time_out_settle0_carry_i_17: unisim.vcomponents.LUT5
    generic map(
      INIT => X"9C23BD63"
    )
        port map (
      I0 => s_level_out_bus_d3(5),
      I1 => s_level_out_bus_d3(8),
      I2 => s_level_out_bus_d3(7),
      I3 => s_level_out_bus_d3(6),
      I4 => s_level_out_bus_d3(4),
      O => time_out_settle0_carry_i_17_n_0
    );
time_out_settle0_carry_i_18: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => time_out_settle0_carry_i_15_n_0,
      I1 => s_level_out_bus_d3(2),
      I2 => s_level_out_bus_d3(3),
      O => time_out_settle0_carry_i_18_n_0
    );
time_out_settle0_carry_i_19: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3C4D3000FFF34DC3"
    )
        port map (
      I0 => s_level_out_bus_d3(2),
      I1 => s_level_out_bus_d3(4),
      I2 => time_out_settle0_carry_i_17_n_0,
      I3 => s_level_out_bus_d3(3),
      I4 => time_out_settle0_carry_i_15_n_0,
      I5 => time_out_settle0_carry_i_21_n_0,
      O => time_out_settle0_carry_i_19_n_0
    );
\time_out_settle0_carry_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFAFFFFFFEA"
    )
        port map (
      I0 => time_out_settle0_carry_i_5_n_0,
      I1 => s_level_out_bus_d3(4),
      I2 => s_level_out_bus_d3(6),
      I3 => s_level_out_bus_d3(7),
      I4 => s_level_out_bus_d3(8),
      I5 => s_level_out_bus_d3(5),
      O => \settle_cnt_reg[0]\(3)
    );
time_out_settle0_carry_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44401114"
    )
        port map (
      I0 => \settle_cnt_reg[7]\(7),
      I1 => time_out_settle0_carry_i_6_n_0,
      I2 => time_out_settle0_carry_i_7_n_0,
      I3 => time_out_settle0_carry_i_8_n_0,
      I4 => \settle_cnt_reg[7]\(6),
      O => \settle_cnt_reg[0]\(2)
    );
time_out_settle0_carry_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"63DCBD639C23429C"
    )
        port map (
      I0 => s_level_out_bus_d3(5),
      I1 => s_level_out_bus_d3(8),
      I2 => s_level_out_bus_d3(7),
      I3 => s_level_out_bus_d3(6),
      I4 => s_level_out_bus_d3(4),
      I5 => s_level_out_bus_d3(3),
      O => time_out_settle0_carry_i_20_n_0
    );
time_out_settle0_carry_i_21: unisim.vcomponents.LUT5
    generic map(
      INIT => X"96A5A96A"
    )
        port map (
      I0 => s_level_out_bus_d3(4),
      I1 => s_level_out_bus_d3(6),
      I2 => s_level_out_bus_d3(7),
      I3 => s_level_out_bus_d3(8),
      I4 => s_level_out_bus_d3(5),
      O => time_out_settle0_carry_i_21_n_0
    );
\time_out_settle0_carry_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44401114"
    )
        port map (
      I0 => Q(7),
      I1 => time_out_settle0_carry_i_6_n_0,
      I2 => time_out_settle0_carry_i_7_n_0,
      I3 => time_out_settle0_carry_i_8_n_0,
      I4 => Q(6),
      O => S(2)
    );
time_out_settle0_carry_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000066006600000"
    )
        port map (
      I0 => time_out_settle0_carry_i_9_n_0,
      I1 => \settle_cnt_reg[7]\(5),
      I2 => \settle_cnt_reg[7]\(4),
      I3 => time_out_settle0_carry_i_10_n_0,
      I4 => \settle_cnt_reg[7]\(3),
      I5 => time_out_settle0_carry_i_11_n_0,
      O => \settle_cnt_reg[0]\(1)
    );
\time_out_settle0_carry_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000066006600000"
    )
        port map (
      I0 => time_out_settle0_carry_i_9_n_0,
      I1 => Q(5),
      I2 => Q(4),
      I3 => time_out_settle0_carry_i_10_n_0,
      I4 => Q(3),
      I5 => time_out_settle0_carry_i_11_n_0,
      O => S(1)
    );
time_out_settle0_carry_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000090000090090"
    )
        port map (
      I0 => time_out_settle0_carry_i_12_n_0,
      I1 => Q(2),
      I2 => Q(1),
      I3 => time_out_settle0_carry_i_13_n_0,
      I4 => time_out_settle0_carry_i_14_n_0,
      I5 => Q(0),
      O => S(0)
    );
\time_out_settle0_carry_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000090000090090"
    )
        port map (
      I0 => time_out_settle0_carry_i_12_n_0,
      I1 => \settle_cnt_reg[7]\(2),
      I2 => \settle_cnt_reg[7]\(1),
      I3 => time_out_settle0_carry_i_13_n_0,
      I4 => time_out_settle0_carry_i_14_n_0,
      I5 => \settle_cnt_reg[7]\(0),
      O => \settle_cnt_reg[0]\(0)
    );
time_out_settle0_carry_i_5: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => time_out_settle0_carry_i_15_n_0,
      I1 => time_out_settle0_carry_i_16_n_0,
      O => time_out_settle0_carry_i_5_n_0
    );
time_out_settle0_carry_i_6: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => s_level_out_bus_d3(8),
      I1 => s_level_out_bus_d3(6),
      I2 => s_level_out_bus_d3(7),
      O => time_out_settle0_carry_i_6_n_0
    );
time_out_settle0_carry_i_7: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => time_out_settle0_carry_i_16_n_0,
      I1 => time_out_settle0_carry_i_15_n_0,
      I2 => time_out_settle0_carry_i_17_n_0,
      O => time_out_settle0_carry_i_7_n_0
    );
time_out_settle0_carry_i_8: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9C18"
    )
        port map (
      I0 => s_level_out_bus_d3(6),
      I1 => s_level_out_bus_d3(7),
      I2 => s_level_out_bus_d3(8),
      I3 => s_level_out_bus_d3(5),
      O => time_out_settle0_carry_i_8_n_0
    );
time_out_settle0_carry_i_9: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9555"
    )
        port map (
      I0 => time_out_settle0_carry_i_8_n_0,
      I1 => time_out_settle0_carry_i_17_n_0,
      I2 => time_out_settle0_carry_i_15_n_0,
      I3 => time_out_settle0_carry_i_16_n_0,
      O => time_out_settle0_carry_i_9_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9\ is
  port (
    s_level_out_d4_reg_0 : out STD_LOGIC;
    \out\ : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9\ : entity is "mipi_dphy_v4_0_1_rx_sync_cell";
end \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9\;

architecture STRUCTURE of \bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9\ is
  signal p_level_in_int : STD_LOGIC;
  signal s_level_out_bus_d1_cdc_to : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of s_level_out_bus_d1_cdc_to : signal is "true";
  attribute shift_extract : string;
  attribute shift_extract of s_level_out_bus_d1_cdc_to : signal is "{no}";
  signal s_level_out_bus_d2 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d2 : signal is "true";
  attribute shift_extract of s_level_out_bus_d2 : signal is "{no}";
  signal s_level_out_bus_d3 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d3 : signal is "true";
  attribute shift_extract of s_level_out_bus_d3 : signal is "{no}";
  signal s_level_out_bus_d4 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d4 : signal is "true";
  attribute shift_extract of s_level_out_bus_d4 : signal is "{no}";
  signal s_level_out_bus_d5 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d5 : signal is "true";
  attribute shift_extract of s_level_out_bus_d5 : signal is "{no}";
  signal s_level_out_bus_d6 : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg of s_level_out_bus_d6 : signal is "true";
  attribute shift_extract of s_level_out_bus_d6 : signal is "{no}";
  signal s_level_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_level_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_level_out_d1_cdc_to : signal is "{no}";
  signal s_level_out_d2 : STD_LOGIC;
  attribute async_reg of s_level_out_d2 : signal is "true";
  attribute shift_extract of s_level_out_d2 : signal is "{no}";
  signal s_level_out_d3 : STD_LOGIC;
  attribute async_reg of s_level_out_d3 : signal is "true";
  attribute shift_extract of s_level_out_d3 : signal is "{no}";
  signal s_level_out_d4 : STD_LOGIC;
  attribute async_reg of s_level_out_d4 : signal is "true";
  attribute shift_extract of s_level_out_d4 : signal is "{no}";
  signal s_level_out_d5 : STD_LOGIC;
  attribute async_reg of s_level_out_d5 : signal is "true";
  attribute shift_extract of s_level_out_d5 : signal is "{no}";
  signal s_level_out_d6 : STD_LOGIC;
  attribute async_reg of s_level_out_d6 : signal is "true";
  attribute shift_extract of s_level_out_d6 : signal is "{no}";
  signal s_out_d1_cdc_to : STD_LOGIC;
  attribute async_reg of s_out_d1_cdc_to : signal is "true";
  attribute shift_extract of s_out_d1_cdc_to : signal is "{no}";
  signal s_out_d2 : STD_LOGIC;
  attribute async_reg of s_out_d2 : signal is "true";
  attribute shift_extract of s_out_d2 : signal is "{no}";
  signal s_out_d3 : STD_LOGIC;
  attribute async_reg of s_out_d3 : signal is "true";
  attribute shift_extract of s_out_d3 : signal is "{no}";
  signal s_out_d4 : STD_LOGIC;
  attribute async_reg of s_out_d4 : signal is "true";
  attribute shift_extract of s_out_d4 : signal is "{no}";
  signal s_out_d5 : STD_LOGIC;
  attribute async_reg of s_out_d5 : signal is "true";
  attribute shift_extract of s_out_d5 : signal is "{no}";
  signal s_out_d6 : STD_LOGIC;
  attribute async_reg of s_out_d6 : signal is "true";
  attribute shift_extract of s_out_d6 : signal is "{no}";
  signal s_out_d7 : STD_LOGIC;
  attribute async_reg of s_out_d7 : signal is "true";
  attribute shift_extract of s_out_d7 : signal is "{no}";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of s_level_out_d1_cdc_to_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of s_level_out_d1_cdc_to_reg : label is "yes";
  attribute shift_extract of s_level_out_d1_cdc_to_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d2_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d2_reg : label is "yes";
  attribute shift_extract of s_level_out_d2_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d3_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d3_reg : label is "yes";
  attribute shift_extract of s_level_out_d3_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d4_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d4_reg : label is "yes";
  attribute shift_extract of s_level_out_d4_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d5_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d5_reg : label is "yes";
  attribute shift_extract of s_level_out_d5_reg : label is "{no}";
  attribute ASYNC_REG_boolean of s_level_out_d6_reg : label is std.standard.true;
  attribute KEEP of s_level_out_d6_reg : label is "yes";
  attribute shift_extract of s_level_out_d6_reg : label is "{no}";
begin
  p_level_in_int <= \out\;
  s_level_out_d4_reg_0 <= s_level_out_d3;
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d1_cdc_to
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d2
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(0)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(1)
    );
i_12: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d3(0)
    );
i_13: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(1)
    );
i_14: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d4(0)
    );
i_15: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(1)
    );
i_16: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d5(0)
    );
i_17: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(1)
    );
i_18: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d6(0)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d3
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d4
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d5
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d6
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_out_d7
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(1)
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d1_cdc_to(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => s_level_out_bus_d2(1)
    );
s_level_out_d1_cdc_to_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => p_level_in_int,
      Q => s_level_out_d1_cdc_to,
      R => '0'
    );
s_level_out_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d1_cdc_to,
      Q => s_level_out_d2,
      R => '0'
    );
s_level_out_d3_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d2,
      Q => s_level_out_d3,
      R => '0'
    );
s_level_out_d4_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d3,
      Q => s_level_out_d4,
      R => '0'
    );
s_level_out_d5_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d4,
      Q => s_level_out_d5,
      R => '0'
    );
s_level_out_d6_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => s_level_out_d5,
      Q => s_level_out_d6,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane is
  port (
    \out\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    cl_rxclkactivehs : out STD_LOGIC;
    \s_level_out_bus_d1_cdc_to_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    cl_stopstate : out STD_LOGIC;
    \cl_rx_state_reg[1]_0\ : out STD_LOGIC;
    init_done : out STD_LOGIC;
    dl_status_reg_bit_4_reg : out STD_LOGIC;
    dl_status_reg_bit_4_reg_0 : out STD_LOGIC;
    rx_cl_lp_dn : in STD_LOGIC;
    rx_cl_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    cl_status_reg_bit_0 : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    \s_level_out_bus_d3_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    system_rst_reg : in STD_LOGIC;
    \FSM_sequential_dl_rx_state_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \FSM_sequential_dl_rx_state_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \s_level_out_bus_d3_reg[22]\ : in STD_LOGIC_VECTOR ( 14 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane : entity is "mipi_dphy_v4_0_1_csi_rx_clk_lane";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane is
  signal cl_init_done_coreclk0 : STD_LOGIC;
  signal cl_init_done_coreclk1 : STD_LOGIC;
  signal \cl_init_done_coreclk1_carry__0_i_1_n_0\ : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_i_1_n_0 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_i_2_n_0 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_i_3_n_0 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_i_4_n_0 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_n_0 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_n_1 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_n_2 : STD_LOGIC;
  signal cl_init_done_coreclk1_carry_n_3 : STD_LOGIC;
  signal cl_rx_state : STD_LOGIC;
  signal \^cl_rx_state_reg[1]_0\ : STD_LOGIC;
  signal \cl_rx_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \cl_rx_state_reg_n_0_[1]\ : STD_LOGIC;
  signal \cl_rx_state_reg_n_0_[2]\ : STD_LOGIC;
  signal \^cl_rxclkactivehs\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of cl_rxclkactivehs : signal is "true";
  signal cl_rxclkactivehs1_out : STD_LOGIC;
  signal cl_status_reg_bit_3 : STD_LOGIC;
  signal cl_status_reg_bit_4 : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of cl_status_reg_bit_4 : signal is std.standard.true;
  signal \cl_status_reg_bit_4__0\ : STD_LOGIC;
  signal cl_status_reg_bit_4_i_2_n_0 : STD_LOGIC;
  signal \^cl_stopstate\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level1_reg__0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \en_cl_init_to_blk.init_to_cnt_level1_tc\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level20\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg\ : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_1\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_2\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_3\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \en_init_to_reg.init_reg_nxt\ : STD_LOGIC_VECTOR ( 22 downto 8 );
  signal \en_init_to_reg.init_to_r\ : STD_LOGIC_VECTOR ( 14 downto 0 );
  signal \en_init_to_reg.init_to_r_2\ : STD_LOGIC_VECTOR ( 12 downto 0 );
  signal \en_init_to_reg.init_to_r_2[0]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[0]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[0]_i_3_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[10]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[11]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[12]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[1]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[1]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[2]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[2]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[2]_i_3_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[3]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[3]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[3]_i_3_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[4]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[4]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[5]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[5]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[5]_i_3_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[6]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[6]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[7]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[7]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[7]_i_3_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[7]_i_4_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[8]_i_1_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[8]_i_2_n_0\ : STD_LOGIC;
  signal \en_init_to_reg.init_to_r_2[9]_i_1_n_0\ : STD_LOGIC;
  signal init_count : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \^init_done\ : STD_LOGIC;
  signal lp_00_r : STD_LOGIC;
  signal lp_00_r_i_2_n_0 : STD_LOGIC;
  signal lp_01_r : STD_LOGIC;
  signal lp_01_r_i_1_n_0 : STD_LOGIC;
  signal lp_10_r : STD_LOGIC;
  signal lp_10_r_i_1_n_0 : STD_LOGIC;
  signal lp_11_r : STD_LOGIC;
  signal lp_11_r_dly : STD_LOGIC;
  signal lp_11_r_i_1_n_0 : STD_LOGIC;
  signal lp_11_r_nxt : STD_LOGIC;
  signal lp_11_r_reg_n_0 : STD_LOGIC;
  signal lp_st_cnt : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \lp_st_cnt[4]_i_3_n_0\ : STD_LOGIC;
  signal lp_st_dup : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal lp_state_sync : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal lp_state_sync0_i_n_1 : STD_LOGIC;
  signal lp_state_sync0_i_n_10 : STD_LOGIC;
  signal lp_state_sync0_i_n_11 : STD_LOGIC;
  signal lp_state_sync0_i_n_12 : STD_LOGIC;
  signal lp_state_sync0_i_n_3 : STD_LOGIC;
  signal lp_state_sync0_i_n_4 : STD_LOGIC;
  signal lp_state_sync0_i_n_5 : STD_LOGIC;
  signal lp_state_sync0_i_n_6 : STD_LOGIC;
  signal lp_state_sync0_i_n_7 : STD_LOGIC;
  signal lp_state_sync0_i_n_8 : STD_LOGIC;
  signal lp_state_sync0_i_n_9 : STD_LOGIC;
  signal lp_state_sync1_i_n_5 : STD_LOGIC;
  signal lp_state_sync1_i_n_6 : STD_LOGIC;
  signal lp_state_sync1_i_n_7 : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_0_out : STD_LOGIC_VECTOR ( 1 to 1 );
  signal \^s_level_out_bus_d1_cdc_to_reg[0]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_cl_init_done_coreclk1_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_cl_init_done_coreclk1_carry__0_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_cl_init_done_coreclk1_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  attribute KEEP : string;
  attribute KEEP of cl_rxclkactivehs_reg : label is "yes";
  attribute DONT_TOUCH of cl_status_reg_bit_4_reg : label is std.standard.true;
  attribute KEEP of cl_status_reg_bit_4_reg : label is "yes";
  attribute DONT_TOUCH of \en_cl_init_to_blk.cl_init_done_div4clk_reg\ : label is std.standard.true;
  attribute KEEP of \en_cl_init_to_blk.cl_init_done_div4clk_reg\ : label is "yes";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \en_cl_init_to_blk.init_to_cnt_level1[1]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \en_cl_init_to_blk.init_to_cnt_level1[2]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \en_cl_init_to_blk.init_to_cnt_level1[3]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \en_cl_init_to_blk.init_to_cnt_level1[4]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \en_cl_init_to_blk.init_to_cnt_level1[6]_i_1\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \en_cl_init_to_blk.init_to_cnt_level1[7]_i_2\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[0]_i_3\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[10]_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[11]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[12]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[1]_i_2\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[4]_i_2\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[7]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \en_init_to_reg.init_to_r_2[8]_i_2\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of lp_00_r_i_2 : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of lp_01_r_i_1 : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of lp_10_r_i_1 : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of lp_11_r_i_1 : label is "soft_lutpair9";
begin
  D(0) <= cl_status_reg_bit_4;
  \cl_rx_state_reg[1]_0\ <= \^cl_rx_state_reg[1]_0\;
  cl_rxclkactivehs <= \^cl_rxclkactivehs\;
  cl_stopstate <= \^cl_stopstate\;
  init_done <= \^init_done\;
  \s_level_out_bus_d1_cdc_to_reg[0]\(0) <= \^s_level_out_bus_d1_cdc_to_reg[0]\(0);
\FSM_sequential_dl_rx_state[3]_i_7__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^init_done\,
      I1 => system_rst_reg,
      O => \^cl_rx_state_reg[1]_0\
    );
cl_init_done_coreclk1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => cl_init_done_coreclk1_carry_n_0,
      CO(2) => cl_init_done_coreclk1_carry_n_1,
      CO(1) => cl_init_done_coreclk1_carry_n_2,
      CO(0) => cl_init_done_coreclk1_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_cl_init_done_coreclk1_carry_O_UNCONNECTED(3 downto 0),
      S(3) => cl_init_done_coreclk1_carry_i_1_n_0,
      S(2) => cl_init_done_coreclk1_carry_i_2_n_0,
      S(1) => cl_init_done_coreclk1_carry_i_3_n_0,
      S(0) => cl_init_done_coreclk1_carry_i_4_n_0
    );
\cl_init_done_coreclk1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => cl_init_done_coreclk1_carry_n_0,
      CO(3 downto 1) => \NLW_cl_init_done_coreclk1_carry__0_CO_UNCONNECTED\(3 downto 1),
      CO(0) => cl_init_done_coreclk1,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_cl_init_done_coreclk1_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => B"000",
      S(0) => \cl_init_done_coreclk1_carry__0_i_1_n_0\
    );
\cl_init_done_coreclk1_carry__0_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"41"
    )
        port map (
      I0 => init_count(13),
      I1 => \en_init_to_reg.init_to_r_2\(12),
      I2 => init_count(12),
      O => \cl_init_done_coreclk1_carry__0_i_1_n_0\
    );
cl_init_done_coreclk1_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => init_count(11),
      I1 => \en_init_to_reg.init_to_r_2\(11),
      I2 => init_count(9),
      I3 => \en_init_to_reg.init_to_r_2\(9),
      I4 => \en_init_to_reg.init_to_r_2\(10),
      I5 => init_count(10),
      O => cl_init_done_coreclk1_carry_i_1_n_0
    );
cl_init_done_coreclk1_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => init_count(6),
      I1 => \en_init_to_reg.init_to_r_2\(6),
      I2 => init_count(7),
      I3 => \en_init_to_reg.init_to_r_2\(7),
      I4 => \en_init_to_reg.init_to_r_2\(8),
      I5 => init_count(8),
      O => cl_init_done_coreclk1_carry_i_2_n_0
    );
cl_init_done_coreclk1_carry_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => init_count(3),
      I1 => \en_init_to_reg.init_to_r_2\(3),
      I2 => init_count(4),
      I3 => \en_init_to_reg.init_to_r_2\(4),
      I4 => \en_init_to_reg.init_to_r_2\(5),
      I5 => init_count(5),
      O => cl_init_done_coreclk1_carry_i_3_n_0
    );
cl_init_done_coreclk1_carry_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => init_count(0),
      I1 => \en_init_to_reg.init_to_r_2\(0),
      I2 => init_count(1),
      I3 => \en_init_to_reg.init_to_r_2\(1),
      I4 => \en_init_to_reg.init_to_r_2\(2),
      I5 => init_count(2),
      O => cl_init_done_coreclk1_carry_i_4_n_0
    );
\cl_rx_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_11,
      Q => \cl_rx_state_reg_n_0_[0]\,
      R => cl_status_reg_bit_0
    );
\cl_rx_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_1,
      Q => \cl_rx_state_reg_n_0_[1]\,
      R => '0'
    );
\cl_rx_state_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync1_i_n_7,
      Q => \cl_rx_state_reg_n_0_[2]\,
      R => cl_status_reg_bit_0
    );
cl_rxclkactivehs_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000FF08"
    )
        port map (
      I0 => \cl_rx_state_reg_n_0_[1]\,
      I1 => \cl_rx_state_reg_n_0_[2]\,
      I2 => \cl_rx_state_reg_n_0_[0]\,
      I3 => \^cl_rxclkactivehs\,
      I4 => lp_11_r_reg_n_0,
      I5 => system_rst_reg,
      O => cl_rxclkactivehs1_out
    );
cl_rxclkactivehs_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => cl_rxclkactivehs1_out,
      Q => \^cl_rxclkactivehs\
    );
cl_status_reg_bit_0_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_9,
      Q => \^s_level_out_bus_d1_cdc_to_reg[0]\(0),
      R => cl_status_reg_bit_0
    );
cl_status_reg_bit_4_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \cl_rx_state_reg_n_0_[1]\,
      I1 => \cl_rx_state_reg_n_0_[0]\,
      O => cl_status_reg_bit_4_i_2_n_0
    );
cl_status_reg_bit_4_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \cl_status_reg_bit_4__0\,
      Q => cl_status_reg_bit_4,
      R => cl_status_reg_bit_0
    );
cl_stopstate_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync1_i_n_6,
      Q => \^cl_stopstate\,
      R => cl_status_reg_bit_0
    );
dl_status_reg_bit_4_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^cl_rxclkactivehs\,
      I1 => \FSM_sequential_dl_rx_state_reg[0]\(0),
      O => dl_status_reg_bit_4_reg
    );
\dl_status_reg_bit_4_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^cl_rxclkactivehs\,
      I1 => \FSM_sequential_dl_rx_state_reg[0]_0\(0),
      O => dl_status_reg_bit_4_reg_0
    );
\en_cl_init_to_blk.cl_init_done_coreclk_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_12,
      Q => \^init_done\,
      R => '0'
    );
\en_cl_init_to_blk.cl_init_done_div4clk_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \cl_rx_state_reg_n_0_[0]\,
      I1 => \cl_rx_state_reg_n_0_[1]\,
      I2 => \cl_rx_state_reg_n_0_[2]\,
      O => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.cl_init_done_div4clk_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => cl_init_done_coreclk0,
      D => cl_init_done_coreclk0,
      Q => \out\,
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_count_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(0),
      Q => init_count(0),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(10),
      Q => init_count(10),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(11),
      Q => init_count(11),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(12),
      Q => init_count(12),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(13),
      Q => init_count(13),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(1),
      Q => init_count(1),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(2),
      Q => init_count(2),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(3),
      Q => init_count(3),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(4),
      Q => init_count(4),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(5),
      Q => init_count(5),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(6),
      Q => init_count(6),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(7),
      Q => init_count(7),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(8),
      Q => init_count(8),
      R => '0'
    );
\en_cl_init_to_blk.init_count_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg\(9),
      Q => init_count(9),
      R => '0'
    );
\en_cl_init_to_blk.init_to_cnt_level1[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      O => p_0_in(0)
    );
\en_cl_init_to_blk.init_to_cnt_level1[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      O => p_0_in(1)
    );
\en_cl_init_to_blk.init_to_cnt_level1[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(2),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      O => p_0_in(2)
    );
\en_cl_init_to_blk.init_to_cnt_level1[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(3),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      I3 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(2),
      O => p_0_in(3)
    );
\en_cl_init_to_blk.init_to_cnt_level1[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(4),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(2),
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      I3 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      I4 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(3),
      O => p_0_in(4)
    );
\en_cl_init_to_blk.init_to_cnt_level1[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAAA"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(5),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(3),
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      I3 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      I4 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(2),
      I5 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(4),
      O => p_0_in(5)
    );
\en_cl_init_to_blk.init_to_cnt_level1[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(6),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0\,
      O => p_0_in(6)
    );
\en_cl_init_to_blk.init_to_cnt_level1[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(7),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0\,
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(6),
      O => p_0_in(7)
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(0),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(1),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(2),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(2),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(3),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(3),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(4),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(4),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(5),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(5),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(6),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(6),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => p_0_in(7),
      Q => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(7),
      R => lp_state_sync0_i_n_10
    );
\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(7),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0\,
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(6),
      O => \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0\
    );
\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(5),
      I1 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(3),
      I2 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(0),
      I3 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(1),
      I4 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(2),
      I5 => \en_cl_init_to_blk.init_to_cnt_level1_reg__0\(4),
      O => \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0\
    );
\en_cl_init_to_blk.init_to_cnt_level1_tc_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0\,
      Q => \en_cl_init_to_blk.init_to_cnt_level1_tc\,
      R => '0'
    );
\en_cl_init_to_blk.init_to_cnt_level2[0]_i_3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \en_cl_init_to_blk.init_to_cnt_level2_reg\(0),
      O => \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0\
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(0),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0\,
      CO(2) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_1\,
      CO(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_2\,
      CO(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0001",
      O(3) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4\,
      O(2) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5\,
      O(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6\,
      O(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7\,
      S(3 downto 1) => \en_cl_init_to_blk.init_to_cnt_level2_reg\(3 downto 1),
      S(0) => \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0\
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(10),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(11),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(12),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0\,
      CO(3 downto 1) => \NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 2) => \NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED\(3 downto 2),
      O(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6\,
      O(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7\,
      S(3 downto 2) => B"00",
      S(1 downto 0) => \en_cl_init_to_blk.init_to_cnt_level2_reg\(13 downto 12)
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(13),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(1),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(2),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(3),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(4),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0\,
      CO(3) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0\,
      CO(2) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1\,
      CO(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2\,
      CO(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4\,
      O(2) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5\,
      O(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6\,
      O(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7\,
      S(3 downto 0) => \en_cl_init_to_blk.init_to_cnt_level2_reg\(7 downto 4)
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(5),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(6),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(7),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(8),
      R => cl_status_reg_bit_3
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0\,
      CO(3) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0\,
      CO(2) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1\,
      CO(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2\,
      CO(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4\,
      O(2) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5\,
      O(1) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6\,
      O(0) => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7\,
      S(3 downto 0) => \en_cl_init_to_blk.init_to_cnt_level2_reg\(11 downto 8)
    );
\en_cl_init_to_blk.init_to_cnt_level2_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => \en_cl_init_to_blk.init_to_cnt_level20\,
      D => \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6\,
      Q => \en_cl_init_to_blk.init_to_cnt_level2_reg\(9),
      R => cl_status_reg_bit_3
    );
\en_init_to_reg.init_reg_nxt_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(2),
      Q => \en_init_to_reg.init_reg_nxt\(10),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(3),
      Q => \en_init_to_reg.init_reg_nxt\(11),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(4),
      Q => \en_init_to_reg.init_reg_nxt\(12),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(5),
      Q => \en_init_to_reg.init_reg_nxt\(13),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(6),
      Q => \en_init_to_reg.init_reg_nxt\(14),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(7),
      Q => \en_init_to_reg.init_reg_nxt\(15),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(8),
      Q => \en_init_to_reg.init_reg_nxt\(16),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(9),
      Q => \en_init_to_reg.init_reg_nxt\(17),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(10),
      Q => \en_init_to_reg.init_reg_nxt\(18),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(11),
      Q => \en_init_to_reg.init_reg_nxt\(19),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(12),
      Q => \en_init_to_reg.init_reg_nxt\(20),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(13),
      Q => \en_init_to_reg.init_reg_nxt\(21),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(14),
      Q => \en_init_to_reg.init_reg_nxt\(22),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(0),
      Q => \en_init_to_reg.init_reg_nxt\(8),
      R => '0'
    );
\en_init_to_reg.init_reg_nxt_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \s_level_out_bus_d3_reg[22]\(1),
      Q => \en_init_to_reg.init_reg_nxt\(9),
      R => '0'
    );
\en_init_to_reg.init_to_r_2[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E8BB77EAA81122E8"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r_2[0]_i_2_n_0\,
      I1 => \en_init_to_reg.init_to_r\(1),
      I2 => \en_init_to_reg.init_to_r\(0),
      I3 => \en_init_to_reg.init_to_r_2[2]_i_2_n_0\,
      I4 => \en_init_to_reg.init_to_r\(2),
      I5 => \en_init_to_reg.init_to_r_2[0]_i_3_n_0\,
      O => \en_init_to_reg.init_to_r_2[0]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(3),
      I1 => \en_init_to_reg.init_to_r_2[3]_i_1_n_0\,
      I2 => \en_init_to_reg.init_to_r\(2),
      O => \en_init_to_reg.init_to_r_2[0]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[0]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"936CC936"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(2),
      I1 => \en_init_to_reg.init_to_r_2[4]_i_1_n_0\,
      I2 => \en_init_to_reg.init_to_r\(3),
      I3 => \en_init_to_reg.init_to_r\(4),
      I4 => \en_init_to_reg.init_to_r_2[3]_i_1_n_0\,
      O => \en_init_to_reg.init_to_r_2[0]_i_3_n_0\
    );
\en_init_to_reg.init_to_r_2[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"3CB63492"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(13),
      I1 => \en_init_to_reg.init_to_r\(12),
      I2 => \en_init_to_reg.init_to_r\(14),
      I3 => \en_init_to_reg.init_to_r\(11),
      I4 => \en_init_to_reg.init_to_r\(10),
      O => \en_init_to_reg.init_to_r_2[10]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9C18"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(12),
      I1 => \en_init_to_reg.init_to_r\(13),
      I2 => \en_init_to_reg.init_to_r\(14),
      I3 => \en_init_to_reg.init_to_r\(11),
      O => \en_init_to_reg.init_to_r_2[11]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(14),
      I1 => \en_init_to_reg.init_to_r\(12),
      I2 => \en_init_to_reg.init_to_r\(13),
      O => \en_init_to_reg.init_to_r_2[12]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6671EEFF00887199"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r_2[3]_i_1_n_0\,
      I1 => \en_init_to_reg.init_to_r\(3),
      I2 => \en_init_to_reg.init_to_r\(1),
      I3 => \en_init_to_reg.init_to_r\(2),
      I4 => \en_init_to_reg.init_to_r_2[2]_i_2_n_0\,
      I5 => \en_init_to_reg.init_to_r_2[1]_i_2_n_0\,
      O => \en_init_to_reg.init_to_r_2[1]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[1]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r_2[4]_i_1_n_0\,
      I1 => \en_init_to_reg.init_to_r\(3),
      I2 => \en_init_to_reg.init_to_r\(4),
      O => \en_init_to_reg.init_to_r_2[1]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[2]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r_2[2]_i_2_n_0\,
      O => \en_init_to_reg.init_to_r_2[2]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4E4E155715578D8D"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r_2[2]_i_3_n_0\,
      I1 => \en_init_to_reg.init_to_r\(3),
      I2 => \en_init_to_reg.init_to_r_2[3]_i_1_n_0\,
      I3 => \en_init_to_reg.init_to_r\(2),
      I4 => \en_init_to_reg.init_to_r\(4),
      I5 => \en_init_to_reg.init_to_r_2[4]_i_1_n_0\,
      O => \en_init_to_reg.init_to_r_2[2]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[2]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(5),
      I1 => \en_init_to_reg.init_to_r_2[5]_i_1_n_0\,
      I2 => \en_init_to_reg.init_to_r\(4),
      O => \en_init_to_reg.init_to_r_2[2]_i_3_n_0\
    );
\en_init_to_reg.init_to_r_2[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F6BD56B0F2954290"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(5),
      I1 => \en_init_to_reg.init_to_r\(4),
      I2 => \en_init_to_reg.init_to_r_2[3]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[5]_i_1_n_0\,
      I4 => \en_init_to_reg.init_to_r_2[3]_i_3_n_0\,
      I5 => \en_init_to_reg.init_to_r\(3),
      O => \en_init_to_reg.init_to_r_2[3]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7F0380FCC0FE3F01"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(7),
      I1 => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\,
      I2 => \en_init_to_reg.init_to_r_2[5]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[5]_i_3_n_0\,
      I4 => \en_init_to_reg.init_to_r\(5),
      I5 => \en_init_to_reg.init_to_r\(6),
      O => \en_init_to_reg.init_to_r_2[3]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"29633C6969C3396B"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(5),
      I1 => \en_init_to_reg.init_to_r\(7),
      I2 => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r\(6),
      I4 => \en_init_to_reg.init_to_r_2[5]_i_3_n_0\,
      I5 => \en_init_to_reg.init_to_r_2[5]_i_2_n_0\,
      O => \en_init_to_reg.init_to_r_2[3]_i_3_n_0\
    );
\en_init_to_reg.init_to_r_2[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F6BD52B0F2B54290"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(6),
      I1 => \en_init_to_reg.init_to_r\(5),
      I2 => \en_init_to_reg.init_to_r_2[4]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[6]_i_1_n_0\,
      I4 => \en_init_to_reg.init_to_r_2[5]_i_1_n_0\,
      I5 => \en_init_to_reg.init_to_r\(4),
      O => \en_init_to_reg.init_to_r_2[4]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[4]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(7),
      I1 => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\,
      I2 => \en_init_to_reg.init_to_r\(6),
      O => \en_init_to_reg.init_to_r_2[4]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFD6B5069F529402"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(7),
      I1 => \en_init_to_reg.init_to_r\(6),
      I2 => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[5]_i_2_n_0\,
      I4 => \en_init_to_reg.init_to_r_2[5]_i_3_n_0\,
      I5 => \en_init_to_reg.init_to_r\(5),
      O => \en_init_to_reg.init_to_r_2[5]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FDC0023F03BFFC40"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(9),
      I1 => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\,
      I2 => \en_init_to_reg.init_to_r_2[7]_i_4_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[7]_i_3_n_0\,
      I4 => \en_init_to_reg.init_to_r\(7),
      I5 => \en_init_to_reg.init_to_r\(8),
      O => \en_init_to_reg.init_to_r_2[5]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[5]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"963C93B69236C396"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(7),
      I1 => \en_init_to_reg.init_to_r\(9),
      I2 => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\,
      I3 => \en_init_to_reg.init_to_r\(8),
      I4 => \en_init_to_reg.init_to_r_2[7]_i_3_n_0\,
      I5 => \en_init_to_reg.init_to_r_2[7]_i_4_n_0\,
      O => \en_init_to_reg.init_to_r_2[5]_i_3_n_0\
    );
\en_init_to_reg.init_to_r_2[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"52B0F6BD4290F2B5"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(8),
      I1 => \en_init_to_reg.init_to_r\(7),
      I2 => \en_init_to_reg.init_to_r_2[6]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[8]_i_1_n_0\,
      I4 => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\,
      I5 => \en_init_to_reg.init_to_r\(6),
      O => \en_init_to_reg.init_to_r_2[6]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[6]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(9),
      I1 => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\,
      I2 => \en_init_to_reg.init_to_r\(8),
      O => \en_init_to_reg.init_to_r_2[6]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[7]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\,
      O => \en_init_to_reg.init_to_r_2[7]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CC0F7F1177010FCC"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(7),
      I1 => \en_init_to_reg.init_to_r\(8),
      I2 => \en_init_to_reg.init_to_r_2[7]_i_3_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[7]_i_4_n_0\,
      I4 => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\,
      I5 => \en_init_to_reg.init_to_r\(9),
      O => \en_init_to_reg.init_to_r_2[7]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E718AE718AE718AE"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(9),
      I1 => \en_init_to_reg.init_to_r\(10),
      I2 => \en_init_to_reg.init_to_r\(12),
      I3 => \en_init_to_reg.init_to_r\(13),
      I4 => \en_init_to_reg.init_to_r\(14),
      I5 => \en_init_to_reg.init_to_r\(11),
      O => \en_init_to_reg.init_to_r_2[7]_i_3_n_0\
    );
\en_init_to_reg.init_to_r_2[7]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A55A65965A659659"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(9),
      I1 => \en_init_to_reg.init_to_r\(13),
      I2 => \en_init_to_reg.init_to_r\(12),
      I3 => \en_init_to_reg.init_to_r\(14),
      I4 => \en_init_to_reg.init_to_r\(11),
      I5 => \en_init_to_reg.init_to_r\(10),
      O => \en_init_to_reg.init_to_r_2[7]_i_4_n_0\
    );
\en_init_to_reg.init_to_r_2[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FDB250B2F5B2409"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(10),
      I1 => \en_init_to_reg.init_to_r\(9),
      I2 => \en_init_to_reg.init_to_r_2[8]_i_2_n_0\,
      I3 => \en_init_to_reg.init_to_r_2[10]_i_1_n_0\,
      I4 => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\,
      I5 => \en_init_to_reg.init_to_r\(8),
      O => \en_init_to_reg.init_to_r_2[8]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2[8]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"695A5695"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(10),
      I1 => \en_init_to_reg.init_to_r\(12),
      I2 => \en_init_to_reg.init_to_r\(13),
      I3 => \en_init_to_reg.init_to_r\(14),
      I4 => \en_init_to_reg.init_to_r\(11),
      O => \en_init_to_reg.init_to_r_2[8]_i_2_n_0\
    );
\en_init_to_reg.init_to_r_2[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5A9E795A581A6158"
    )
        port map (
      I0 => \en_init_to_reg.init_to_r\(11),
      I1 => \en_init_to_reg.init_to_r\(14),
      I2 => \en_init_to_reg.init_to_r\(13),
      I3 => \en_init_to_reg.init_to_r\(12),
      I4 => \en_init_to_reg.init_to_r\(10),
      I5 => \en_init_to_reg.init_to_r\(9),
      O => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\
    );
\en_init_to_reg.init_to_r_2_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[0]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(0),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[10]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(10),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[11]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(11),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[12]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(12),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[1]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(1),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[2]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(2),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[3]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(3),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[4]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(4),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[5]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(5),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[6]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(6),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[7]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(7),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[8]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(8),
      R => '0'
    );
\en_init_to_reg.init_to_r_2_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_to_r_2[9]_i_1_n_0\,
      Q => \en_init_to_reg.init_to_r_2\(9),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(8),
      Q => \en_init_to_reg.init_to_r\(0),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(18),
      Q => \en_init_to_reg.init_to_r\(10),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(19),
      Q => \en_init_to_reg.init_to_r\(11),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(20),
      Q => \en_init_to_reg.init_to_r\(12),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(21),
      Q => \en_init_to_reg.init_to_r\(13),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(22),
      Q => \en_init_to_reg.init_to_r\(14),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(9),
      Q => \en_init_to_reg.init_to_r\(1),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(10),
      Q => \en_init_to_reg.init_to_r\(2),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(11),
      Q => \en_init_to_reg.init_to_r\(3),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(12),
      Q => \en_init_to_reg.init_to_r\(4),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(13),
      Q => \en_init_to_reg.init_to_r\(5),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(14),
      Q => \en_init_to_reg.init_to_r\(6),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(15),
      Q => \en_init_to_reg.init_to_r\(7),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(16),
      Q => \en_init_to_reg.init_to_r\(8),
      R => '0'
    );
\en_init_to_reg.init_to_r_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \en_init_to_reg.init_reg_nxt\(17),
      Q => \en_init_to_reg.init_to_r\(9),
      R => '0'
    );
lp_00_r_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFEFF"
    )
        port map (
      I0 => lp_st_cnt(3),
      I1 => lp_st_cnt(4),
      I2 => lp_st_cnt(2),
      I3 => lp_st_cnt(1),
      I4 => lp_st_cnt(0),
      O => lp_11_r
    );
lp_00_r_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => lp_00_r_i_2_n_0
    );
lp_00_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_00_r_i_2_n_0,
      Q => lp_00_r,
      R => lp_11_r
    );
lp_01_r_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => lp_01_r_i_1_n_0
    );
lp_01_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_01_r_i_1_n_0,
      Q => lp_01_r,
      R => lp_11_r
    );
lp_10_r_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => lp_st_dup(1),
      I1 => lp_st_dup(0),
      O => lp_10_r_i_1_n_0
    );
lp_10_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_10_r_i_1_n_0,
      Q => lp_10_r,
      R => lp_11_r
    );
lp_11_r_dly_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_nxt,
      Q => lp_11_r_dly,
      R => '0'
    );
lp_11_r_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => lp_11_r_i_1_n_0
    );
lp_11_r_nxt_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_reg_n_0,
      Q => lp_11_r_nxt,
      R => '0'
    );
lp_11_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_i_1_n_0,
      Q => lp_11_r_reg_n_0,
      R => lp_11_r
    );
\lp_st_cnt[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => lp_00_r,
      I1 => lp_10_r,
      I2 => lp_01_r,
      I3 => lp_11_r_reg_n_0,
      O => \lp_st_cnt[4]_i_3_n_0\
    );
\lp_st_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_8,
      Q => lp_st_cnt(0),
      R => '0'
    );
\lp_st_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_7,
      Q => lp_st_cnt(1),
      R => '0'
    );
\lp_st_cnt_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_6,
      Q => lp_st_cnt(2),
      R => '0'
    );
\lp_st_cnt_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_5,
      Q => lp_st_cnt(3),
      R => '0'
    );
\lp_st_cnt_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync0_i_n_4,
      Q => lp_st_cnt(4),
      R => '0'
    );
\lp_st_dup_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync(0),
      Q => lp_st_dup(0),
      R => '0'
    );
\lp_st_dup_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync(1),
      Q => lp_st_dup(1),
      R => '0'
    );
lp_state_sync0_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26\
     port map (
      CO(0) => cl_init_done_coreclk1,
      D(4) => lp_state_sync0_i_n_4,
      D(3) => lp_state_sync0_i_n_5,
      D(2) => lp_state_sync0_i_n_6,
      D(1) => lp_state_sync0_i_n_7,
      D(0) => lp_state_sync0_i_n_8,
      Q(4 downto 0) => lp_st_cnt(4 downto 0),
      SR(0) => lp_state_sync0_i_n_10,
      cl_rx_state => cl_rx_state,
      \cl_rx_state_reg[0]\ => lp_state_sync0_i_n_11,
      \cl_rx_state_reg[0]_0\ => \cl_rx_state_reg_n_0_[0]\,
      \cl_rx_state_reg[1]\ => lp_state_sync0_i_n_1,
      \cl_rx_state_reg[1]_0\ => \cl_rx_state_reg_n_0_[1]\,
      \cl_rx_state_reg[2]\ => \cl_rx_state_reg_n_0_[2]\,
      cl_status_reg_bit_0_reg => lp_state_sync0_i_n_9,
      cl_status_reg_bit_0_reg_0(0) => \^s_level_out_bus_d1_cdc_to_reg[0]\(0),
      cl_stopstate_reg => lp_state_sync0_i_n_3,
      core_clk => core_clk,
      core_rst => core_rst,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => lp_state_sync0_i_n_12,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \^cl_rx_state_reg[1]_0\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_1\ => \^init_done\,
      lp_00_r_reg => \lp_st_cnt[4]_i_3_n_0\,
      lp_11_r_reg => lp_state_sync1_i_n_5,
      lp_11_r_reg_0 => lp_11_r_reg_n_0,
      \lp_st_dup_reg[1]\(1 downto 0) => lp_st_dup(1 downto 0),
      \out\ => lp_state_sync(0),
      p_0_out(0) => p_0_out(1),
      rx_cl_lp_dn => rx_cl_lp_dn,
      \s_level_out_bus_d3_reg[1]\(0) => \s_level_out_bus_d3_reg[1]\(0),
      s_level_out_d2_reg_0 => lp_state_sync(1)
    );
lp_state_sync1_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27\
     port map (
      CO(0) => cl_init_done_coreclk1,
      D(0) => cl_status_reg_bit_4,
      cl_init_done_coreclk0 => cl_init_done_coreclk0,
      cl_rx_state => cl_rx_state,
      \cl_rx_state_reg[0]\ => \cl_rx_state_reg_n_0_[0]\,
      \cl_rx_state_reg[0]_0\ => lp_state_sync0_i_n_3,
      \cl_rx_state_reg[1]\ => lp_state_sync1_i_n_5,
      \cl_rx_state_reg[1]_0\ => \cl_rx_state_reg_n_0_[1]\,
      \cl_rx_state_reg[1]_1\ => cl_status_reg_bit_4_i_2_n_0,
      \cl_rx_state_reg[2]\ => lp_state_sync1_i_n_7,
      \cl_rx_state_reg[2]_0\ => \cl_rx_state_reg_n_0_[2]\,
      \cl_status_reg_bit_4__0\ => \cl_status_reg_bit_4__0\,
      cl_stopstate => \^cl_stopstate\,
      cl_stopstate_reg => lp_state_sync1_i_n_6,
      core_clk => core_clk,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \^init_done\,
      \en_cl_init_to_blk.init_to_cnt_level1_tc\ => \en_cl_init_to_blk.init_to_cnt_level1_tc\,
      \en_cl_init_to_blk.init_to_cnt_level20\ => \en_cl_init_to_blk.init_to_cnt_level20\,
      lp_11_r_dly => lp_11_r_dly,
      lp_11_r_reg => lp_11_r_reg_n_0,
      \out\ => lp_state_sync(1),
      p_0_out(0) => p_0_out(1),
      rx_cl_lp_dp => rx_cl_lp_dp,
      s_level_out_d2_reg_0 => lp_state_sync(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm is
  port (
    dl_status_reg : out STD_LOGIC_VECTOR ( 2 downto 0 );
    dl_en_hs_lpn_i : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl_en_hs_lpn_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_hs_high_rates.stopstate_reg\ : out STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[0]\ : out STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[1]\ : out STD_LOGIC;
    rx_dl1_lp_dn : in STD_LOGIC;
    rx_dl1_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \s_level_out_bus_d3_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]_1\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    core_rst : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    cl_rxclkactivehs_reg_0 : in STD_LOGIC;
    \active_sm_r__2\ : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[1]_0\ : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[0]_0\ : in STD_LOGIC;
    dl1_stopstate : in STD_LOGIC;
    \gen_hs_high_rates.active_sm_r_reg\ : in STD_LOGIC;
    stop_state_extn_r : in STD_LOGIC;
    s_level_out_d2_reg : in STD_LOGIC;
    rxactivehs_coreclk_sync_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm : entity is "mipi_dphy_v4_0_1_csi_rx_data_lane_sm";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm is
  signal \FSM_sequential_dl_rx_state[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[1]_i_3__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[2]_i_3__0_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_6__0_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^dl_en_hs_lpn_i\ : STD_LOGIC;
  signal \dl_en_hs_lpn_i_2__0_n_0\ : STD_LOGIC;
  signal \dl_en_hs_lpn_i_5__0_n_0\ : STD_LOGIC;
  signal \^dl_en_hs_lpn_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \^dl_en_hs_lpn_reg_0\ : signal is "yes";
  signal dl_rx_state : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute RTL_KEEP of dl_rx_state : signal is "yes";
  signal \^dl_status_reg\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \dl_status_reg_bit_0_i_3__0_n_0\ : STD_LOGIC;
  signal dl_stopstate : STD_LOGIC;
  signal \gen_hs_high_rates.dl_state[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stopstate_i_2_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stopstate_i_4__0_n_0\ : STD_LOGIC;
  signal lp_00_r : STD_LOGIC;
  signal \lp_00_r_i_2__1_n_0\ : STD_LOGIC;
  signal lp_01_r : STD_LOGIC;
  signal \lp_01_r_i_1__1_n_0\ : STD_LOGIC;
  signal lp_10_r : STD_LOGIC;
  signal \lp_10_r_i_1__1_n_0\ : STD_LOGIC;
  signal lp_11_r : STD_LOGIC;
  signal lp_11_r_dly : STD_LOGIC;
  signal \lp_11_r_i_1__1_n_0\ : STD_LOGIC;
  signal lp_11_r_nxt : STD_LOGIC;
  signal lp_11_r_reg_n_0 : STD_LOGIC;
  signal lp_st_cnt : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \lp_st_cnt[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \lp_st_cnt[0]_i_4__0_n_0\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[0]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[1]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[2]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[3]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[4]\ : STD_LOGIC;
  signal lp_st_dup : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal lp_state_sync : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal lp_state_sync0_i_n_1 : STD_LOGIC;
  signal lp_state_sync0_i_n_2 : STD_LOGIC;
  signal lp_state_sync0_i_n_3 : STD_LOGIC;
  signal lp_state_sync0_i_n_4 : STD_LOGIC;
  signal lp_state_sync1_i_n_1 : STD_LOGIC;
  signal lp_state_sync1_i_n_10 : STD_LOGIC;
  signal lp_state_sync1_i_n_7 : STD_LOGIC;
  signal lp_state_sync1_i_n_8 : STD_LOGIC;
  signal lp_state_sync1_i_n_9 : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal sel : STD_LOGIC;
  signal \settle_cnt[7]_i_1__0_n_0\ : STD_LOGIC;
  signal \settle_cnt[7]_i_3__0_n_0\ : STD_LOGIC;
  signal stopstate12_out : STD_LOGIC;
  signal stopstate14_out : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_0\ : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_1\ : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_2\ : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_3\ : STD_LOGIC;
  signal \time_out_settle0_carry__1_n_1\ : STD_LOGIC;
  signal \time_out_settle0_carry__1_n_2\ : STD_LOGIC;
  signal \time_out_settle0_carry__1_n_3\ : STD_LOGIC;
  signal time_out_settle0_carry_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_n_1 : STD_LOGIC;
  signal time_out_settle0_carry_n_2 : STD_LOGIC;
  signal time_out_settle0_carry_n_3 : STD_LOGIC;
  signal \time_out_settle_i_1__0_n_0\ : STD_LOGIC;
  signal time_out_settle_reg_n_0 : STD_LOGIC;
  signal NLW_time_out_settle0_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_time_out_settle0_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_time_out_settle0_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_time_out_settle0_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[0]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[1]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[1]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[2]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[2]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[3]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[3]\ : label is "yes";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_hs_high_rates.dl_state[0]_i_2__0\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.dl_state[1]_i_2__0\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.dl_state[1]_i_3__0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stopstate_i_4__0\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \lp_00_r_i_2__1\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \lp_01_r_i_1__1\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \lp_10_r_i_1__1\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \lp_11_r_i_1__1\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \settle_cnt[1]_i_1__0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \settle_cnt[2]_i_1__0\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \settle_cnt[3]_i_1__0\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \settle_cnt[4]_i_1__0\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \settle_cnt[6]_i_1__0\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \settle_cnt[7]_i_2__0\ : label is "soft_lutpair51";
begin
  Q(7 downto 0) <= \^q\(7 downto 0);
  dl_en_hs_lpn_i <= \^dl_en_hs_lpn_i\;
  dl_en_hs_lpn_reg_0(0) <= \^dl_en_hs_lpn_reg_0\(0);
  dl_status_reg(2 downto 0) <= \^dl_status_reg\(2 downto 0);
\FSM_sequential_dl_rx_state[0]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFE2E2E2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[0]_i_2__0_n_0\,
      I1 => dl_rx_state(1),
      I2 => \FSM_sequential_dl_rx_state[1]_i_3__0_n_0\,
      I3 => \out\,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => \FSM_sequential_dl_rx_state[0]_i_1__0_n_0\
    );
\FSM_sequential_dl_rx_state[0]_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"03003737"
    )
        port map (
      I0 => cl_rxclkactivehs_reg,
      I1 => dl_rx_state(3),
      I2 => dl_rx_state(2),
      I3 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I4 => \^dl_en_hs_lpn_reg_0\(0),
      O => \FSM_sequential_dl_rx_state[0]_i_2__0_n_0\
    );
\FSM_sequential_dl_rx_state[1]_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => dl_rx_state(2),
      I1 => lp_11_r_reg_n_0,
      I2 => \^dl_en_hs_lpn_reg_0\(0),
      I3 => dl_rx_state(3),
      O => \FSM_sequential_dl_rx_state[1]_i_3__0_n_0\
    );
\FSM_sequential_dl_rx_state[2]_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E6"
    )
        port map (
      I0 => \^dl_en_hs_lpn_reg_0\(0),
      I1 => dl_rx_state(2),
      I2 => lp_11_r_reg_n_0,
      I3 => dl_rx_state(3),
      O => \FSM_sequential_dl_rx_state[2]_i_3__0_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_6__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^dl_en_hs_lpn_reg_0\(0),
      I1 => lp_11_r_reg_n_0,
      O => \FSM_sequential_dl_rx_state[3]_i_6__0_n_0\
    );
\FSM_sequential_dl_rx_state_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => \FSM_sequential_dl_rx_state[0]_i_1__0_n_0\,
      Q => \^dl_en_hs_lpn_reg_0\(0)
    );
\FSM_sequential_dl_rx_state_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => lp_state_sync0_i_n_4,
      Q => dl_rx_state(1)
    );
\FSM_sequential_dl_rx_state_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => lp_state_sync0_i_n_3,
      Q => dl_rx_state(2)
    );
\FSM_sequential_dl_rx_state_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => lp_state_sync1_i_n_10,
      Q => dl_rx_state(3)
    );
\dl_en_hs_lpn_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => lp_11_r_reg_n_0,
      I1 => cl_rxclkactivehs_reg,
      O => \dl_en_hs_lpn_i_2__0_n_0\
    );
\dl_en_hs_lpn_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAAA8000"
    )
        port map (
      I0 => dl_rx_state(2),
      I1 => time_out_settle_reg_n_0,
      I2 => cl_rxclkactivehs_reg,
      I3 => \^dl_en_hs_lpn_reg_0\(0),
      I4 => lp_11_r_reg_n_0,
      I5 => dl_rx_state(3),
      O => \dl_en_hs_lpn_i_5__0_n_0\
    );
dl_en_hs_lpn_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync1_i_n_7,
      Q => \^dl_en_hs_lpn_i\
    );
\dl_status_reg_bit_0_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0045"
    )
        port map (
      I0 => \^dl_en_hs_lpn_reg_0\(0),
      I1 => lp_11_r_reg_n_0,
      I2 => cl_rxclkactivehs_reg,
      I3 => dl_rx_state(2),
      O => \dl_status_reg_bit_0_i_3__0_n_0\
    );
dl_status_reg_bit_0_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync0_i_n_1,
      Q => \^dl_status_reg\(0)
    );
dl_status_reg_bit_4_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync1_i_n_8,
      Q => \^dl_status_reg\(1)
    );
dl_status_reg_bit_6_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => dl_stopstate,
      Q => \^dl_status_reg\(2),
      R => '0'
    );
dl_stopstate_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync1_i_n_9,
      Q => dl_stopstate
    );
\gen_hs_high_rates.dl_state[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"333388B8000088B8"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state[0]_i_2__0_n_0\,
      I1 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I2 => dl_stopstate,
      I3 => stopstate14_out,
      I4 => \gen_hs_high_rates.dl_state_reg[1]_0\,
      I5 => \active_sm_r__2\,
      O => \gen_hs_high_rates.dl_state_reg[0]\
    );
\gen_hs_high_rates.dl_state[0]_i_2__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"002F"
    )
        port map (
      I0 => dl_stopstate,
      I1 => \gen_hs_high_rates.active_sm_r_reg\,
      I2 => stop_state_extn_r,
      I3 => \^dl_en_hs_lpn_i\,
      O => \gen_hs_high_rates.dl_state[0]_i_2__0_n_0\
    );
\gen_hs_high_rates.dl_state[1]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00B833B8"
    )
        port map (
      I0 => stopstate12_out,
      I1 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I2 => stopstate14_out,
      I3 => \gen_hs_high_rates.dl_state_reg[1]_0\,
      I4 => \active_sm_r__2\,
      O => \gen_hs_high_rates.dl_state_reg[1]\
    );
\gen_hs_high_rates.dl_state[1]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \^dl_en_hs_lpn_i\,
      I1 => stop_state_extn_r,
      I2 => \gen_hs_high_rates.active_sm_r_reg\,
      O => stopstate12_out
    );
\gen_hs_high_rates.dl_state[1]_i_3__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^dl_en_hs_lpn_i\,
      I1 => rxactivehs_coreclk_sync_r,
      I2 => s_level_out_d2_reg,
      O => stopstate14_out
    );
\gen_hs_high_rates.stopstate_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAFAFAFF0ACA0AC0"
    )
        port map (
      I0 => \gen_hs_high_rates.stopstate_i_2_n_0\,
      I1 => \active_sm_r__2\,
      I2 => \gen_hs_high_rates.dl_state_reg[1]_0\,
      I3 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I4 => \gen_hs_high_rates.stopstate_i_4__0_n_0\,
      I5 => dl1_stopstate,
      O => \gen_hs_high_rates.stopstate_reg\
    );
\gen_hs_high_rates.stopstate_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0700030007FF0300"
    )
        port map (
      I0 => \gen_hs_high_rates.active_sm_r_reg\,
      I1 => stop_state_extn_r,
      I2 => \^dl_en_hs_lpn_i\,
      I3 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I4 => dl_stopstate,
      I5 => stopstate14_out,
      O => \gen_hs_high_rates.stopstate_i_2_n_0\
    );
\gen_hs_high_rates.stopstate_i_4__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF2"
    )
        port map (
      I0 => s_level_out_d2_reg,
      I1 => rxactivehs_coreclk_sync_r,
      I2 => \^dl_en_hs_lpn_i\,
      I3 => dl_stopstate,
      O => \gen_hs_high_rates.stopstate_i_4__0_n_0\
    );
\lp_00_r_i_1__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFB"
    )
        port map (
      I0 => \lp_st_cnt_reg_n_0_[0]\,
      I1 => \lp_st_cnt_reg_n_0_[1]\,
      I2 => \lp_st_cnt_reg_n_0_[2]\,
      I3 => \lp_st_cnt_reg_n_0_[4]\,
      I4 => \lp_st_cnt_reg_n_0_[3]\,
      O => lp_11_r
    );
\lp_00_r_i_2__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => \lp_00_r_i_2__1_n_0\
    );
lp_00_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_00_r_i_2__1_n_0\,
      Q => lp_00_r,
      R => lp_11_r
    );
\lp_01_r_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => \lp_01_r_i_1__1_n_0\
    );
lp_01_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_01_r_i_1__1_n_0\,
      Q => lp_01_r,
      R => lp_11_r
    );
\lp_10_r_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => lp_st_dup(1),
      I1 => lp_st_dup(0),
      O => \lp_10_r_i_1__1_n_0\
    );
lp_10_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_10_r_i_1__1_n_0\,
      Q => lp_10_r,
      R => lp_11_r
    );
lp_11_r_dly_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_nxt,
      Q => lp_11_r_dly,
      R => '0'
    );
\lp_11_r_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => \lp_11_r_i_1__1_n_0\
    );
lp_11_r_nxt_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_reg_n_0,
      Q => lp_11_r_nxt,
      R => '0'
    );
lp_11_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_11_r_i_1__1_n_0\,
      Q => lp_11_r_reg_n_0,
      R => lp_11_r
    );
\lp_st_cnt[0]_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => lp_10_r,
      I1 => lp_00_r,
      O => \lp_st_cnt[0]_i_2__0_n_0\
    );
\lp_st_cnt[0]_i_4__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => \lp_st_cnt_reg_n_0_[3]\,
      I1 => \lp_st_cnt_reg_n_0_[4]\,
      I2 => \lp_st_cnt_reg_n_0_[2]\,
      I3 => \lp_st_cnt_reg_n_0_[1]\,
      I4 => \lp_st_cnt_reg_n_0_[0]\,
      O => \lp_st_cnt[0]_i_4__0_n_0\
    );
\lp_st_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(0),
      Q => \lp_st_cnt_reg_n_0_[0]\,
      R => '0'
    );
\lp_st_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(1),
      Q => \lp_st_cnt_reg_n_0_[1]\,
      R => '0'
    );
\lp_st_cnt_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(2),
      Q => \lp_st_cnt_reg_n_0_[2]\,
      R => '0'
    );
\lp_st_cnt_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(3),
      Q => \lp_st_cnt_reg_n_0_[3]\,
      R => '0'
    );
\lp_st_cnt_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(4),
      Q => \lp_st_cnt_reg_n_0_[4]\,
      R => '0'
    );
\lp_st_dup_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync(0),
      Q => lp_st_dup(0),
      R => '0'
    );
\lp_st_dup_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync(1),
      Q => lp_st_dup(1),
      R => '0'
    );
lp_state_sync0_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4\
     port map (
      D(1) => lp_state_sync0_i_n_3,
      D(0) => lp_state_sync0_i_n_4,
      \FSM_sequential_dl_rx_state_reg[0]\ => \dl_status_reg_bit_0_i_3__0_n_0\,
      \FSM_sequential_dl_rx_state_reg[0]_0\ => \FSM_sequential_dl_rx_state[2]_i_3__0_n_0\,
      \FSM_sequential_dl_rx_state_reg[2]\ => \FSM_sequential_dl_rx_state[1]_i_3__0_n_0\,
      \FSM_sequential_dl_rx_state_reg[3]\(3 downto 1) => dl_rx_state(3 downto 1),
      \FSM_sequential_dl_rx_state_reg[3]\(0) => \^dl_en_hs_lpn_reg_0\(0),
      cl_rxclkactivehs_reg => cl_rxclkactivehs_reg,
      core_clk => core_clk,
      dl_status_reg(0) => \^dl_status_reg\(0),
      dl_status_reg_bit_0_reg => lp_state_sync0_i_n_1,
      dl_stopstate_reg => lp_state_sync0_i_n_2,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      lp_00_r => lp_00_r,
      lp_10_r => lp_10_r,
      lp_11_r_dly => lp_11_r_dly,
      lp_11_r_reg => lp_11_r_reg_n_0,
      \out\ => lp_state_sync(0),
      rx_dl1_lp_dn => rx_dl1_lp_dn,
      s_level_out_d2_reg_0 => lp_state_sync(1),
      system_rst_reg => \out\
    );
lp_state_sync1_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5\
     port map (
      D(4 downto 0) => lp_st_cnt(4 downto 0),
      E(0) => lp_state_sync1_i_n_1,
      \FSM_sequential_dl_rx_state_reg[0]\ => \FSM_sequential_dl_rx_state[3]_i_6__0_n_0\,
      \FSM_sequential_dl_rx_state_reg[1]\ => lp_state_sync0_i_n_2,
      \FSM_sequential_dl_rx_state_reg[2]\ => \dl_en_hs_lpn_i_5__0_n_0\,
      \FSM_sequential_dl_rx_state_reg[3]\(0) => lp_state_sync1_i_n_10,
      \FSM_sequential_dl_rx_state_reg[3]_0\(3 downto 1) => dl_rx_state(3 downto 1),
      \FSM_sequential_dl_rx_state_reg[3]_0\(0) => \^dl_en_hs_lpn_reg_0\(0),
      Q(4) => \lp_st_cnt_reg_n_0_[4]\,
      Q(3) => \lp_st_cnt_reg_n_0_[3]\,
      Q(2) => \lp_st_cnt_reg_n_0_[2]\,
      Q(1) => \lp_st_cnt_reg_n_0_[1]\,
      Q(0) => \lp_st_cnt_reg_n_0_[0]\,
      cl_rxclkactivehs_reg => cl_rxclkactivehs_reg_0,
      cl_rxclkactivehs_reg_0 => cl_rxclkactivehs_reg,
      core_clk => core_clk,
      dl_en_hs_lpn_reg => lp_state_sync1_i_n_7,
      dl_en_hs_lpn_reg_0 => \^dl_en_hs_lpn_i\,
      dl_status_reg(0) => \^dl_status_reg\(1),
      dl_status_reg_bit_4_reg => lp_state_sync1_i_n_8,
      dl_stopstate => dl_stopstate,
      dl_stopstate_reg => lp_state_sync1_i_n_9,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      lp_00_r => lp_00_r,
      lp_01_r => lp_01_r,
      lp_10_r => lp_10_r,
      lp_10_r_reg => \lp_st_cnt[0]_i_2__0_n_0\,
      lp_11_r_dly => lp_11_r_dly,
      lp_11_r_reg => lp_11_r_reg_n_0,
      lp_11_r_reg_0 => \dl_en_hs_lpn_i_2__0_n_0\,
      \lp_st_cnt_reg[3]\ => \lp_st_cnt[0]_i_4__0_n_0\,
      \lp_st_dup_reg[1]\(1 downto 0) => lp_st_dup(1 downto 0),
      \out\ => lp_state_sync(1),
      rx_dl1_lp_dp => rx_dl1_lp_dp,
      s_level_out_d2_reg_0 => lp_state_sync(0),
      system_rst_reg => \out\,
      time_out_settle_reg => time_out_settle_reg_n_0
    );
\settle_cnt[0]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => p_0_in(0)
    );
\settle_cnt[1]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => p_0_in(1)
    );
\settle_cnt[2]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => p_0_in(2)
    );
\settle_cnt[3]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(2),
      I2 => \^q\(0),
      I3 => \^q\(1),
      O => p_0_in(3)
    );
\settle_cnt[4]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => \^q\(2),
      O => p_0_in(4)
    );
\settle_cnt[5]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAAA"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^q\(4),
      I2 => \^q\(2),
      I3 => \^q\(0),
      I4 => \^q\(1),
      I5 => \^q\(3),
      O => p_0_in(5)
    );
\settle_cnt[6]_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(6),
      I1 => \settle_cnt[7]_i_3__0_n_0\,
      O => p_0_in(6)
    );
\settle_cnt[7]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFFF"
    )
        port map (
      I0 => dl_rx_state(3),
      I1 => dl_rx_state(2),
      I2 => \^dl_en_hs_lpn_reg_0\(0),
      I3 => dl_rx_state(1),
      O => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt[7]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(7),
      I1 => \^q\(6),
      I2 => \settle_cnt[7]_i_3__0_n_0\,
      O => p_0_in(7)
    );
\settle_cnt[7]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^q\(4),
      I2 => \^q\(2),
      I3 => \^q\(0),
      I4 => \^q\(1),
      I5 => \^q\(3),
      O => \settle_cnt[7]_i_3__0_n_0\
    );
\settle_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(0),
      Q => \^q\(0),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(1),
      Q => \^q\(1),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(2),
      Q => \^q\(2),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(3),
      Q => \^q\(3),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(4),
      Q => \^q\(4),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(5),
      Q => \^q\(5),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(6),
      Q => \^q\(6),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
\settle_cnt_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(7),
      Q => \^q\(7),
      R => \settle_cnt[7]_i_1__0_n_0\
    );
time_out_settle0_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => time_out_settle0_carry_n_0,
      CO(2) => time_out_settle0_carry_n_1,
      CO(1) => time_out_settle0_carry_n_2,
      CO(0) => time_out_settle0_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_time_out_settle0_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 0) => \s_level_out_bus_d3_reg[4]\(3 downto 0)
    );
\time_out_settle0_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => time_out_settle0_carry_n_0,
      CO(3) => \time_out_settle0_carry__0_n_0\,
      CO(2) => \time_out_settle0_carry__0_n_1\,
      CO(1) => \time_out_settle0_carry__0_n_2\,
      CO(0) => \time_out_settle0_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_time_out_settle0_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \s_level_out_bus_d3_reg[4]_0\(3 downto 0)
    );
\time_out_settle0_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \time_out_settle0_carry__0_n_0\,
      CO(3) => \NLW_time_out_settle0_carry__1_CO_UNCONNECTED\(3),
      CO(2) => \time_out_settle0_carry__1_n_1\,
      CO(1) => \time_out_settle0_carry__1_n_2\,
      CO(0) => \time_out_settle0_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => sel,
      O(2 downto 0) => \NLW_time_out_settle0_carry__1_O_UNCONNECTED\(2 downto 0),
      S(3) => '1',
      S(2 downto 0) => \s_level_out_bus_d3_reg[4]_1\(2 downto 0)
    );
\time_out_settle_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0E00000000000000"
    )
        port map (
      I0 => time_out_settle_reg_n_0,
      I1 => \time_out_settle0_carry__1_n_1\,
      I2 => dl_rx_state(3),
      I3 => \^dl_en_hs_lpn_reg_0\(0),
      I4 => dl_rx_state(2),
      I5 => dl_rx_state(1),
      O => \time_out_settle_i_1__0_n_0\
    );
time_out_settle_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \time_out_settle_i_1__0_n_0\,
      Q => time_out_settle_reg_n_0,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7 is
  port (
    dl_status_reg : out STD_LOGIC_VECTOR ( 2 downto 0 );
    dl_en_hs_lpn_i : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl_en_hs_lpn_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \gen_hs_high_rates.stopstate_reg\ : out STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[0]\ : out STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[1]\ : out STD_LOGIC;
    rx_dl0_lp_dn : in STD_LOGIC;
    rx_dl0_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    S : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    core_rst : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    cl_rxclkactivehs_reg_0 : in STD_LOGIC;
    \active_sm_r__2\ : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[1]_0\ : in STD_LOGIC;
    \gen_hs_high_rates.dl_state_reg[0]_0\ : in STD_LOGIC;
    dl0_stopstate : in STD_LOGIC;
    \gen_hs_high_rates.active_sm_r_reg\ : in STD_LOGIC;
    stop_state_extn_r : in STD_LOGIC;
    s_level_out_d2_reg : in STD_LOGIC;
    rxactivehs_coreclk_sync_r : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7 : entity is "mipi_dphy_v4_0_1_csi_rx_data_lane_sm";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7 is
  signal \FSM_sequential_dl_rx_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[1]_i_3_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[2]_i_3_n_0\ : STD_LOGIC;
  signal \FSM_sequential_dl_rx_state[3]_i_6_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \^dl_en_hs_lpn_i\ : STD_LOGIC;
  signal dl_en_hs_lpn_i_2_n_0 : STD_LOGIC;
  signal dl_en_hs_lpn_i_5_n_0 : STD_LOGIC;
  signal \^dl_en_hs_lpn_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of \^dl_en_hs_lpn_reg_0\ : signal is "yes";
  signal dl_rx_state : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute RTL_KEEP of dl_rx_state : signal is "yes";
  signal \^dl_status_reg\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal dl_status_reg_bit_0_i_3_n_0 : STD_LOGIC;
  signal dl_stopstate : STD_LOGIC;
  signal \gen_hs_high_rates.dl_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stopstate_i_3_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stopstate_i_5_n_0\ : STD_LOGIC;
  signal lp_00_r : STD_LOGIC;
  signal \lp_00_r_i_2__0_n_0\ : STD_LOGIC;
  signal lp_01_r : STD_LOGIC;
  signal \lp_01_r_i_1__0_n_0\ : STD_LOGIC;
  signal lp_10_r : STD_LOGIC;
  signal \lp_10_r_i_1__0_n_0\ : STD_LOGIC;
  signal lp_11_r : STD_LOGIC;
  signal lp_11_r_dly : STD_LOGIC;
  signal \lp_11_r_i_1__0_n_0\ : STD_LOGIC;
  signal lp_11_r_nxt : STD_LOGIC;
  signal lp_11_r_reg_n_0 : STD_LOGIC;
  signal lp_st_cnt : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \lp_st_cnt[0]_i_2_n_0\ : STD_LOGIC;
  signal \lp_st_cnt[0]_i_4_n_0\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[0]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[1]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[2]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[3]\ : STD_LOGIC;
  signal \lp_st_cnt_reg_n_0_[4]\ : STD_LOGIC;
  signal lp_st_dup : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal lp_state_sync : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal lp_state_sync0_i_n_1 : STD_LOGIC;
  signal lp_state_sync0_i_n_2 : STD_LOGIC;
  signal lp_state_sync0_i_n_3 : STD_LOGIC;
  signal lp_state_sync0_i_n_4 : STD_LOGIC;
  signal lp_state_sync1_i_n_1 : STD_LOGIC;
  signal lp_state_sync1_i_n_10 : STD_LOGIC;
  signal lp_state_sync1_i_n_7 : STD_LOGIC;
  signal lp_state_sync1_i_n_8 : STD_LOGIC;
  signal lp_state_sync1_i_n_9 : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal sel : STD_LOGIC;
  signal \settle_cnt[7]_i_1_n_0\ : STD_LOGIC;
  signal \settle_cnt[7]_i_3_n_0\ : STD_LOGIC;
  signal stopstate12_out : STD_LOGIC;
  signal stopstate14_out : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_0\ : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_1\ : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_2\ : STD_LOGIC;
  signal \time_out_settle0_carry__0_n_3\ : STD_LOGIC;
  signal \time_out_settle0_carry__1_n_1\ : STD_LOGIC;
  signal \time_out_settle0_carry__1_n_2\ : STD_LOGIC;
  signal \time_out_settle0_carry__1_n_3\ : STD_LOGIC;
  signal time_out_settle0_carry_n_0 : STD_LOGIC;
  signal time_out_settle0_carry_n_1 : STD_LOGIC;
  signal time_out_settle0_carry_n_2 : STD_LOGIC;
  signal time_out_settle0_carry_n_3 : STD_LOGIC;
  signal time_out_settle_i_1_n_0 : STD_LOGIC;
  signal time_out_settle_reg_n_0 : STD_LOGIC;
  signal NLW_time_out_settle0_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_time_out_settle0_carry__0_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_time_out_settle0_carry__1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_time_out_settle0_carry__1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[0]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[1]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[1]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[2]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[2]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_dl_rx_state_reg[3]\ : label is "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010";
  attribute KEEP of \FSM_sequential_dl_rx_state_reg[3]\ : label is "yes";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_hs_high_rates.dl_state[0]_i_2\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.dl_state[1]_i_2\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.dl_state[1]_i_3\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stopstate_i_5\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \lp_00_r_i_2__0\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \lp_01_r_i_1__0\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \lp_10_r_i_1__0\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \lp_11_r_i_1__0\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \settle_cnt[1]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \settle_cnt[2]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \settle_cnt[3]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \settle_cnt[4]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \settle_cnt[6]_i_1\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \settle_cnt[7]_i_2\ : label is "soft_lutpair24";
begin
  Q(7 downto 0) <= \^q\(7 downto 0);
  dl_en_hs_lpn_i <= \^dl_en_hs_lpn_i\;
  dl_en_hs_lpn_reg_0(0) <= \^dl_en_hs_lpn_reg_0\(0);
  dl_status_reg(2 downto 0) <= \^dl_status_reg\(2 downto 0);
\FSM_sequential_dl_rx_state[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFE2E2E2"
    )
        port map (
      I0 => \FSM_sequential_dl_rx_state[0]_i_2_n_0\,
      I1 => dl_rx_state(1),
      I2 => \FSM_sequential_dl_rx_state[1]_i_3_n_0\,
      I3 => \out\,
      I4 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => \FSM_sequential_dl_rx_state[0]_i_1_n_0\
    );
\FSM_sequential_dl_rx_state[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"03003737"
    )
        port map (
      I0 => cl_rxclkactivehs_reg,
      I1 => dl_rx_state(3),
      I2 => dl_rx_state(2),
      I3 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I4 => \^dl_en_hs_lpn_reg_0\(0),
      O => \FSM_sequential_dl_rx_state[0]_i_2_n_0\
    );
\FSM_sequential_dl_rx_state[1]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => dl_rx_state(2),
      I1 => lp_11_r_reg_n_0,
      I2 => \^dl_en_hs_lpn_reg_0\(0),
      I3 => dl_rx_state(3),
      O => \FSM_sequential_dl_rx_state[1]_i_3_n_0\
    );
\FSM_sequential_dl_rx_state[2]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E6"
    )
        port map (
      I0 => \^dl_en_hs_lpn_reg_0\(0),
      I1 => dl_rx_state(2),
      I2 => lp_11_r_reg_n_0,
      I3 => dl_rx_state(3),
      O => \FSM_sequential_dl_rx_state[2]_i_3_n_0\
    );
\FSM_sequential_dl_rx_state[3]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^dl_en_hs_lpn_reg_0\(0),
      I1 => lp_11_r_reg_n_0,
      O => \FSM_sequential_dl_rx_state[3]_i_6_n_0\
    );
\FSM_sequential_dl_rx_state_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => \FSM_sequential_dl_rx_state[0]_i_1_n_0\,
      Q => \^dl_en_hs_lpn_reg_0\(0)
    );
\FSM_sequential_dl_rx_state_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => lp_state_sync0_i_n_4,
      Q => dl_rx_state(1)
    );
\FSM_sequential_dl_rx_state_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => lp_state_sync0_i_n_3,
      Q => dl_rx_state(2)
    );
\FSM_sequential_dl_rx_state_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => lp_state_sync1_i_n_1,
      CLR => core_rst,
      D => lp_state_sync1_i_n_10,
      Q => dl_rx_state(3)
    );
dl_en_hs_lpn_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => lp_11_r_reg_n_0,
      I1 => cl_rxclkactivehs_reg,
      O => dl_en_hs_lpn_i_2_n_0
    );
dl_en_hs_lpn_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAAA8000"
    )
        port map (
      I0 => dl_rx_state(2),
      I1 => time_out_settle_reg_n_0,
      I2 => cl_rxclkactivehs_reg,
      I3 => \^dl_en_hs_lpn_reg_0\(0),
      I4 => lp_11_r_reg_n_0,
      I5 => dl_rx_state(3),
      O => dl_en_hs_lpn_i_5_n_0
    );
dl_en_hs_lpn_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync1_i_n_7,
      Q => \^dl_en_hs_lpn_i\
    );
dl_status_reg_bit_0_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0045"
    )
        port map (
      I0 => \^dl_en_hs_lpn_reg_0\(0),
      I1 => lp_11_r_reg_n_0,
      I2 => cl_rxclkactivehs_reg,
      I3 => dl_rx_state(2),
      O => dl_status_reg_bit_0_i_3_n_0
    );
dl_status_reg_bit_0_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync0_i_n_1,
      Q => \^dl_status_reg\(0)
    );
dl_status_reg_bit_4_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync1_i_n_8,
      Q => \^dl_status_reg\(1)
    );
dl_status_reg_bit_6_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => dl_stopstate,
      Q => \^dl_status_reg\(2),
      R => '0'
    );
dl_stopstate_reg: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => lp_state_sync1_i_n_9,
      Q => dl_stopstate
    );
\gen_hs_high_rates.dl_state[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"333388B8000088B8"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state[0]_i_2_n_0\,
      I1 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I2 => dl_stopstate,
      I3 => stopstate14_out,
      I4 => \gen_hs_high_rates.dl_state_reg[1]_0\,
      I5 => \active_sm_r__2\,
      O => \gen_hs_high_rates.dl_state_reg[0]\
    );
\gen_hs_high_rates.dl_state[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"002F"
    )
        port map (
      I0 => dl_stopstate,
      I1 => \gen_hs_high_rates.active_sm_r_reg\,
      I2 => stop_state_extn_r,
      I3 => \^dl_en_hs_lpn_i\,
      O => \gen_hs_high_rates.dl_state[0]_i_2_n_0\
    );
\gen_hs_high_rates.dl_state[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00B833B8"
    )
        port map (
      I0 => stopstate12_out,
      I1 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I2 => stopstate14_out,
      I3 => \gen_hs_high_rates.dl_state_reg[1]_0\,
      I4 => \active_sm_r__2\,
      O => \gen_hs_high_rates.dl_state_reg[1]\
    );
\gen_hs_high_rates.dl_state[1]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \^dl_en_hs_lpn_i\,
      I1 => stop_state_extn_r,
      I2 => \gen_hs_high_rates.active_sm_r_reg\,
      O => stopstate12_out
    );
\gen_hs_high_rates.dl_state[1]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^dl_en_hs_lpn_i\,
      I1 => rxactivehs_coreclk_sync_r,
      I2 => s_level_out_d2_reg,
      O => stopstate14_out
    );
\gen_hs_high_rates.stopstate_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAFAFAFF0ACA0AC0"
    )
        port map (
      I0 => \gen_hs_high_rates.stopstate_i_3_n_0\,
      I1 => \active_sm_r__2\,
      I2 => \gen_hs_high_rates.dl_state_reg[1]_0\,
      I3 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I4 => \gen_hs_high_rates.stopstate_i_5_n_0\,
      I5 => dl0_stopstate,
      O => \gen_hs_high_rates.stopstate_reg\
    );
\gen_hs_high_rates.stopstate_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0700030007FF0300"
    )
        port map (
      I0 => \gen_hs_high_rates.active_sm_r_reg\,
      I1 => stop_state_extn_r,
      I2 => \^dl_en_hs_lpn_i\,
      I3 => \gen_hs_high_rates.dl_state_reg[0]_0\,
      I4 => dl_stopstate,
      I5 => stopstate14_out,
      O => \gen_hs_high_rates.stopstate_i_3_n_0\
    );
\gen_hs_high_rates.stopstate_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF2"
    )
        port map (
      I0 => s_level_out_d2_reg,
      I1 => rxactivehs_coreclk_sync_r,
      I2 => \^dl_en_hs_lpn_i\,
      I3 => dl_stopstate,
      O => \gen_hs_high_rates.stopstate_i_5_n_0\
    );
\lp_00_r_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFB"
    )
        port map (
      I0 => \lp_st_cnt_reg_n_0_[0]\,
      I1 => \lp_st_cnt_reg_n_0_[1]\,
      I2 => \lp_st_cnt_reg_n_0_[2]\,
      I3 => \lp_st_cnt_reg_n_0_[4]\,
      I4 => \lp_st_cnt_reg_n_0_[3]\,
      O => lp_11_r
    );
\lp_00_r_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => \lp_00_r_i_2__0_n_0\
    );
lp_00_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_00_r_i_2__0_n_0\,
      Q => lp_00_r,
      R => lp_11_r
    );
\lp_01_r_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => \lp_01_r_i_1__0_n_0\
    );
lp_01_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_01_r_i_1__0_n_0\,
      Q => lp_01_r,
      R => lp_11_r
    );
\lp_10_r_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => lp_st_dup(1),
      I1 => lp_st_dup(0),
      O => \lp_10_r_i_1__0_n_0\
    );
lp_10_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_10_r_i_1__0_n_0\,
      Q => lp_10_r,
      R => lp_11_r
    );
lp_11_r_dly_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_nxt,
      Q => lp_11_r_dly,
      R => '0'
    );
\lp_11_r_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => lp_st_dup(0),
      I1 => lp_st_dup(1),
      O => \lp_11_r_i_1__0_n_0\
    );
lp_11_r_nxt_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_11_r_reg_n_0,
      Q => lp_11_r_nxt,
      R => '0'
    );
lp_11_r_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \lp_11_r_i_1__0_n_0\,
      Q => lp_11_r_reg_n_0,
      R => lp_11_r
    );
\lp_st_cnt[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => lp_10_r,
      I1 => lp_00_r,
      O => \lp_st_cnt[0]_i_2_n_0\
    );
\lp_st_cnt[0]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => \lp_st_cnt_reg_n_0_[3]\,
      I1 => \lp_st_cnt_reg_n_0_[4]\,
      I2 => \lp_st_cnt_reg_n_0_[2]\,
      I3 => \lp_st_cnt_reg_n_0_[1]\,
      I4 => \lp_st_cnt_reg_n_0_[0]\,
      O => \lp_st_cnt[0]_i_4_n_0\
    );
\lp_st_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(0),
      Q => \lp_st_cnt_reg_n_0_[0]\,
      R => '0'
    );
\lp_st_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(1),
      Q => \lp_st_cnt_reg_n_0_[1]\,
      R => '0'
    );
\lp_st_cnt_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(2),
      Q => \lp_st_cnt_reg_n_0_[2]\,
      R => '0'
    );
\lp_st_cnt_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(3),
      Q => \lp_st_cnt_reg_n_0_[3]\,
      R => '0'
    );
\lp_st_cnt_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_st_cnt(4),
      Q => \lp_st_cnt_reg_n_0_[4]\,
      R => '0'
    );
\lp_st_dup_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync(0),
      Q => lp_st_dup(0),
      R => '0'
    );
\lp_st_dup_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => lp_state_sync(1),
      Q => lp_st_dup(1),
      R => '0'
    );
lp_state_sync0_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11\
     port map (
      D(1) => lp_state_sync0_i_n_3,
      D(0) => lp_state_sync0_i_n_4,
      \FSM_sequential_dl_rx_state_reg[0]\ => dl_status_reg_bit_0_i_3_n_0,
      \FSM_sequential_dl_rx_state_reg[0]_0\ => \FSM_sequential_dl_rx_state[2]_i_3_n_0\,
      \FSM_sequential_dl_rx_state_reg[2]\ => \FSM_sequential_dl_rx_state[1]_i_3_n_0\,
      \FSM_sequential_dl_rx_state_reg[3]\(3 downto 1) => dl_rx_state(3 downto 1),
      \FSM_sequential_dl_rx_state_reg[3]\(0) => \^dl_en_hs_lpn_reg_0\(0),
      cl_rxclkactivehs_reg => cl_rxclkactivehs_reg,
      core_clk => core_clk,
      dl_status_reg(0) => \^dl_status_reg\(0),
      dl_status_reg_bit_0_reg => lp_state_sync0_i_n_1,
      dl_stopstate_reg => lp_state_sync0_i_n_2,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      lp_00_r => lp_00_r,
      lp_10_r => lp_10_r,
      lp_11_r_dly => lp_11_r_dly,
      lp_11_r_reg => lp_11_r_reg_n_0,
      \out\ => lp_state_sync(0),
      rx_dl0_lp_dn => rx_dl0_lp_dn,
      s_level_out_d2_reg_0 => lp_state_sync(1),
      system_rst_reg => \out\
    );
lp_state_sync1_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12\
     port map (
      D(4 downto 0) => lp_st_cnt(4 downto 0),
      E(0) => lp_state_sync1_i_n_1,
      \FSM_sequential_dl_rx_state_reg[0]\ => \FSM_sequential_dl_rx_state[3]_i_6_n_0\,
      \FSM_sequential_dl_rx_state_reg[1]\ => lp_state_sync0_i_n_2,
      \FSM_sequential_dl_rx_state_reg[2]\ => dl_en_hs_lpn_i_5_n_0,
      \FSM_sequential_dl_rx_state_reg[3]\(0) => lp_state_sync1_i_n_10,
      \FSM_sequential_dl_rx_state_reg[3]_0\(3 downto 1) => dl_rx_state(3 downto 1),
      \FSM_sequential_dl_rx_state_reg[3]_0\(0) => \^dl_en_hs_lpn_reg_0\(0),
      Q(4) => \lp_st_cnt_reg_n_0_[4]\,
      Q(3) => \lp_st_cnt_reg_n_0_[3]\,
      Q(2) => \lp_st_cnt_reg_n_0_[2]\,
      Q(1) => \lp_st_cnt_reg_n_0_[1]\,
      Q(0) => \lp_st_cnt_reg_n_0_[0]\,
      cl_rxclkactivehs_reg => cl_rxclkactivehs_reg_0,
      cl_rxclkactivehs_reg_0 => cl_rxclkactivehs_reg,
      core_clk => core_clk,
      dl_en_hs_lpn_reg => lp_state_sync1_i_n_7,
      dl_en_hs_lpn_reg_0 => \^dl_en_hs_lpn_i\,
      dl_status_reg(0) => \^dl_status_reg\(1),
      dl_status_reg_bit_4_reg => lp_state_sync1_i_n_8,
      dl_stopstate => dl_stopstate,
      dl_stopstate_reg => lp_state_sync1_i_n_9,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      lp_00_r => lp_00_r,
      lp_01_r => lp_01_r,
      lp_10_r => lp_10_r,
      lp_10_r_reg => \lp_st_cnt[0]_i_2_n_0\,
      lp_11_r_dly => lp_11_r_dly,
      lp_11_r_reg => lp_11_r_reg_n_0,
      lp_11_r_reg_0 => dl_en_hs_lpn_i_2_n_0,
      \lp_st_cnt_reg[3]\ => \lp_st_cnt[0]_i_4_n_0\,
      \lp_st_dup_reg[1]\(1 downto 0) => lp_st_dup(1 downto 0),
      \out\ => lp_state_sync(1),
      rx_dl0_lp_dp => rx_dl0_lp_dp,
      s_level_out_d2_reg_0 => lp_state_sync(0),
      system_rst_reg => \out\,
      time_out_settle_reg => time_out_settle_reg_n_0
    );
\settle_cnt[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => p_0_in(0)
    );
\settle_cnt[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => p_0_in(1)
    );
\settle_cnt[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(1),
      I2 => \^q\(0),
      O => p_0_in(2)
    );
\settle_cnt[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6AAA"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(2),
      I2 => \^q\(0),
      I3 => \^q\(1),
      O => p_0_in(3)
    );
\settle_cnt[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAAAAAA"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(3),
      I2 => \^q\(1),
      I3 => \^q\(0),
      I4 => \^q\(2),
      O => p_0_in(4)
    );
\settle_cnt[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAAAAAAAAAA"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^q\(4),
      I2 => \^q\(2),
      I3 => \^q\(0),
      I4 => \^q\(1),
      I5 => \^q\(3),
      O => p_0_in(5)
    );
\settle_cnt[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(6),
      I1 => \settle_cnt[7]_i_3_n_0\,
      O => p_0_in(6)
    );
\settle_cnt[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFFF"
    )
        port map (
      I0 => dl_rx_state(3),
      I1 => dl_rx_state(2),
      I2 => \^dl_en_hs_lpn_reg_0\(0),
      I3 => dl_rx_state(1),
      O => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"6A"
    )
        port map (
      I0 => \^q\(7),
      I1 => \^q\(6),
      I2 => \settle_cnt[7]_i_3_n_0\,
      O => p_0_in(7)
    );
\settle_cnt[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^q\(4),
      I2 => \^q\(2),
      I3 => \^q\(0),
      I4 => \^q\(1),
      I5 => \^q\(3),
      O => \settle_cnt[7]_i_3_n_0\
    );
\settle_cnt_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(0),
      Q => \^q\(0),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(1),
      Q => \^q\(1),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(2),
      Q => \^q\(2),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(3),
      Q => \^q\(3),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(4),
      Q => \^q\(4),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(5),
      Q => \^q\(5),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(6),
      Q => \^q\(6),
      R => \settle_cnt[7]_i_1_n_0\
    );
\settle_cnt_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => sel,
      D => p_0_in(7),
      Q => \^q\(7),
      R => \settle_cnt[7]_i_1_n_0\
    );
time_out_settle0_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => time_out_settle0_carry_n_0,
      CO(2) => time_out_settle0_carry_n_1,
      CO(1) => time_out_settle0_carry_n_2,
      CO(0) => time_out_settle0_carry_n_3,
      CYINIT => '1',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => NLW_time_out_settle0_carry_O_UNCONNECTED(3 downto 0),
      S(3 downto 0) => S(3 downto 0)
    );
\time_out_settle0_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => time_out_settle0_carry_n_0,
      CO(3) => \time_out_settle0_carry__0_n_0\,
      CO(2) => \time_out_settle0_carry__0_n_1\,
      CO(1) => \time_out_settle0_carry__0_n_2\,
      CO(0) => \time_out_settle0_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \NLW_time_out_settle0_carry__0_O_UNCONNECTED\(3 downto 0),
      S(3 downto 0) => \s_level_out_bus_d3_reg[4]\(3 downto 0)
    );
\time_out_settle0_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \time_out_settle0_carry__0_n_0\,
      CO(3) => \NLW_time_out_settle0_carry__1_CO_UNCONNECTED\(3),
      CO(2) => \time_out_settle0_carry__1_n_1\,
      CO(1) => \time_out_settle0_carry__1_n_2\,
      CO(0) => \time_out_settle0_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => sel,
      O(2 downto 0) => \NLW_time_out_settle0_carry__1_O_UNCONNECTED\(2 downto 0),
      S(3) => '1',
      S(2 downto 0) => \s_level_out_bus_d3_reg[4]_0\(2 downto 0)
    );
time_out_settle_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0E00000000000000"
    )
        port map (
      I0 => time_out_settle_reg_n_0,
      I1 => \time_out_settle0_carry__1_n_1\,
      I2 => dl_rx_state(3),
      I3 => \^dl_en_hs_lpn_reg_0\(0),
      I4 => dl_rx_state(2),
      I5 => dl_rx_state(1),
      O => time_out_settle_i_1_n_0
    );
time_out_settle_reg: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => time_out_settle_i_1_n_0,
      Q => time_out_settle_reg_n_0,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \s_level_out_bus_d4_reg[22]\ : out STD_LOGIC_VECTOR ( 14 downto 0 );
    s_axi_rvalid : out STD_LOGIC;
    p_5_in : out STD_LOGIC;
    S : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \settle_cnt_reg[0]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \settle_cnt_reg[0]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \settle_cnt_reg[0]_1\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \settle_cnt_reg[0]_2\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \settle_cnt_reg[0]_3\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_bvalid : out STD_LOGIC;
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awready : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    s_axi_aclk : in STD_LOGIC;
    s_axi_aresetn : in STD_LOGIC;
    cl_enable : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \settle_cnt_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dl_pkt_cnt : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dl_status_reg : in STD_LOGIC_VECTOR ( 5 downto 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    cl_status_reg_bit_0_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    core_clk : in STD_LOGIC;
    system_rst_reg : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_araddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg : entity is "mipi_dphy_v4_0_1_rx_dphy_reg";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg is
  signal axi_bvalid_i_1_n_0 : STD_LOGIC;
  signal axi_rvalid4_out : STD_LOGIC;
  signal cl_errcontrol_axi : STD_LOGIC;
  signal cl_errcontrol_r_axi_i_1_n_0 : STD_LOGIC;
  signal cl_errcontrol_r_axi_reg_n_0 : STD_LOGIC;
  signal cl_init_done_axi : STD_LOGIC;
  signal data0 : STD_LOGIC_VECTOR ( 1 to 1 );
  signal dl1_pkt_cnt_axi : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal dl2_pkt_cnt_axi : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal dl3_pkt_cnt_axi : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal dl3_pkt_cnt_sync_n_16 : STD_LOGIC;
  signal dphy_en_axi : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8]\ : STD_LOGIC;
  signal \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9]\ : STD_LOGIC;
  signal hs_settle_reg_axi : STD_LOGIC;
  signal init_value_axi : STD_LOGIC;
  signal p_0_in : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \p_1_in__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal p_5_in_0 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal rd_req : STD_LOGIC;
  signal rd_req0 : STD_LOGIC;
  signal rd_req_i_1_n_0 : STD_LOGIC;
  signal reset_released : STD_LOGIC;
  signal reset_released_r : STD_LOGIC;
  signal \^s_axi_bvalid\ : STD_LOGIC;
  signal \^s_axi_rvalid\ : STD_LOGIC;
  signal sel0 : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \wr_addr[2]_i_1_n_0\ : STD_LOGIC;
  signal \wr_addr[3]_i_1_n_0\ : STD_LOGIC;
  signal \wr_addr[4]_i_1_n_0\ : STD_LOGIC;
  signal \wr_addr[5]_i_1_n_0\ : STD_LOGIC;
  signal \wr_addr[6]_i_1_n_0\ : STD_LOGIC;
  signal wr_req : STD_LOGIC;
  signal wr_req07_out : STD_LOGIC;
  signal wr_req_i_1_n_0 : STD_LOGIC;
  signal NLW_cl_errcontrol_sync_prmry_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_cl_errcontrol_sync_scndry_vect_out_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_init_done_sync_prmry_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_init_done_sync_scndry_vect_out_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of axi_bvalid_i_1 : label is "soft_lutpair14";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of cl_errcontrol_sync : label is "yes";
  attribute c_cdc_type : string;
  attribute c_cdc_type of cl_errcontrol_sync : label is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of cl_errcontrol_sync : label is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of cl_errcontrol_sync : label is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of cl_errcontrol_sync : label is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of cl_errcontrol_sync : label is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of cl_errcontrol_sync : label is "6'b000010";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[10]_i_1\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[11]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[12]_i_1\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[13]_i_1\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.axi_rdata[9]_i_1\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2\ : label is "soft_lutpair14";
  attribute DowngradeIPIdentifiedWarnings of init_done_sync : label is "yes";
  attribute c_cdc_type of init_done_sync : label is "2'b01";
  attribute c_flop_input of init_done_sync : label is "1'b0";
  attribute c_mtbf_stages of init_done_sync : label is 3;
  attribute c_reset_state of init_done_sync : label is "1'b1";
  attribute c_single_bit of init_done_sync : label is "1'b1";
  attribute c_vector_width of init_done_sync : label is "6'b000010";
  attribute SOFT_HLUTNM of s_axi_arready_INST_0 : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of s_axi_awready_INST_0 : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of s_axi_wready_INST_0 : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of wr_req_i_2 : label is "soft_lutpair11";
begin
  s_axi_bvalid <= \^s_axi_bvalid\;
  s_axi_rvalid <= \^s_axi_rvalid\;
axi_bvalid_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5C50"
    )
        port map (
      I0 => s_axi_bready,
      I1 => s_axi_wvalid,
      I2 => \^s_axi_bvalid\,
      I3 => wr_req,
      O => axi_bvalid_i_1_n_0
    );
axi_bvalid_reg: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => axi_bvalid_i_1_n_0,
      Q => \^s_axi_bvalid\
    );
cl_errcontrol_r_axi_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1110"
    )
        port map (
      I0 => p_5_in_0(0),
      I1 => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0\,
      I2 => cl_errcontrol_axi,
      I3 => cl_errcontrol_r_axi_reg_n_0,
      O => cl_errcontrol_r_axi_i_1_n_0
    );
cl_errcontrol_r_axi_reg: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => cl_errcontrol_r_axi_i_1_n_0,
      Q => cl_errcontrol_r_axi_reg_n_0
    );
cl_errcontrol_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4\
     port map (
      prmry_ack => NLW_cl_errcontrol_sync_prmry_ack_UNCONNECTED,
      prmry_aclk => '0',
      prmry_in => '0',
      prmry_rst_n => '0',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => s_axi_aclk,
      scndry_out => cl_errcontrol_axi,
      scndry_rst_n => s_axi_aresetn,
      scndry_vect_out(1 downto 0) => NLW_cl_errcontrol_sync_scndry_vect_out_UNCONNECTED(1 downto 0)
    );
clk_prepare_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
clk_settle_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
clk_termen_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
clk_zero_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
control_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6\
     port map (
      cl_enable => cl_enable,
      core_clk => core_clk,
      data0(0) => data0(1),
      \out\(1 downto 0) => \out\(1 downto 0),
      p_5_in => p_5_in,
      p_5_in_0(0) => p_5_in_0(0)
    );
d_termen_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
dl0_pkt_cnt_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2\
     port map (
      D(15 downto 0) => \p_1_in__0\(31 downto 16),
      Q(15) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31]\,
      Q(14) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30]\,
      Q(13) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29]\,
      Q(12) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28]\,
      Q(11) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27]\,
      Q(10) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26]\,
      Q(9) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25]\,
      Q(8) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24]\,
      Q(7) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23]\,
      Q(6) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22]\,
      Q(5) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21]\,
      Q(4) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20]\,
      Q(3) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19]\,
      Q(2) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18]\,
      Q(1) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17]\,
      Q(0) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16]\,
      SR(0) => dl3_pkt_cnt_sync_n_16,
      dl_pkt_cnt(15 downto 0) => dl_pkt_cnt(15 downto 0),
      \rd_addr_reg[3]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0\,
      \rd_addr_reg[3]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0\,
      \rd_addr_reg[5]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0\,
      \rd_addr_reg[5]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      \rd_addr_reg[6]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0\,
      s_axi_aclk => s_axi_aclk,
      \s_level_out_bus_d3_reg[15]_0\(15 downto 0) => dl2_pkt_cnt_axi(15 downto 0),
      \s_level_out_bus_d3_reg[15]_1\(15 downto 0) => dl3_pkt_cnt_axi(15 downto 0),
      \s_level_out_bus_d3_reg[15]_2\(15 downto 0) => dl1_pkt_cnt_axi(15 downto 0)
    );
dl1_pkt_cnt_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17\
     port map (
      D(15 downto 0) => dl1_pkt_cnt_axi(15 downto 0),
      SR(0) => dl3_pkt_cnt_sync_n_16,
      dl_pkt_cnt(15 downto 0) => dl_pkt_cnt(31 downto 16),
      s_axi_aclk => s_axi_aclk
    );
dl2_pkt_cnt_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18\
     port map (
      D(15 downto 0) => dl2_pkt_cnt_axi(15 downto 0),
      SR(0) => dl3_pkt_cnt_sync_n_16,
      s_axi_aclk => s_axi_aclk
    );
dl3_pkt_cnt_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19\
     port map (
      D(15 downto 0) => dl3_pkt_cnt_axi(15 downto 0),
      SR(0) => dl3_pkt_cnt_sync_n_16,
      s_axi_aclk => s_axi_aclk,
      s_axi_aresetn => s_axi_aresetn
    );
esc_abort_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3\
     port map (
      SR(0) => dl3_pkt_cnt_sync_n_16,
      s_axi_aclk => s_axi_aclk
    );
esc_timeout_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08080C00"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0\,
      I2 => sel0(3),
      I3 => p_5_in_0(0),
      I4 => sel0(1),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[10]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10]\,
      O => \p_1_in__0\(10)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[11]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11]\,
      O => \p_1_in__0\(11)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[12]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12]\,
      O => \p_1_in__0\(12)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[13]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13]\,
      O => \p_1_in__0\(13)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[14]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14]\,
      O => \p_1_in__0\(14)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15]\,
      O => \p_1_in__0\(15)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000040000"
    )
        port map (
      I0 => sel0(3),
      I1 => sel0(1),
      I2 => sel0(0),
      I3 => sel0(4),
      I4 => rd_req,
      I5 => sel0(2),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08080C00"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0\,
      I2 => sel0(3),
      I3 => data0(1),
      I4 => sel0(1),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => sel0(2),
      I1 => rd_req,
      I2 => sel0(4),
      I3 => sel0(0),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => rd_req,
      I1 => \^s_axi_rvalid\,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000040000000000"
    )
        port map (
      I0 => sel0(4),
      I1 => rd_req,
      I2 => sel0(2),
      I3 => sel0(3),
      I4 => sel0(1),
      I5 => sel0(0),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000000000"
    )
        port map (
      I0 => sel0(3),
      I1 => sel0(2),
      I2 => rd_req,
      I3 => sel0(4),
      I4 => sel0(0),
      I5 => sel0(1),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0200000000000000"
    )
        port map (
      I0 => sel0(1),
      I1 => sel0(3),
      I2 => sel0(4),
      I3 => rd_req,
      I4 => sel0(2),
      I5 => sel0(0),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000040000"
    )
        port map (
      I0 => sel0(1),
      I1 => sel0(3),
      I2 => sel0(0),
      I3 => sel0(4),
      I4 => rd_req,
      I5 => sel0(2),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      I2 => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0\,
      O => \p_1_in__0\(3)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFEEEF000F000"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0\,
      I2 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I3 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3]\,
      I4 => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0\,
      I5 => cl_init_done_axi,
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000400"
    )
        port map (
      I0 => sel0(1),
      I1 => sel0(3),
      I2 => sel0(2),
      I3 => rd_req,
      I4 => sel0(4),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00100000"
    )
        port map (
      I0 => sel0(0),
      I1 => sel0(4),
      I2 => rd_req,
      I3 => sel0(2),
      I4 => sel0(3),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080000"
    )
        port map (
      I0 => sel0(2),
      I1 => rd_req,
      I2 => sel0(4),
      I3 => sel0(3),
      I4 => sel0(1),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFF888F888F888"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5]\,
      I2 => \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0\,
      I3 => cl_errcontrol_r_axi_reg_n_0,
      I4 => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5]\,
      I5 => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      O => \p_1_in__0\(5)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000002000000"
    )
        port map (
      I0 => sel0(1),
      I1 => sel0(3),
      I2 => sel0(4),
      I3 => rd_req,
      I4 => sel0(2),
      I5 => sel0(0),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      I2 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7]\,
      I3 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      O => \p_1_in__0\(7)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8]\,
      I1 => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      I2 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8]\,
      I3 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      O => \p_1_in__0\(8)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000004000000"
    )
        port map (
      I0 => sel0(0),
      I1 => sel0(3),
      I2 => sel0(1),
      I3 => sel0(2),
      I4 => rd_req,
      I5 => sel0(4),
      O => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      I1 => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9]\,
      O => \p_1_in__0\(9)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(0),
      Q => s_axi_rdata(0)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[10]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(10),
      Q => s_axi_rdata(10)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[11]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(11),
      Q => s_axi_rdata(11)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[12]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(12),
      Q => s_axi_rdata(12)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[13]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(13),
      Q => s_axi_rdata(13)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[14]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(14),
      Q => s_axi_rdata(14)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[15]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(15),
      Q => s_axi_rdata(15)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(16),
      Q => s_axi_rdata(16)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(17),
      Q => s_axi_rdata(17)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(18),
      Q => s_axi_rdata(18)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(19),
      Q => s_axi_rdata(19)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(1),
      Q => s_axi_rdata(1)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(20),
      Q => s_axi_rdata(20)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(21),
      Q => s_axi_rdata(21)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(22),
      Q => s_axi_rdata(22)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(23),
      Q => s_axi_rdata(23)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(24),
      Q => s_axi_rdata(24)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(25),
      Q => s_axi_rdata(25)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(26),
      Q => s_axi_rdata(26)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(27),
      Q => s_axi_rdata(27)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(28),
      Q => s_axi_rdata(28)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(29),
      Q => s_axi_rdata(29)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(2),
      Q => s_axi_rdata(2)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(30),
      Q => s_axi_rdata(30)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(31),
      Q => s_axi_rdata(31)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(3),
      Q => s_axi_rdata(3)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(4),
      Q => s_axi_rdata(4)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[5]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(5),
      Q => s_axi_rdata(5)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(6),
      Q => s_axi_rdata(6)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[7]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(7),
      Q => s_axi_rdata(7)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[8]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(8),
      Q => s_axi_rdata(8)
    );
\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[9]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0\,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \p_1_in__0\(9),
      Q => s_axi_rdata(9)
    );
\gen_regs_wo_debug_wo_timeout.axi_rvalid_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"70"
    )
        port map (
      I0 => \^s_axi_rvalid\,
      I1 => s_axi_rready,
      I2 => rd_req,
      O => axi_rvalid4_out
    );
\gen_regs_wo_debug_wo_timeout.axi_rvalid_reg\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => axi_rvalid4_out,
      Q => \^s_axi_rvalid\
    );
\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00B0000000800000"
    )
        port map (
      I0 => s_axi_wdata(5),
      I1 => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0\,
      I2 => s_axi_wvalid,
      I3 => \^s_axi_bvalid\,
      I4 => wr_req,
      I5 => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0\,
      O => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0\
    );
\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000008"
    )
        port map (
      I0 => p_0_in(1),
      I1 => p_0_in(2),
      I2 => p_0_in(3),
      I3 => p_0_in(4),
      I4 => p_0_in(0),
      O => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0\,
      Q => \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0\
    );
\gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axi_wdata(1),
      I1 => dphy_en_axi,
      I2 => data0(1),
      O => \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0\
    );
\gen_regs_wo_debug_wo_timeout.dphy_en_axi_reg\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => '1',
      D => \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0\,
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => data0(1)
    );
\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => s_axi_wdata(0),
      I1 => dphy_en_axi,
      I2 => p_5_in_0(0),
      O => \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0\
    );
\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => p_0_in(0),
      I1 => p_0_in(4),
      I2 => p_0_in(3),
      I3 => p_0_in(2),
      I4 => p_0_in(1),
      I5 => \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0\,
      O => dphy_en_axi
    );
\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_reg\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0\,
      Q => p_5_in_0(0)
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000001000"
    )
        port map (
      I0 => p_0_in(0),
      I1 => p_0_in(4),
      I2 => p_0_in(3),
      I3 => p_0_in(2),
      I4 => p_0_in(1),
      I5 => \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0\,
      O => hs_settle_reg_axi
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[0]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      D => s_axi_wdata(0),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[1]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      D => s_axi_wdata(1),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(2),
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(3),
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[4]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      D => s_axi_wdata(4),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[5]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(5),
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(6),
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[7]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      D => s_axi_wdata(7),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7]\
    );
\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => hs_settle_reg_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(8),
      Q => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000010000"
    )
        port map (
      I0 => p_0_in(0),
      I1 => p_0_in(4),
      I2 => p_0_in(3),
      I3 => p_0_in(2),
      I4 => p_0_in(1),
      I5 => \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0\,
      O => init_value_axi
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => wr_req,
      I1 => \^s_axi_bvalid\,
      I2 => s_axi_wvalid,
      O => \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(0),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[10]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      D => s_axi_wdata(10),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[11]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(11),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[12]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(12),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[13]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(13),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[14]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(14),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[15]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      D => s_axi_wdata(15),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[16]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      D => s_axi_wdata(16),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(17),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(18),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(19),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(1),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[20]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(20),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[21]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(21),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[22]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(22),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[23]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(23),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[24]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(24),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(25),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[26]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(26),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(27),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(28),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[29]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(29),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(2),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[30]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(30),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[31]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(31),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(3),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[4]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(4),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[5]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      D => s_axi_wdata(5),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[6]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(6),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[7]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      D => s_axi_wdata(7),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[8]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_wdata(8),
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8]\
    );
\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[9]\: unisim.vcomponents.FDPE
     port map (
      C => s_axi_aclk,
      CE => init_value_axi,
      D => s_axi_wdata(9),
      PRE => dl3_pkt_cnt_sync_n_16,
      Q => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9]\
    );
hs_abort_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21\
     port map (
      SR(0) => dl3_pkt_cnt_sync_n_16,
      dl_status_reg(1) => dl_status_reg(4),
      dl_status_reg(0) => dl_status_reg(1),
      s_axi_aclk => s_axi_aclk
    );
hs_rx_timeout_div4clk_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22\
     port map (
      rx_div4_clk => rx_div4_clk
    );
hs_settle_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8\
     port map (
      Q(7 downto 0) => Q(7 downto 0),
      S(3 downto 0) => S(3 downto 0),
      core_clk => core_clk,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(8) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(7) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(6) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(5) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(4) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(3) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(2) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(1) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8]\(0) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0]\,
      \settle_cnt_reg[0]\(3 downto 0) => \settle_cnt_reg[0]\(3 downto 0),
      \settle_cnt_reg[0]_0\(2 downto 0) => \settle_cnt_reg[0]_0\(2 downto 0),
      \settle_cnt_reg[0]_1\(3 downto 0) => \settle_cnt_reg[0]_1\(3 downto 0),
      \settle_cnt_reg[0]_2\(2 downto 0) => \settle_cnt_reg[0]_2\(2 downto 0),
      \settle_cnt_reg[0]_3\(3 downto 0) => \settle_cnt_reg[0]_3\(3 downto 0),
      \settle_cnt_reg[7]\(7 downto 0) => \settle_cnt_reg[7]\(7 downto 0),
      system_rst_reg => system_rst_reg
    );
hs_skip_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23\
     port map (
      core_clk => core_clk,
      system_rst_reg => system_rst_reg
    );
init_done_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3\
     port map (
      prmry_ack => NLW_init_done_sync_prmry_ack_UNCONNECTED,
      prmry_aclk => '0',
      prmry_in => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      prmry_rst_n => '0',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => s_axi_aclk,
      scndry_out => cl_init_done_axi,
      scndry_rst_n => s_axi_aresetn,
      scndry_vect_out(1 downto 0) => NLW_init_done_sync_scndry_vect_out_UNCONNECTED(1 downto 0)
    );
init_reg_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24\
     port map (
      Q(31) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31]\,
      Q(30) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30]\,
      Q(29) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29]\,
      Q(28) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28]\,
      Q(27) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27]\,
      Q(26) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26]\,
      Q(25) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25]\,
      Q(24) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24]\,
      Q(23) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23]\,
      Q(22) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22]\,
      Q(21) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21]\,
      Q(20) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20]\,
      Q(19) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19]\,
      Q(18) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18]\,
      Q(17) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17]\,
      Q(16) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16]\,
      Q(15) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15]\,
      Q(14) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14]\,
      Q(13) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13]\,
      Q(12) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12]\,
      Q(11) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11]\,
      Q(10) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10]\,
      Q(9) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9]\,
      Q(8) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8]\,
      Q(7) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7]\,
      Q(6) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6]\,
      Q(5) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5]\,
      Q(4) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4]\,
      Q(3) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3]\,
      Q(2) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2]\,
      Q(1) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1]\,
      Q(0) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0]\,
      core_clk => core_clk,
      \s_level_out_bus_d4_reg[22]_0\(14 downto 0) => \s_level_out_bus_d4_reg[22]\(14 downto 0)
    );
mode_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5\
     port map (
      D(1 downto 0) => \p_1_in__0\(1 downto 0),
      Q(1) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1]\,
      Q(0) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0]\,
      SR(0) => dl3_pkt_cnt_sync_n_16,
      dl_status_reg_bit_0_reg(2) => dl_status_reg(0),
      dl_status_reg_bit_0_reg(1) => dl_status_reg(3),
      dl_status_reg_bit_0_reg(0) => cl_status_reg_bit_0_reg(0),
      \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0\,
      \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0\,
      \rd_addr_reg[2]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      \rd_addr_reg[3]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0\,
      \rd_addr_reg[3]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0\,
      \rd_addr_reg[3]_1\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0\,
      \rd_addr_reg[5]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0\,
      \rd_addr_reg[6]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0\,
      s_axi_aclk => s_axi_aclk
    );
\rd_addr[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0400"
    )
        port map (
      I0 => rd_req,
      I1 => reset_released_r,
      I2 => wr_req,
      I3 => s_axi_arvalid,
      O => rd_req0
    );
\rd_addr_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => rd_req0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_araddr(0),
      Q => sel0(0)
    );
\rd_addr_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => rd_req0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_araddr(1),
      Q => sel0(1)
    );
\rd_addr_reg[4]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => rd_req0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_araddr(2),
      Q => sel0(2)
    );
\rd_addr_reg[5]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => rd_req0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_araddr(3),
      Q => sel0(3)
    );
\rd_addr_reg[6]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => rd_req0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => s_axi_araddr(4),
      Q => sel0(4)
    );
rd_req_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0020FF20FF20FF20"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => wr_req,
      I2 => reset_released_r,
      I3 => rd_req,
      I4 => \^s_axi_rvalid\,
      I5 => s_axi_rready,
      O => rd_req_i_1_n_0
    );
rd_req_reg: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => rd_req_i_1_n_0,
      Q => rd_req
    );
reset_released_r_reg: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => reset_released,
      Q => reset_released_r
    );
reset_released_reg: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => '1',
      CLR => dl3_pkt_cnt_sync_n_16,
      D => '1',
      Q => reset_released
    );
s_axi_arready_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => wr_req,
      I1 => reset_released_r,
      I2 => rd_req,
      O => s_axi_arready
    );
s_axi_awready_INST_0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => rd_req,
      I1 => reset_released_r,
      I2 => wr_req,
      I3 => s_axi_arvalid,
      O => s_axi_awready
    );
s_axi_wready_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => wr_req,
      I1 => \^s_axi_bvalid\,
      O => s_axi_wready
    );
stopstate_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4\
     port map (
      D(1) => \p_1_in__0\(6),
      D(0) => \p_1_in__0\(4),
      Q(1) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6]\,
      Q(0) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4]\,
      SR(0) => dl3_pkt_cnt_sync_n_16,
      dl_status_reg_bit_6_reg(2) => dl_status_reg(2),
      dl_status_reg_bit_6_reg(1) => dl_status_reg(5),
      dl_status_reg_bit_6_reg(0) => D(0),
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6]\(1) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6]\,
      \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6]\(0) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4]\,
      \rd_addr_reg[2]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      \rd_addr_reg[3]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0\,
      \rd_addr_reg[3]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0\,
      \rd_addr_reg[3]_1\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0\,
      \rd_addr_reg[5]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      \rd_addr_reg[5]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0\,
      \rd_addr_reg[6]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0\,
      s_axi_aclk => s_axi_aclk
    );
ulps_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25\
     port map (
      D(0) => \p_1_in__0\(2),
      Q(0) => \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2]\,
      SR(0) => dl3_pkt_cnt_sync_n_16,
      \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2]\(0) => \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2]\,
      \rd_addr_reg[2]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0\,
      \rd_addr_reg[3]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0\,
      \rd_addr_reg[3]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0\,
      \rd_addr_reg[3]_1\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0\,
      \rd_addr_reg[5]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0\,
      \rd_addr_reg[5]_0\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0\,
      \rd_addr_reg[6]\ => \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0\,
      s_axi_aclk => s_axi_aclk
    );
\wr_addr[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000000000"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => rd_req,
      I2 => reset_released_r,
      I3 => wr_req,
      I4 => s_axi_arvalid,
      I5 => s_axi_awaddr(0),
      O => \wr_addr[2]_i_1_n_0\
    );
\wr_addr[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000000000"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => rd_req,
      I2 => reset_released_r,
      I3 => wr_req,
      I4 => s_axi_arvalid,
      I5 => s_axi_awaddr(1),
      O => \wr_addr[3]_i_1_n_0\
    );
\wr_addr[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000000000"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => rd_req,
      I2 => reset_released_r,
      I3 => wr_req,
      I4 => s_axi_arvalid,
      I5 => s_axi_awaddr(2),
      O => \wr_addr[4]_i_1_n_0\
    );
\wr_addr[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000000000"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => rd_req,
      I2 => reset_released_r,
      I3 => wr_req,
      I4 => s_axi_arvalid,
      I5 => s_axi_awaddr(3),
      O => \wr_addr[5]_i_1_n_0\
    );
\wr_addr[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000002000000000"
    )
        port map (
      I0 => s_axi_awvalid,
      I1 => rd_req,
      I2 => reset_released_r,
      I3 => wr_req,
      I4 => s_axi_arvalid,
      I5 => s_axi_awaddr(4),
      O => \wr_addr[6]_i_1_n_0\
    );
\wr_addr_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => wr_req_i_1_n_0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \wr_addr[2]_i_1_n_0\,
      Q => p_0_in(0)
    );
\wr_addr_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => wr_req_i_1_n_0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \wr_addr[3]_i_1_n_0\,
      Q => p_0_in(1)
    );
\wr_addr_reg[4]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => wr_req_i_1_n_0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \wr_addr[4]_i_1_n_0\,
      Q => p_0_in(2)
    );
\wr_addr_reg[5]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => wr_req_i_1_n_0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \wr_addr[5]_i_1_n_0\,
      Q => p_0_in(3)
    );
\wr_addr_reg[6]\: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => wr_req_i_1_n_0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => \wr_addr[6]_i_1_n_0\,
      Q => p_0_in(4)
    );
wr_req_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => s_axi_bready,
      I1 => \^s_axi_bvalid\,
      I2 => wr_req07_out,
      O => wr_req_i_1_n_0
    );
wr_req_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00100000"
    )
        port map (
      I0 => s_axi_arvalid,
      I1 => wr_req,
      I2 => reset_released_r,
      I3 => rd_req,
      I4 => s_axi_awvalid,
      O => wr_req07_out
    );
wr_req_reg: unisim.vcomponents.FDCE
     port map (
      C => s_axi_aclk,
      CE => wr_req_i_1_n_0,
      CLR => dl3_pkt_cnt_sync_n_16,
      D => wr_req07_out,
      Q => wr_req
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series is
  port (
    core_clk : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    cl_enable : in STD_LOGIC;
    srst : in STD_LOGIC;
    dphyen : in STD_LOGIC;
    system_rst_byteclk : out STD_LOGIC;
    system_rst : out STD_LOGIC
  );
  attribute DPHY_PRESET : string;
  attribute DPHY_PRESET of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "yes";
  attribute MTBF_SYNC_STAGES : integer;
  attribute MTBF_SYNC_STAGES of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is 3;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "mipi_dphy_v4_0_1_rx_rst_logic_7series";
  attribute RESET_FSM_DONE : string;
  attribute RESET_FSM_DONE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "2'b10";
  attribute RST_BEGIN : string;
  attribute RST_BEGIN of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "2'b00";
  attribute STABLE_CLK_PERIOD : string;
  attribute STABLE_CLK_PERIOD of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "5.000000";
  attribute WAIT_FOR_ENABLE : string;
  attribute WAIT_FOR_ENABLE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series : entity is "2'b01";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series is
  signal \<const0>\ : STD_LOGIC;
  signal core_rst_sync : STD_LOGIC;
  signal rst_blk_state : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \rst_blk_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \rst_blk_state[1]_i_1_n_0\ : STD_LOGIC;
  signal \^system_rst\ : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of system_rst : signal is "true";
  signal system_rst_byteclk_i_1_n_0 : STD_LOGIC;
  signal system_rst_byteclk_i_2_n_0 : STD_LOGIC;
  signal system_rst_byteclk_orig : STD_LOGIC;
  attribute RTL_KEEP of system_rst_byteclk_orig : signal is "true";
  signal system_rst_i_1_n_0 : STD_LOGIC;
  signal NLW_core_rst_sync_i_prmry_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute DowngradeIPIdentifiedWarnings of core_rst_sync_i : label is "yes";
  attribute c_cdc_type : string;
  attribute c_cdc_type of core_rst_sync_i : label is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of core_rst_sync_i : label is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of core_rst_sync_i : label is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of core_rst_sync_i : label is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of core_rst_sync_i : label is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of core_rst_sync_i : label is "6'b000010";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \rst_blk_state[0]_i_1\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \rst_blk_state[1]_i_1\ : label is "soft_lutpair0";
  attribute KEEP : string;
  attribute KEEP of system_rst_byteclk_reg : label is "yes";
  attribute KEEP of system_rst_reg : label is "yes";
  attribute keep of system_rst : signal is "true";
  attribute keep of system_rst_byteclk : signal is "true";
begin
  system_rst <= \^system_rst\;
  system_rst_byteclk <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
core_rst_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2\
     port map (
      prmry_ack => NLW_core_rst_sync_i_prmry_ack_UNCONNECTED,
      prmry_aclk => '0',
      prmry_in => core_rst,
      prmry_rst_n => '1',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => core_clk,
      scndry_out => core_rst_sync,
      scndry_rst_n => '0',
      scndry_vect_out(1 downto 0) => NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED(1 downto 0)
    );
\rst_blk_state[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"70777777"
    )
        port map (
      I0 => rst_blk_state(0),
      I1 => rst_blk_state(1),
      I2 => srst,
      I3 => dphyen,
      I4 => cl_enable,
      O => \rst_blk_state[0]_i_1_n_0\
    );
\rst_blk_state[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"07000000"
    )
        port map (
      I0 => rst_blk_state(0),
      I1 => rst_blk_state(1),
      I2 => srst,
      I3 => dphyen,
      I4 => cl_enable,
      O => \rst_blk_state[1]_i_1_n_0\
    );
\rst_blk_state_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst_sync,
      D => \rst_blk_state[0]_i_1_n_0\,
      Q => rst_blk_state(0)
    );
\rst_blk_state_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst_sync,
      D => \rst_blk_state[1]_i_1_n_0\,
      Q => rst_blk_state(1)
    );
system_rst_byteclk_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FC8C0C8C"
    )
        port map (
      I0 => system_rst_byteclk_orig,
      I1 => system_rst_byteclk_i_2_n_0,
      I2 => rst_blk_state(0),
      I3 => rst_blk_state(1),
      I4 => system_rst_byteclk_orig,
      O => system_rst_byteclk_i_1_n_0
    );
system_rst_byteclk_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BF"
    )
        port map (
      I0 => srst,
      I1 => dphyen,
      I2 => cl_enable,
      O => system_rst_byteclk_i_2_n_0
    );
system_rst_byteclk_reg: unisim.vcomponents.FDPE
     port map (
      C => core_clk,
      CE => '1',
      D => system_rst_byteclk_i_1_n_0,
      PRE => core_rst_sync,
      Q => system_rst_byteclk_orig
    );
system_rst_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FC8C0C8C"
    )
        port map (
      I0 => \^system_rst\,
      I1 => system_rst_byteclk_i_2_n_0,
      I2 => rst_blk_state(0),
      I3 => rst_blk_state(1),
      I4 => \^system_rst\,
      O => system_rst_i_1_n_0
    );
system_rst_reg: unisim.vcomponents.FDPE
     port map (
      C => core_clk,
      CE => '1',
      D => system_rst_i_1_n_0,
      PRE => core_rst_sync,
      Q => \^system_rst\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    dl1_rxvalidhs : out STD_LOGIC;
    dl1_rxsynchs : out STD_LOGIC;
    dl1_errsoths : out STD_LOGIC;
    dl1_errsotsynchs : out STD_LOGIC;
    pkt_cnt_r0 : out STD_LOGIC;
    dl1_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl_en_hs_lpn_i : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC;
    rx_dl1_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align : entity is "mipi_dphy_v4_0_1_rx_sot_det_align";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align is
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \align_done_i_10__0_n_0\ : STD_LOGIC;
  signal \align_done_i_11__0_n_0\ : STD_LOGIC;
  signal \align_done_i_12__0_n_0\ : STD_LOGIC;
  signal \align_done_i_13__0_n_0\ : STD_LOGIC;
  signal \align_done_i_14__0_n_0\ : STD_LOGIC;
  signal \align_done_i_15__0_n_0\ : STD_LOGIC;
  signal \align_done_i_16__0_n_0\ : STD_LOGIC;
  signal \align_done_i_17__0_n_0\ : STD_LOGIC;
  signal \align_done_i_18__0_n_0\ : STD_LOGIC;
  signal \align_done_i_19__0_n_0\ : STD_LOGIC;
  signal \align_done_i_1__0_n_0\ : STD_LOGIC;
  signal \align_done_i_20__0_n_0\ : STD_LOGIC;
  signal \align_done_i_21__0_n_0\ : STD_LOGIC;
  signal align_done_i_22_n_0 : STD_LOGIC;
  signal align_done_i_2_n_0 : STD_LOGIC;
  signal \align_done_i_3__0_n_0\ : STD_LOGIC;
  signal \align_done_i_4__0_n_0\ : STD_LOGIC;
  signal \align_done_i_5__0_n_0\ : STD_LOGIC;
  signal \align_done_i_6__0_n_0\ : STD_LOGIC;
  signal \align_done_i_7__0_n_0\ : STD_LOGIC;
  signal \align_done_i_8__0_n_0\ : STD_LOGIC;
  signal \align_done_i_9__0_n_0\ : STD_LOGIC;
  signal \^dl1_errsoths\ : STD_LOGIC;
  signal \^dl1_errsotsynchs\ : STD_LOGIC;
  signal \^dl1_rxsynchs\ : STD_LOGIC;
  signal \^dl1_rxvalidhs\ : STD_LOGIC;
  signal en_hs_lpn_sync : STD_LOGIC;
  signal en_hs_lpn_sync_r : STD_LOGIC;
  signal \errsoths_i_10__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_11__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_12__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_13__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_1__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_2__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_3__0_n_0\ : STD_LOGIC;
  signal errsoths_i_4_n_0 : STD_LOGIC;
  signal \errsoths_i_5__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_6__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_7__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_8__0_n_0\ : STD_LOGIC;
  signal \errsoths_i_9__0_n_0\ : STD_LOGIC;
  signal \errsotsynchs_i_1__0_n_0\ : STD_LOGIC;
  signal \errsotsynchs_i_2__0_n_0\ : STD_LOGIC;
  signal \errsotsynchs_i_3__0_n_0\ : STD_LOGIC;
  signal \errsotsynchs_i_4__0_n_0\ : STD_LOGIC;
  signal \errsotsynchs_i_5__0_n_0\ : STD_LOGIC;
  signal h_reg : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of h_reg : signal is std.standard.true;
  signal hs_data : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \hs_data[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[1]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[2]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[3]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[4]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[4]_i_3__0_n_0\ : STD_LOGIC;
  signal \hs_data[5]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[5]_i_3__0_n_0\ : STD_LOGIC;
  signal \hs_data[6]_i_2__0_n_0\ : STD_LOGIC;
  signal \hs_data[6]_i_3__0_n_0\ : STD_LOGIC;
  signal \hs_data[7]_i_1__0_n_0\ : STD_LOGIC;
  signal \hs_data[7]_i_3__0_n_0\ : STD_LOGIC;
  signal \hs_data[7]_i_4__0_n_0\ : STD_LOGIC;
  signal \hs_dvalid_i_1__0_n_0\ : STD_LOGIC;
  signal rx_hs_dp_r : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \rxsynchs_i_10__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_11__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_12__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_13__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_14__0_n_0\ : STD_LOGIC;
  signal rxsynchs_i_15_n_0 : STD_LOGIC;
  signal rxsynchs_i_16_n_0 : STD_LOGIC;
  signal \rxsynchs_i_1__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_2__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_3__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_4__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_5__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_6__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_7__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_8__0_n_0\ : STD_LOGIC;
  signal \rxsynchs_i_9__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_3__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_4__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_5__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_6_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_7__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_8__0_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_1__0_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_2__0_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_3_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_4_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_5_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_6_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_10__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_11__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_12__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_13_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_14_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_15_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_1__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_2_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_3__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_4__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_5__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_6__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_7__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_8__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_9__0_n_0\ : STD_LOGIC;
  signal \start_bit_reg_n_0_[0]\ : STD_LOGIC;
  signal \start_bit_reg_n_0_[1]\ : STD_LOGIC;
  signal \start_bit_reg_n_0_[2]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \align_done_i_1__0\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of align_done_i_2 : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \align_done_i_3__0\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \align_done_i_4__0\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \align_done_i_5__0\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \align_done_i_6__0\ : label is "soft_lutpair57";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of en_hs_lpn_sync_r_reg : label is "no";
  attribute SOFT_HLUTNM of \errsoths_i_2__0\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \errsoths_i_6__0\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \errsotsynchs_i_4__0\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \errsotsynchs_i_5__0\ : label is "soft_lutpair58";
  attribute DONT_TOUCH of \h_reg_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \h_reg_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[10]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[11]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[12]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[13]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[14]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[15]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[1]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[2]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[3]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[4]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[5]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[6]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[7]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[8]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[9]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \hs_data[0]_i_1__0\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \hs_data[1]_i_1__0\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \hs_data[2]_i_1__0\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \hs_data[3]_i_1__0\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \hs_data[4]_i_1__0\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \hs_data[5]_i_1__0\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \hs_data[6]_i_1__0\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \hs_data[7]_i_2__0\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \rxsynchs_i_1__0\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \rxsynchs_i_3__0\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \rxsynchs_i_6__0\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \start_bit[0]_i_6\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \start_bit[2]_i_2\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \start_bit[2]_i_7__0\ : label is "soft_lutpair62";
begin
  E(0) <= \^e\(0);
  dl1_errsoths <= \^dl1_errsoths\;
  dl1_errsotsynchs <= \^dl1_errsotsynchs\;
  dl1_rxsynchs <= \^dl1_rxsynchs\;
  dl1_rxvalidhs <= \^dl1_rxvalidhs\;
\align_done_i_10__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"20000000B2202000"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      I2 => h_reg(8),
      I3 => h_reg(6),
      I4 => h_reg(7),
      I5 => h_reg(5),
      O => \align_done_i_10__0_n_0\
    );
\align_done_i_11__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080000080E80080"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => h_reg(14),
      I3 => h_reg(13),
      I4 => h_reg(12),
      I5 => h_reg(9),
      O => \align_done_i_11__0_n_0\
    );
\align_done_i_12__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00A2"
    )
        port map (
      I0 => \align_done_i_8__0_n_0\,
      I1 => \align_done_i_17__0_n_0\,
      I2 => \align_done_i_18__0_n_0\,
      I3 => \align_done_i_19__0_n_0\,
      O => \align_done_i_12__0_n_0\
    );
\align_done_i_13__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"40D4004000400000"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(9),
      I2 => h_reg(10),
      I3 => h_reg(12),
      I4 => h_reg(13),
      I5 => h_reg(11),
      O => \align_done_i_13__0_n_0\
    );
\align_done_i_14__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFF00007FFF7FFF"
    )
        port map (
      I0 => \align_done_i_20__0_n_0\,
      I1 => h_reg(11),
      I2 => h_reg(10),
      I3 => h_reg(9),
      I4 => \align_done_i_21__0_n_0\,
      I5 => align_done_i_22_n_0,
      O => \align_done_i_14__0_n_0\
    );
\align_done_i_15__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFBAAAAAAA"
    )
        port map (
      I0 => \start_bit[1]_i_6_n_0\,
      I1 => h_reg(13),
      I2 => h_reg(14),
      I3 => h_reg(15),
      I4 => h_reg(12),
      I5 => h_reg(10),
      O => \align_done_i_15__0_n_0\
    );
\align_done_i_16__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAFE"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(3),
      I2 => h_reg(2),
      I3 => h_reg(6),
      I4 => h_reg(5),
      O => \align_done_i_16__0_n_0\
    );
\align_done_i_17__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFABFFABFFABAAAB"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(7),
      I2 => h_reg(8),
      I3 => h_reg(11),
      I4 => h_reg(13),
      I5 => h_reg(12),
      O => \align_done_i_17__0_n_0\
    );
\align_done_i_18__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBAFAFAAABABAFA"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(12),
      I2 => h_reg(10),
      I3 => h_reg(14),
      I4 => h_reg(11),
      I5 => h_reg(13),
      O => \align_done_i_18__0_n_0\
    );
\align_done_i_19__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => h_reg(14),
      I3 => h_reg(13),
      I4 => h_reg(12),
      O => \align_done_i_19__0_n_0\
    );
\align_done_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0E0"
    )
        port map (
      I0 => align_done_i_2_n_0,
      I1 => \align_done_i_3__0_n_0\,
      I2 => en_hs_lpn_sync_r,
      I3 => \^e\(0),
      O => \align_done_i_1__0_n_0\
    );
align_done_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \align_done_i_4__0_n_0\,
      I1 => \start_bit[0]_i_3__0_n_0\,
      I2 => \start_bit[0]_i_2__0_n_0\,
      O => align_done_i_2_n_0
    );
\align_done_i_20__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(12),
      O => \align_done_i_20__0_n_0\
    );
\align_done_i_21__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BAAABABAFEBAFAFA"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(12),
      I4 => h_reg(13),
      I5 => h_reg(11),
      O => \align_done_i_21__0_n_0\
    );
align_done_i_22: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFABFFABFFABAAAB"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(6),
      I2 => h_reg(7),
      I3 => h_reg(10),
      I4 => h_reg(12),
      I5 => h_reg(11),
      O => align_done_i_22_n_0
    );
\align_done_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEFF"
    )
        port map (
      I0 => \align_done_i_5__0_n_0\,
      I1 => \align_done_i_6__0_n_0\,
      I2 => \align_done_i_7__0_n_0\,
      I3 => \align_done_i_8__0_n_0\,
      O => \align_done_i_3__0_n_0\
    );
\align_done_i_4__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => \rxsynchs_i_7__0_n_0\,
      I1 => \align_done_i_9__0_n_0\,
      I2 => \align_done_i_10__0_n_0\,
      O => \align_done_i_4__0_n_0\
    );
\align_done_i_5__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \align_done_i_11__0_n_0\,
      I1 => \align_done_i_12__0_n_0\,
      O => \align_done_i_5__0_n_0\
    );
\align_done_i_6__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \align_done_i_13__0_n_0\,
      I1 => \align_done_i_11__0_n_0\,
      I2 => \align_done_i_14__0_n_0\,
      O => \align_done_i_6__0_n_0\
    );
\align_done_i_7__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A2AAFBAABBAAFFAA"
    )
        port map (
      I0 => \align_done_i_15__0_n_0\,
      I1 => h_reg(13),
      I2 => h_reg(14),
      I3 => h_reg(11),
      I4 => h_reg(12),
      I5 => h_reg(15),
      O => \align_done_i_7__0_n_0\
    );
\align_done_i_8__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F7FF71F7FFFFF7FF"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(12),
      I2 => h_reg(14),
      I3 => h_reg(15),
      I4 => h_reg(10),
      I5 => h_reg(11),
      O => \align_done_i_8__0_n_0\
    );
\align_done_i_9__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5101D54151115101"
    )
        port map (
      I0 => \align_done_i_16__0_n_0\,
      I1 => h_reg(5),
      I2 => h_reg(6),
      I3 => h_reg(7),
      I4 => h_reg(8),
      I5 => h_reg(9),
      O => \align_done_i_9__0_n_0\
    );
align_done_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \align_done_i_1__0_n_0\,
      Q => \^e\(0),
      R => '0'
    );
en_hs_lpn_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0\
     port map (
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      \out\ => en_hs_lpn_sync,
      rx_div4_clk => rx_div4_clk
    );
en_hs_lpn_sync_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => en_hs_lpn_sync,
      Q => en_hs_lpn_sync_r,
      R => '0'
    );
\errsoths_i_10__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4904040004000000"
    )
        port map (
      I0 => h_reg(5),
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(8),
      I4 => h_reg(7),
      I5 => h_reg(6),
      O => \errsoths_i_10__0_n_0\
    );
\errsoths_i_11__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000944000004000"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(9),
      I2 => h_reg(8),
      I3 => h_reg(12),
      I4 => h_reg(11),
      I5 => h_reg(10),
      O => \errsoths_i_11__0_n_0\
    );
\errsoths_i_12__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7FF"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(12),
      I2 => h_reg(14),
      I3 => h_reg(15),
      O => \errsoths_i_12__0_n_0\
    );
\errsoths_i_13__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4904040004000000"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(12),
      I2 => h_reg(13),
      I3 => h_reg(14),
      I4 => h_reg(10),
      I5 => h_reg(11),
      O => \errsoths_i_13__0_n_0\
    );
\errsoths_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA8AFFFFAA8A0000"
    )
        port map (
      I0 => \errsoths_i_2__0_n_0\,
      I1 => \errsoths_i_3__0_n_0\,
      I2 => errsoths_i_4_n_0,
      I3 => \errsoths_i_5__0_n_0\,
      I4 => \rxsynchs_i_3__0_n_0\,
      I5 => \^dl1_errsoths\,
      O => \errsoths_i_1__0_n_0\
    );
\errsoths_i_2__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => en_hs_lpn_sync_r,
      I1 => \^e\(0),
      O => \errsoths_i_2__0_n_0\
    );
\errsoths_i_3__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000055F3"
    )
        port map (
      I0 => \errsoths_i_6__0_n_0\,
      I1 => \errsoths_i_7__0_n_0\,
      I2 => \errsoths_i_8__0_n_0\,
      I3 => \rxsynchs_i_5__0_n_0\,
      I4 => align_done_i_2_n_0,
      O => \errsoths_i_3__0_n_0\
    );
errsoths_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B6FBFBFFFBFFFFFF"
    )
        port map (
      I0 => h_reg(3),
      I1 => h_reg(6),
      I2 => h_reg(7),
      I3 => h_reg(8),
      I4 => h_reg(5),
      I5 => h_reg(4),
      O => errsoths_i_4_n_0
    );
\errsoths_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000000094404000"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(7),
      I2 => h_reg(9),
      I3 => h_reg(5),
      I4 => h_reg(6),
      I5 => h_reg(4),
      O => \errsoths_i_5__0_n_0\
    );
\errsoths_i_6__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1011"
    )
        port map (
      I0 => \errsoths_i_9__0_n_0\,
      I1 => \errsoths_i_10__0_n_0\,
      I2 => \start_bit[2]_i_4__0_n_0\,
      I3 => \errsoths_i_11__0_n_0\,
      O => \errsoths_i_6__0_n_0\
    );
\errsoths_i_7__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFFABAA"
    )
        port map (
      I0 => \align_done_i_8__0_n_0\,
      I1 => \errsoths_i_12__0_n_0\,
      I2 => h_reg(10),
      I3 => h_reg(11),
      I4 => \align_done_i_6__0_n_0\,
      I5 => \errsoths_i_13__0_n_0\,
      O => \errsoths_i_7__0_n_0\
    );
\errsoths_i_8__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6110100010000000"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(12),
      I2 => h_reg(13),
      I3 => h_reg(11),
      I4 => h_reg(10),
      I5 => h_reg(9),
      O => \errsoths_i_8__0_n_0\
    );
\errsoths_i_9__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000000094404000"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(8),
      I2 => h_reg(7),
      I3 => h_reg(9),
      I4 => h_reg(11),
      I5 => h_reg(10),
      O => \errsoths_i_9__0_n_0\
    );
errsoths_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \errsoths_i_1__0_n_0\,
      Q => \^dl1_errsoths\,
      R => '0'
    );
\errsotsynchs_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04FF0400"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => \errsotsynchs_i_2__0_n_0\,
      I3 => \rxsynchs_i_3__0_n_0\,
      I4 => \^dl1_errsotsynchs\,
      O => \errsotsynchs_i_1__0_n_0\
    );
\errsotsynchs_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFFABAA"
    )
        port map (
      I0 => align_done_i_2_n_0,
      I1 => \rxsynchs_i_5__0_n_0\,
      I2 => \errsotsynchs_i_3__0_n_0\,
      I3 => \errsotsynchs_i_4__0_n_0\,
      I4 => \rxsynchs_i_4__0_n_0\,
      I5 => \errsotsynchs_i_5__0_n_0\,
      O => \errsotsynchs_i_2__0_n_0\
    );
\errsotsynchs_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \align_done_i_14__0_n_0\,
      I1 => \align_done_i_11__0_n_0\,
      O => \errsotsynchs_i_3__0_n_0\
    );
\errsotsynchs_i_4__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0FD"
    )
        port map (
      I0 => \align_done_i_7__0_n_0\,
      I1 => \align_done_i_11__0_n_0\,
      I2 => \align_done_i_6__0_n_0\,
      I3 => \align_done_i_12__0_n_0\,
      O => \errsotsynchs_i_4__0_n_0\
    );
\errsotsynchs_i_5__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF01"
    )
        port map (
      I0 => \align_done_i_10__0_n_0\,
      I1 => \align_done_i_9__0_n_0\,
      I2 => \start_bit[0]_i_2__0_n_0\,
      I3 => \start_bit[0]_i_3__0_n_0\,
      O => \errsotsynchs_i_5__0_n_0\
    );
errsotsynchs_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \errsotsynchs_i_1__0_n_0\,
      Q => \^dl1_errsotsynchs\,
      R => '0'
    );
\h_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(8),
      Q => h_reg(0),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(2),
      Q => h_reg(10),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(3),
      Q => h_reg(11),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(4),
      Q => h_reg(12),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(5),
      Q => h_reg(13),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(6),
      Q => h_reg(14),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(7),
      Q => h_reg(15),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(9),
      Q => h_reg(1),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(10),
      Q => h_reg(2),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(11),
      Q => h_reg(3),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(12),
      Q => h_reg(4),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(13),
      Q => h_reg(5),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(14),
      Q => h_reg(6),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(15),
      Q => h_reg(7),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(0),
      Q => h_reg(8),
      R => \hs_data[7]_i_1__0_n_0\
    );
\h_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(1),
      Q => h_reg(9),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data[0]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[4]_i_3__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[0]_i_2__0_n_0\,
      O => hs_data(0)
    );
\hs_data[0]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(3),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(2),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(1),
      O => \hs_data[0]_i_2__0_n_0\
    );
\hs_data[1]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[5]_i_3__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[1]_i_2__0_n_0\,
      O => hs_data(1)
    );
\hs_data[1]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(5),
      I1 => h_reg(4),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(3),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(2),
      O => \hs_data[1]_i_2__0_n_0\
    );
\hs_data[2]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[6]_i_3__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[2]_i_2__0_n_0\,
      O => hs_data(2)
    );
\hs_data[2]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(5),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(4),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(3),
      O => \hs_data[2]_i_2__0_n_0\
    );
\hs_data[3]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[7]_i_4__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[3]_i_2__0_n_0\,
      O => hs_data(3)
    );
\hs_data[3]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(6),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(5),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(4),
      O => \hs_data[3]_i_2__0_n_0\
    );
\hs_data[4]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[4]_i_2__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[4]_i_3__0_n_0\,
      O => hs_data(4)
    );
\hs_data[4]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(12),
      I1 => h_reg(11),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(10),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(9),
      O => \hs_data[4]_i_2__0_n_0\
    );
\hs_data[4]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(7),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(6),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(5),
      O => \hs_data[4]_i_3__0_n_0\
    );
\hs_data[5]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[5]_i_2__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[5]_i_3__0_n_0\,
      O => hs_data(5)
    );
\hs_data[5]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(12),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(11),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(10),
      O => \hs_data[5]_i_2__0_n_0\
    );
\hs_data[5]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(8),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(7),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(6),
      O => \hs_data[5]_i_3__0_n_0\
    );
\hs_data[6]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[6]_i_2__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[6]_i_3__0_n_0\,
      O => hs_data(6)
    );
\hs_data[6]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(14),
      I1 => h_reg(13),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(12),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(11),
      O => \hs_data[6]_i_2__0_n_0\
    );
\hs_data[6]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(8),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(7),
      O => \hs_data[6]_i_3__0_n_0\
    );
\hs_data[7]_i_1__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => en_hs_lpn_sync_r,
      O => \hs_data[7]_i_1__0_n_0\
    );
\hs_data[7]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[7]_i_3__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[7]_i_4__0_n_0\,
      O => hs_data(7)
    );
\hs_data[7]_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(15),
      I1 => h_reg(14),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(13),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(12),
      O => \hs_data[7]_i_3__0_n_0\
    );
\hs_data[7]_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(9),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(8),
      O => \hs_data[7]_i_4__0_n_0\
    );
\hs_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(0),
      Q => dl1_rxdatahs(0),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(1),
      Q => dl1_rxdatahs(1),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(2),
      Q => dl1_rxdatahs(2),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(3),
      Q => dl1_rxdatahs(3),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(4),
      Q => dl1_rxdatahs(4),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(5),
      Q => dl1_rxdatahs(5),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(6),
      Q => dl1_rxdatahs(6),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(7),
      Q => dl1_rxdatahs(7),
      R => \hs_data[7]_i_1__0_n_0\
    );
\hs_dvalid_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C8"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => \^dl1_rxvalidhs\,
      O => \hs_dvalid_i_1__0_n_0\
    );
hs_dvalid_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \hs_dvalid_i_1__0_n_0\,
      Q => \^dl1_rxvalidhs\,
      R => '0'
    );
\pkt_cnt_r[0]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA8"
    )
        port map (
      I0 => \^e\(0),
      I1 => \^dl1_errsotsynchs\,
      I2 => \^dl1_rxsynchs\,
      I3 => \^dl1_errsoths\,
      O => pkt_cnt_r0
    );
\rx_hs_dp_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(0),
      Q => rx_hs_dp_r(0),
      R => '0'
    );
\rx_hs_dp_r_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(1),
      Q => rx_hs_dp_r(1),
      R => '0'
    );
\rx_hs_dp_r_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(2),
      Q => rx_hs_dp_r(2),
      R => '0'
    );
\rx_hs_dp_r_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(3),
      Q => rx_hs_dp_r(3),
      R => '0'
    );
\rx_hs_dp_r_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(4),
      Q => rx_hs_dp_r(4),
      R => '0'
    );
\rx_hs_dp_r_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(5),
      Q => rx_hs_dp_r(5),
      R => '0'
    );
\rx_hs_dp_r_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(6),
      Q => rx_hs_dp_r(6),
      R => '0'
    );
\rx_hs_dp_r_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl1_hs_dp(7),
      Q => rx_hs_dp_r(7),
      R => '0'
    );
\rxsynchs_i_10__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"40000000D4404000"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      I2 => h_reg(7),
      I3 => h_reg(8),
      I4 => h_reg(11),
      I5 => h_reg(6),
      O => \rxsynchs_i_10__0_n_0\
    );
\rxsynchs_i_11__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DCFFC0FF"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(9),
      I2 => h_reg(10),
      I3 => h_reg(8),
      I4 => h_reg(12),
      O => \rxsynchs_i_11__0_n_0\
    );
\rxsynchs_i_12__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF0100"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(10),
      I2 => h_reg(11),
      I3 => h_reg(9),
      I4 => h_reg(7),
      I5 => rxsynchs_i_15_n_0,
      O => \rxsynchs_i_12__0_n_0\
    );
\rxsynchs_i_13__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF7FFFFF"
    )
        port map (
      I0 => h_reg(12),
      I1 => h_reg(9),
      I2 => h_reg(10),
      I3 => h_reg(11),
      I4 => h_reg(8),
      O => \rxsynchs_i_13__0_n_0\
    );
\rxsynchs_i_14__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF0080"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(10),
      I2 => h_reg(7),
      I3 => h_reg(8),
      I4 => h_reg(5),
      I5 => \start_bit[2]_i_10__0_n_0\,
      O => \rxsynchs_i_14__0_n_0\
    );
rxsynchs_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"444400004444FFF0"
    )
        port map (
      I0 => rxsynchs_i_16_n_0,
      I1 => h_reg(12),
      I2 => h_reg(6),
      I3 => h_reg(5),
      I4 => h_reg(9),
      I5 => h_reg(8),
      O => rxsynchs_i_15_n_0
    );
rxsynchs_i_16: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(11),
      O => rxsynchs_i_16_n_0
    );
\rxsynchs_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04FF0400"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => \rxsynchs_i_2__0_n_0\,
      I3 => \rxsynchs_i_3__0_n_0\,
      I4 => \^dl1_rxsynchs\,
      O => \rxsynchs_i_1__0_n_0\
    );
\rxsynchs_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000BABF"
    )
        port map (
      I0 => align_done_i_2_n_0,
      I1 => \rxsynchs_i_4__0_n_0\,
      I2 => \rxsynchs_i_5__0_n_0\,
      I3 => \rxsynchs_i_6__0_n_0\,
      I4 => \rxsynchs_i_7__0_n_0\,
      I5 => \start_bit[0]_i_2__0_n_0\,
      O => \rxsynchs_i_2__0_n_0\
    );
\rxsynchs_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEFF"
    )
        port map (
      I0 => \align_done_i_3__0_n_0\,
      I1 => align_done_i_2_n_0,
      I2 => \^e\(0),
      I3 => en_hs_lpn_sync_r,
      O => \rxsynchs_i_3__0_n_0\
    );
\rxsynchs_i_4__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF1"
    )
        port map (
      I0 => \rxsynchs_i_8__0_n_0\,
      I1 => \rxsynchs_i_9__0_n_0\,
      I2 => \rxsynchs_i_10__0_n_0\,
      I3 => \align_done_i_10__0_n_0\,
      O => \rxsynchs_i_4__0_n_0\
    );
\rxsynchs_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF5555F755"
    )
        port map (
      I0 => \rxsynchs_i_9__0_n_0\,
      I1 => \rxsynchs_i_11__0_n_0\,
      I2 => \rxsynchs_i_12__0_n_0\,
      I3 => \rxsynchs_i_13__0_n_0\,
      I4 => \align_done_i_13__0_n_0\,
      I5 => \start_bit[2]_i_2_n_0\,
      O => \rxsynchs_i_5__0_n_0\
    );
\rxsynchs_i_6__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF1"
    )
        port map (
      I0 => \align_done_i_8__0_n_0\,
      I1 => \align_done_i_14__0_n_0\,
      I2 => \align_done_i_11__0_n_0\,
      I3 => \align_done_i_13__0_n_0\,
      O => \rxsynchs_i_6__0_n_0\
    );
\rxsynchs_i_7__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"20000000B2202000"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(8),
      I2 => h_reg(5),
      I3 => h_reg(6),
      I4 => h_reg(9),
      I5 => h_reg(4),
      O => \rxsynchs_i_7__0_n_0\
    );
\rxsynchs_i_8__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABBAAAAFBFFAAAA"
    )
        port map (
      I0 => \rxsynchs_i_14__0_n_0\,
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(8),
      I4 => h_reg(6),
      I5 => h_reg(7),
      O => \rxsynchs_i_8__0_n_0\
    );
\rxsynchs_i_9__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DF4DFFDFFFDFFFFF"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(11),
      I2 => h_reg(12),
      I3 => h_reg(7),
      I4 => h_reg(8),
      I5 => h_reg(9),
      O => \rxsynchs_i_9__0_n_0\
    );
rxsynchs_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \rxsynchs_i_1__0_n_0\,
      Q => \^dl1_rxsynchs\,
      R => '0'
    );
\start_bit[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00000001010000"
    )
        port map (
      I0 => \start_bit[0]_i_2__0_n_0\,
      I1 => \start_bit[0]_i_3__0_n_0\,
      I2 => \start_bit[0]_i_4__0_n_0\,
      I3 => \start_bit_reg_n_0_[0]\,
      I4 => en_hs_lpn_sync_r,
      I5 => \^e\(0),
      O => \start_bit[0]_i_1__0_n_0\
    );
\start_bit[0]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080000080E80080"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(5),
      I2 => h_reg(8),
      I3 => h_reg(7),
      I4 => h_reg(6),
      I5 => h_reg(3),
      O => \start_bit[0]_i_2__0_n_0\
    );
\start_bit[0]_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \start_bit[0]_i_5__0_n_0\,
      I1 => \rxsynchs_i_7__0_n_0\,
      O => \start_bit[0]_i_3__0_n_0\
    );
\start_bit[0]_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00F100F1000000F1"
    )
        port map (
      I0 => \align_done_i_6__0_n_0\,
      I1 => \start_bit[0]_i_6_n_0\,
      I2 => \rxsynchs_i_5__0_n_0\,
      I3 => \align_done_i_4__0_n_0\,
      I4 => \start_bit[2]_i_5__0_n_0\,
      I5 => \start_bit[2]_i_4__0_n_0\,
      O => \start_bit[0]_i_4__0_n_0\
    );
\start_bit[0]_i_5__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0AAAEEFEEEFEFEFE"
    )
        port map (
      I0 => h_reg(3),
      I1 => \start_bit[0]_i_7__0_n_0\,
      I2 => h_reg(4),
      I3 => \start_bit[0]_i_8__0_n_0\,
      I4 => h_reg(5),
      I5 => h_reg(6),
      O => \start_bit[0]_i_5__0_n_0\
    );
\start_bit[0]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000B"
    )
        port map (
      I0 => \align_done_i_7__0_n_0\,
      I1 => \align_done_i_8__0_n_0\,
      I2 => \align_done_i_5__0_n_0\,
      I3 => \align_done_i_6__0_n_0\,
      O => \start_bit[0]_i_6_n_0\
    );
\start_bit[0]_i_7__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0E000E0F0E0F0E"
    )
        port map (
      I0 => h_reg(2),
      I1 => h_reg(1),
      I2 => h_reg(4),
      I3 => h_reg(5),
      I4 => h_reg(8),
      I5 => h_reg(7),
      O => \start_bit[0]_i_7__0_n_0\
    );
\start_bit[0]_i_8__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(7),
      O => \start_bit[0]_i_8__0_n_0\
    );
\start_bit[1]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CA0ACAAA"
    )
        port map (
      I0 => \start_bit[1]_i_2__0_n_0\,
      I1 => \start_bit_reg_n_0_[1]\,
      I2 => en_hs_lpn_sync_r,
      I3 => \^e\(0),
      I4 => align_done_i_2_n_0,
      O => \start_bit[1]_i_1__0_n_0\
    );
\start_bit[1]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF00000045"
    )
        port map (
      I0 => \align_done_i_6__0_n_0\,
      I1 => \align_done_i_5__0_n_0\,
      I2 => \start_bit[1]_i_3_n_0\,
      I3 => \start_bit[2]_i_7__0_n_0\,
      I4 => \start_bit[2]_i_6__0_n_0\,
      I5 => \start_bit[2]_i_2_n_0\,
      O => \start_bit[1]_i_2__0_n_0\
    );
\start_bit[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0008AAAA00080008"
    )
        port map (
      I0 => \align_done_i_8__0_n_0\,
      I1 => \start_bit[1]_i_4_n_0\,
      I2 => \start_bit[1]_i_5_n_0\,
      I3 => \start_bit[1]_i_6_n_0\,
      I4 => \errsoths_i_12__0_n_0\,
      I5 => h_reg(11),
      O => \start_bit[1]_i_3_n_0\
    );
\start_bit[1]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF2FAF0F"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(14),
      I2 => h_reg(11),
      I3 => h_reg(12),
      I4 => h_reg(15),
      O => \start_bit[1]_i_4_n_0\
    );
\start_bit[1]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAEAAA"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(12),
      I2 => h_reg(15),
      I3 => h_reg(14),
      I4 => h_reg(13),
      O => \start_bit[1]_i_5_n_0\
    );
\start_bit[1]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0054005400545554"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(8),
      I2 => h_reg(9),
      I3 => h_reg(12),
      I4 => h_reg(13),
      I5 => h_reg(14),
      O => \start_bit[1]_i_6_n_0\
    );
\start_bit[2]_i_10__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000E000E000E0F0E"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(3),
      I2 => h_reg(6),
      I3 => h_reg(7),
      I4 => h_reg(9),
      I5 => h_reg(8),
      O => \start_bit[2]_i_10__0_n_0\
    );
\start_bit[2]_i_11__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20000000"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      I2 => h_reg(8),
      I3 => h_reg(6),
      I4 => h_reg(7),
      O => \start_bit[2]_i_11__0_n_0\
    );
\start_bit[2]_i_12__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000FF54545454"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(5),
      I2 => h_reg(4),
      I3 => h_reg(11),
      I4 => h_reg(9),
      I5 => h_reg(7),
      O => \start_bit[2]_i_12__0_n_0\
    );
\start_bit[2]_i_13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"55555455"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(10),
      I2 => h_reg(7),
      I3 => h_reg(8),
      I4 => h_reg(9),
      O => \start_bit[2]_i_13_n_0\
    );
\start_bit[2]_i_14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"4404E444"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(7),
      I2 => h_reg(11),
      I3 => h_reg(10),
      I4 => h_reg(9),
      O => \start_bit[2]_i_14_n_0\
    );
\start_bit[2]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFFF"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(12),
      O => \start_bit[2]_i_15_n_0\
    );
\start_bit[2]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCF000F0CCF050F0"
    )
        port map (
      I0 => \start_bit[2]_i_2_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \start_bit[2]_i_3__0_n_0\,
      I3 => en_hs_lpn_sync_r,
      I4 => \^e\(0),
      I5 => align_done_i_2_n_0,
      O => \start_bit[2]_i_1__0_n_0\
    );
\start_bit[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \start_bit[2]_i_4__0_n_0\,
      I1 => \start_bit[2]_i_5__0_n_0\,
      O => \start_bit[2]_i_2_n_0\
    );
\start_bit[2]_i_3__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => \align_done_i_3__0_n_0\,
      I1 => \start_bit[2]_i_6__0_n_0\,
      I2 => \start_bit[2]_i_7__0_n_0\,
      I3 => \start_bit[2]_i_2_n_0\,
      O => \start_bit[2]_i_3__0_n_0\
    );
\start_bit[2]_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAABBBBBBAB"
    )
        port map (
      I0 => \align_done_i_10__0_n_0\,
      I1 => \rxsynchs_i_10__0_n_0\,
      I2 => \start_bit[2]_i_8__0_n_0\,
      I3 => \start_bit[2]_i_9__0_n_0\,
      I4 => \start_bit[2]_i_10__0_n_0\,
      I5 => \start_bit[2]_i_11__0_n_0\,
      O => \start_bit[2]_i_4__0_n_0\
    );
\start_bit[2]_i_5__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEFAAAA"
    )
        port map (
      I0 => \rxsynchs_i_10__0_n_0\,
      I1 => \start_bit[2]_i_12__0_n_0\,
      I2 => \start_bit[2]_i_13_n_0\,
      I3 => \start_bit[2]_i_14_n_0\,
      I4 => \rxsynchs_i_9__0_n_0\,
      O => \start_bit[2]_i_5__0_n_0\
    );
\start_bit[2]_i_6__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"51005151FFFFFFFF"
    )
        port map (
      I0 => \align_done_i_13__0_n_0\,
      I1 => h_reg(8),
      I2 => \start_bit[2]_i_15_n_0\,
      I3 => \rxsynchs_i_12__0_n_0\,
      I4 => \rxsynchs_i_11__0_n_0\,
      I5 => \rxsynchs_i_9__0_n_0\,
      O => \start_bit[2]_i_6__0_n_0\
    );
\start_bit[2]_i_7__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => \align_done_i_4__0_n_0\,
      I1 => \^e\(0),
      I2 => en_hs_lpn_sync_r,
      O => \start_bit[2]_i_7__0_n_0\
    );
\start_bit[2]_i_8__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBFBB3B3"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(6),
      I2 => h_reg(8),
      I3 => h_reg(9),
      I4 => h_reg(10),
      O => \start_bit[2]_i_8__0_n_0\
    );
\start_bit[2]_i_9__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => h_reg(5),
      I1 => h_reg(8),
      I2 => h_reg(7),
      I3 => h_reg(10),
      I4 => h_reg(9),
      O => \start_bit[2]_i_9__0_n_0\
    );
\start_bit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \start_bit[0]_i_1__0_n_0\,
      Q => \start_bit_reg_n_0_[0]\,
      R => '0'
    );
\start_bit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \start_bit[1]_i_1__0_n_0\,
      Q => \start_bit_reg_n_0_[1]\,
      R => '0'
    );
\start_bit_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \start_bit[2]_i_1__0_n_0\,
      Q => \start_bit_reg_n_0_[2]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8 is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    dl0_rxvalidhs : out STD_LOGIC;
    dl0_rxsynchs : out STD_LOGIC;
    dl0_errsoths : out STD_LOGIC;
    dl0_errsotsynchs : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    pkt_cnt_r0 : out STD_LOGIC;
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg\ : out STD_LOGIC;
    dl0_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl_en_hs_lpn_i : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC;
    s_level_out_d3_reg : in STD_LOGIC;
    \two_lane_hs_rx_timeout.hs_wait_count_reg[14]\ : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    rx_dl0_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8 : entity is "mipi_dphy_v4_0_1_rx_sot_det_align";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8 is
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal align_done_i_10_n_0 : STD_LOGIC;
  signal align_done_i_11_n_0 : STD_LOGIC;
  signal align_done_i_12_n_0 : STD_LOGIC;
  signal align_done_i_13_n_0 : STD_LOGIC;
  signal align_done_i_14_n_0 : STD_LOGIC;
  signal align_done_i_15_n_0 : STD_LOGIC;
  signal align_done_i_16_n_0 : STD_LOGIC;
  signal align_done_i_17_n_0 : STD_LOGIC;
  signal align_done_i_18_n_0 : STD_LOGIC;
  signal align_done_i_19_n_0 : STD_LOGIC;
  signal align_done_i_1_n_0 : STD_LOGIC;
  signal align_done_i_20_n_0 : STD_LOGIC;
  signal align_done_i_21_n_0 : STD_LOGIC;
  signal \align_done_i_22__0_n_0\ : STD_LOGIC;
  signal align_done_i_23_n_0 : STD_LOGIC;
  signal align_done_i_24_n_0 : STD_LOGIC;
  signal align_done_i_25_n_0 : STD_LOGIC;
  signal \align_done_i_2__0_n_0\ : STD_LOGIC;
  signal align_done_i_3_n_0 : STD_LOGIC;
  signal align_done_i_4_n_0 : STD_LOGIC;
  signal align_done_i_5_n_0 : STD_LOGIC;
  signal align_done_i_6_n_0 : STD_LOGIC;
  signal align_done_i_7_n_0 : STD_LOGIC;
  signal align_done_i_8_n_0 : STD_LOGIC;
  signal align_done_i_9_n_0 : STD_LOGIC;
  signal \^dl0_errsoths\ : STD_LOGIC;
  signal \^dl0_errsotsynchs\ : STD_LOGIC;
  signal \^dl0_rxsynchs\ : STD_LOGIC;
  signal \^dl0_rxvalidhs\ : STD_LOGIC;
  signal en_hs_lpn_sync : STD_LOGIC;
  signal en_hs_lpn_sync_r : STD_LOGIC;
  signal errsoths_i_10_n_0 : STD_LOGIC;
  signal errsoths_i_11_n_0 : STD_LOGIC;
  signal errsoths_i_12_n_0 : STD_LOGIC;
  signal errsoths_i_13_n_0 : STD_LOGIC;
  signal errsoths_i_14_n_0 : STD_LOGIC;
  signal errsoths_i_15_n_0 : STD_LOGIC;
  signal errsoths_i_16_n_0 : STD_LOGIC;
  signal errsoths_i_1_n_0 : STD_LOGIC;
  signal errsoths_i_2_n_0 : STD_LOGIC;
  signal errsoths_i_3_n_0 : STD_LOGIC;
  signal \errsoths_i_4__0_n_0\ : STD_LOGIC;
  signal errsoths_i_5_n_0 : STD_LOGIC;
  signal errsoths_i_6_n_0 : STD_LOGIC;
  signal errsoths_i_7_n_0 : STD_LOGIC;
  signal errsoths_i_8_n_0 : STD_LOGIC;
  signal errsoths_i_9_n_0 : STD_LOGIC;
  signal errsotsynchs_i_1_n_0 : STD_LOGIC;
  signal errsotsynchs_i_2_n_0 : STD_LOGIC;
  signal errsotsynchs_i_3_n_0 : STD_LOGIC;
  signal errsotsynchs_i_4_n_0 : STD_LOGIC;
  signal errsotsynchs_i_5_n_0 : STD_LOGIC;
  signal h_reg : STD_LOGIC_VECTOR ( 15 downto 0 );
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of h_reg : signal is std.standard.true;
  signal hs_data : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \hs_data[0]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[1]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[2]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[3]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[4]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[4]_i_3_n_0\ : STD_LOGIC;
  signal \hs_data[5]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[5]_i_3_n_0\ : STD_LOGIC;
  signal \hs_data[6]_i_2_n_0\ : STD_LOGIC;
  signal \hs_data[6]_i_3_n_0\ : STD_LOGIC;
  signal \hs_data[7]_i_1_n_0\ : STD_LOGIC;
  signal \hs_data[7]_i_3_n_0\ : STD_LOGIC;
  signal \hs_data[7]_i_4_n_0\ : STD_LOGIC;
  signal hs_dvalid_i_1_n_0 : STD_LOGIC;
  signal rx_hs_dp_r : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal rxsynchs_i_10_n_0 : STD_LOGIC;
  signal rxsynchs_i_11_n_0 : STD_LOGIC;
  signal rxsynchs_i_12_n_0 : STD_LOGIC;
  signal rxsynchs_i_13_n_0 : STD_LOGIC;
  signal rxsynchs_i_14_n_0 : STD_LOGIC;
  signal rxsynchs_i_1_n_0 : STD_LOGIC;
  signal rxsynchs_i_2_n_0 : STD_LOGIC;
  signal rxsynchs_i_3_n_0 : STD_LOGIC;
  signal rxsynchs_i_4_n_0 : STD_LOGIC;
  signal rxsynchs_i_5_n_0 : STD_LOGIC;
  signal rxsynchs_i_6_n_0 : STD_LOGIC;
  signal rxsynchs_i_7_n_0 : STD_LOGIC;
  signal rxsynchs_i_8_n_0 : STD_LOGIC;
  signal rxsynchs_i_9_n_0 : STD_LOGIC;
  signal \start_bit[0]_i_10_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_11_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_1_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_2_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_3_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_4_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_5_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_6__0_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_7_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_8_n_0\ : STD_LOGIC;
  signal \start_bit[0]_i_9_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_1_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_2_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_3__0_n_0\ : STD_LOGIC;
  signal \start_bit[1]_i_4__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_10_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_11_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_12_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_1_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_2__0_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_3_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_4_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_5_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_6_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_7_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_8_n_0\ : STD_LOGIC;
  signal \start_bit[2]_i_9_n_0\ : STD_LOGIC;
  signal \start_bit_reg_n_0_[0]\ : STD_LOGIC;
  signal \start_bit_reg_n_0_[1]\ : STD_LOGIC;
  signal \start_bit_reg_n_0_[2]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of align_done_i_1 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \align_done_i_2__0\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of align_done_i_3 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of align_done_i_8 : label is "soft_lutpair37";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of en_hs_lpn_sync_r_reg : label is "no";
  attribute SOFT_HLUTNM of errsoths_i_2 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of errsotsynchs_i_1 : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of errsotsynchs_i_3 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of errsotsynchs_i_4 : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of errsotsynchs_i_5 : label is "soft_lutpair34";
  attribute DONT_TOUCH of \h_reg_reg[0]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \h_reg_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[10]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[11]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[12]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[13]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[14]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[15]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[1]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[2]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[3]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[4]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[5]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[6]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[7]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[8]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \h_reg_reg[9]\ : label is std.standard.true;
  attribute KEEP of \h_reg_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \hs_data[0]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \hs_data[1]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \hs_data[2]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \hs_data[3]_i_1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \hs_data[4]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \hs_data[5]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \hs_data[6]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \hs_data[7]_i_2\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of rxsynchs_i_1 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of rxsynchs_i_3 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of rxsynchs_i_4 : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of rxsynchs_i_6 : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \start_bit[0]_i_2\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \start_bit[0]_i_6__0\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \start_bit[0]_i_7\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \start_bit[1]_i_2\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \start_bit[1]_i_3__0\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \start_bit[2]_i_2__0\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \start_bit[2]_i_3\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \start_bit[2]_i_4\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \start_bit[2]_i_5\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \start_bit[2]_i_6\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \start_bit[2]_i_9\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \two_lane_hs_rx_timeout.hs_wait_count[15]_i_1\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \two_lane_hs_rx_timeout.maxfrm_wait_done_i_1\ : label is "soft_lutpair28";
begin
  E(0) <= \^e\(0);
  dl0_errsoths <= \^dl0_errsoths\;
  dl0_errsotsynchs <= \^dl0_errsotsynchs\;
  dl0_rxsynchs <= \^dl0_rxsynchs\;
  dl0_rxvalidhs <= \^dl0_rxvalidhs\;
align_done_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0B0"
    )
        port map (
      I0 => \align_done_i_2__0_n_0\,
      I1 => align_done_i_3_n_0,
      I2 => en_hs_lpn_sync_r,
      I3 => \^e\(0),
      O => align_done_i_1_n_0
    );
align_done_i_10: unisim.vcomponents.LUT6
    generic map(
      INIT => X"080000008E080800"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(5),
      I2 => h_reg(4),
      I3 => h_reg(9),
      I4 => h_reg(7),
      I5 => h_reg(8),
      O => align_done_i_10_n_0
    );
align_done_i_11: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFABFFABFFABAAAB"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(8),
      I2 => h_reg(7),
      I3 => h_reg(11),
      I4 => h_reg(13),
      I5 => h_reg(12),
      O => align_done_i_11_n_0
    );
align_done_i_12: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF74107070"
    )
        port map (
      I0 => h_reg(12),
      I1 => h_reg(11),
      I2 => h_reg(10),
      I3 => h_reg(13),
      I4 => h_reg(14),
      I5 => h_reg(9),
      O => align_done_i_12_n_0
    );
align_done_i_13: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(11),
      I2 => h_reg(12),
      I3 => h_reg(13),
      I4 => h_reg(14),
      O => align_done_i_13_n_0
    );
align_done_i_14: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAAEAAAAA"
    )
        port map (
      I0 => \align_done_i_22__0_n_0\,
      I1 => h_reg(15),
      I2 => h_reg(12),
      I3 => h_reg(13),
      I4 => h_reg(14),
      I5 => h_reg(10),
      O => align_done_i_14_n_0
    );
align_done_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"20B2002000200000"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(8),
      I2 => h_reg(9),
      I3 => h_reg(12),
      I4 => h_reg(13),
      I5 => h_reg(11),
      O => align_done_i_15_n_0
    );
align_done_i_16: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFF00007FFF7FFF"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      I2 => align_done_i_23_n_0,
      I3 => h_reg(11),
      I4 => align_done_i_24_n_0,
      I5 => align_done_i_25_n_0,
      O => align_done_i_16_n_0
    );
align_done_i_17: unisim.vcomponents.LUT6
    generic map(
      INIT => X"20000000B2202000"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(9),
      I2 => h_reg(6),
      I3 => h_reg(7),
      I4 => h_reg(10),
      I5 => h_reg(5),
      O => align_done_i_17_n_0
    );
align_done_i_18: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DCFFC0FF"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(6),
      I2 => h_reg(9),
      I3 => h_reg(5),
      I4 => h_reg(7),
      O => align_done_i_18_n_0
    );
align_done_i_19: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888800008888FFF0"
    )
        port map (
      I0 => h_reg(9),
      I1 => \start_bit[0]_i_9_n_0\,
      I2 => h_reg(3),
      I3 => h_reg(2),
      I4 => h_reg(6),
      I5 => h_reg(5),
      O => align_done_i_19_n_0
    );
align_done_i_20: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAABAA"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(8),
      I2 => h_reg(7),
      I3 => h_reg(6),
      I4 => h_reg(5),
      O => align_done_i_20_n_0
    );
align_done_i_21: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(5),
      O => align_done_i_21_n_0
    );
\align_done_i_22__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0054005400545554"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(8),
      I2 => h_reg(9),
      I3 => h_reg(12),
      I4 => h_reg(13),
      I5 => h_reg(14),
      O => \align_done_i_22__0_n_0\
    );
align_done_i_23: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(12),
      O => align_done_i_23_n_0
    );
align_done_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BAAABABAFEBAFAFA"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(12),
      I4 => h_reg(13),
      I5 => h_reg(11),
      O => align_done_i_24_n_0
    );
align_done_i_25: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFABFFABFFABAAAB"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(6),
      I2 => h_reg(7),
      I3 => h_reg(10),
      I4 => h_reg(12),
      I5 => h_reg(11),
      O => align_done_i_25_n_0
    );
\align_done_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFEFFFFF"
    )
        port map (
      I0 => align_done_i_4_n_0,
      I1 => align_done_i_5_n_0,
      I2 => align_done_i_6_n_0,
      I3 => align_done_i_7_n_0,
      I4 => align_done_i_8_n_0,
      O => \align_done_i_2__0_n_0\
    );
align_done_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \start_bit[0]_i_3_n_0\,
      I1 => \start_bit[0]_i_2_n_0\,
      I2 => align_done_i_9_n_0,
      I3 => align_done_i_10_n_0,
      O => align_done_i_3_n_0
    );
align_done_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080000080E80080"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(11),
      I2 => h_reg(12),
      I3 => h_reg(13),
      I4 => h_reg(14),
      I5 => h_reg(9),
      O => align_done_i_4_n_0
    );
align_done_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00A2"
    )
        port map (
      I0 => align_done_i_6_n_0,
      I1 => align_done_i_11_n_0,
      I2 => align_done_i_12_n_0,
      I3 => align_done_i_13_n_0,
      O => align_done_i_5_n_0
    );
align_done_i_6: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFFF2BBFFFFFBFFF"
    )
        port map (
      I0 => h_reg(14),
      I1 => h_reg(15),
      I2 => h_reg(12),
      I3 => h_reg(13),
      I4 => h_reg(10),
      I5 => h_reg(11),
      O => align_done_i_6_n_0
    );
align_done_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAEEAEEE2AAEAEEE"
    )
        port map (
      I0 => align_done_i_14_n_0,
      I1 => h_reg(11),
      I2 => h_reg(13),
      I3 => h_reg(12),
      I4 => h_reg(15),
      I5 => h_reg(14),
      O => align_done_i_7_n_0
    );
align_done_i_8: unisim.vcomponents.LUT3
    generic map(
      INIT => X"45"
    )
        port map (
      I0 => align_done_i_15_n_0,
      I1 => align_done_i_4_n_0,
      I2 => align_done_i_16_n_0,
      O => align_done_i_8_n_0
    );
align_done_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5551555100005551"
    )
        port map (
      I0 => align_done_i_17_n_0,
      I1 => align_done_i_18_n_0,
      I2 => align_done_i_19_n_0,
      I3 => align_done_i_20_n_0,
      I4 => errsoths_i_14_n_0,
      I5 => align_done_i_21_n_0,
      O => align_done_i_9_n_0
    );
align_done_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => align_done_i_1_n_0,
      Q => \^e\(0),
      R => '0'
    );
en_hs_lpn_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10\
     port map (
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      \out\ => en_hs_lpn_sync,
      rx_div4_clk => rx_div4_clk
    );
en_hs_lpn_sync_r_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => en_hs_lpn_sync,
      Q => en_hs_lpn_sync_r,
      R => '0'
    );
errsoths_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08AAFFFF08AA0000"
    )
        port map (
      I0 => errsoths_i_2_n_0,
      I1 => errsoths_i_3_n_0,
      I2 => \errsoths_i_4__0_n_0\,
      I3 => errsoths_i_5_n_0,
      I4 => rxsynchs_i_3_n_0,
      I5 => \^dl0_errsoths\,
      O => errsoths_i_1_n_0
    );
errsoths_i_10: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6110100010000000"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(12),
      I2 => h_reg(13),
      I3 => h_reg(11),
      I4 => h_reg(10),
      I5 => h_reg(9),
      O => errsoths_i_10_n_0
    );
errsoths_i_11: unisim.vcomponents.LUT6
    generic map(
      INIT => X"D6FDFDFFFDFFFFFF"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => h_reg(14),
      I3 => h_reg(15),
      I4 => h_reg(12),
      I5 => h_reg(13),
      O => errsoths_i_11_n_0
    );
errsoths_i_12: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4904040004000000"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(14),
      I2 => h_reg(13),
      I3 => h_reg(12),
      I4 => h_reg(11),
      I5 => h_reg(10),
      O => errsoths_i_12_n_0
    );
errsoths_i_13: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80C00080"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(6),
      I2 => h_reg(5),
      I3 => h_reg(8),
      I4 => h_reg(7),
      O => errsoths_i_13_n_0
    );
errsoths_i_14: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(7),
      I2 => h_reg(8),
      O => errsoths_i_14_n_0
    );
errsoths_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080000080680080"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(5),
      I2 => h_reg(8),
      I3 => h_reg(7),
      I4 => h_reg(6),
      I5 => h_reg(3),
      O => errsoths_i_15_n_0
    );
errsoths_i_16: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7FF"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(8),
      I2 => h_reg(9),
      I3 => h_reg(10),
      O => errsoths_i_16_n_0
    );
errsoths_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => en_hs_lpn_sync_r,
      I1 => \^e\(0),
      O => errsoths_i_2_n_0
    );
errsoths_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFF4FFFF"
    )
        port map (
      I0 => errsoths_i_6_n_0,
      I1 => errsoths_i_7_n_0,
      I2 => errsoths_i_8_n_0,
      I3 => errsoths_i_9_n_0,
      I4 => rxsynchs_i_5_n_0,
      O => errsoths_i_3_n_0
    );
\errsoths_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00001101FFFFFFFF"
    )
        port map (
      I0 => rxsynchs_i_5_n_0,
      I1 => errsoths_i_10_n_0,
      I2 => align_done_i_8_n_0,
      I3 => errsoths_i_11_n_0,
      I4 => errsoths_i_12_n_0,
      I5 => align_done_i_3_n_0,
      O => \errsoths_i_4__0_n_0\
    );
errsoths_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000003FFFD11D"
    )
        port map (
      I0 => errsoths_i_13_n_0,
      I1 => errsoths_i_14_n_0,
      I2 => h_reg(5),
      I3 => h_reg(6),
      I4 => h_reg(4),
      I5 => errsoths_i_15_n_0,
      O => errsoths_i_5_n_0
    );
errsoths_i_6: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAABABA"
    )
        port map (
      I0 => align_done_i_17_n_0,
      I1 => rxsynchs_i_9_n_0,
      I2 => rxsynchs_i_7_n_0,
      I3 => errsoths_i_16_n_0,
      I4 => h_reg(6),
      O => errsoths_i_6_n_0
    );
errsoths_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000944000004000"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(9),
      I2 => h_reg(8),
      I3 => h_reg(12),
      I4 => h_reg(11),
      I5 => h_reg(10),
      O => errsoths_i_7_n_0
    );
errsoths_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2000922000002000"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(5),
      I2 => h_reg(7),
      I3 => h_reg(8),
      I4 => h_reg(9),
      I5 => h_reg(10),
      O => errsoths_i_8_n_0
    );
errsoths_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000800080006880"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(11),
      I2 => h_reg(8),
      I3 => h_reg(9),
      I4 => h_reg(10),
      I5 => h_reg(6),
      O => errsoths_i_9_n_0
    );
errsoths_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => errsoths_i_1_n_0,
      Q => \^dl0_errsoths\,
      R => '0'
    );
errsotsynchs_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04FF0400"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => errsotsynchs_i_2_n_0,
      I3 => rxsynchs_i_3_n_0,
      I4 => \^dl0_errsotsynchs\,
      O => errsotsynchs_i_1_n_0
    );
errsotsynchs_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8A8A8AAA8A8A8A8A"
    )
        port map (
      I0 => errsotsynchs_i_3_n_0,
      I1 => rxsynchs_i_4_n_0,
      I2 => align_done_i_3_n_0,
      I3 => rxsynchs_i_5_n_0,
      I4 => errsotsynchs_i_4_n_0,
      I5 => errsotsynchs_i_5_n_0,
      O => errsotsynchs_i_2_n_0
    );
errsotsynchs_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C4"
    )
        port map (
      I0 => align_done_i_9_n_0,
      I1 => \start_bit[0]_i_2_n_0\,
      I2 => \start_bit[0]_i_3_n_0\,
      O => errsotsynchs_i_3_n_0
    );
errsotsynchs_i_4: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => align_done_i_16_n_0,
      I1 => align_done_i_4_n_0,
      O => errsotsynchs_i_4_n_0
    );
errsotsynchs_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3F37"
    )
        port map (
      I0 => align_done_i_7_n_0,
      I1 => align_done_i_8_n_0,
      I2 => align_done_i_5_n_0,
      I3 => align_done_i_4_n_0,
      O => errsotsynchs_i_5_n_0
    );
errsotsynchs_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => errsotsynchs_i_1_n_0,
      Q => \^dl0_errsotsynchs\,
      R => '0'
    );
\h_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(8),
      Q => h_reg(0),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(2),
      Q => h_reg(10),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(3),
      Q => h_reg(11),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(4),
      Q => h_reg(12),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(5),
      Q => h_reg(13),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(6),
      Q => h_reg(14),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(7),
      Q => h_reg(15),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(9),
      Q => h_reg(1),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(10),
      Q => h_reg(2),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(11),
      Q => h_reg(3),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(12),
      Q => h_reg(4),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(13),
      Q => h_reg(5),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(14),
      Q => h_reg(6),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => h_reg(15),
      Q => h_reg(7),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(0),
      Q => h_reg(8),
      R => \hs_data[7]_i_1_n_0\
    );
\h_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_hs_dp_r(1),
      Q => h_reg(9),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[4]_i_3_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[0]_i_2_n_0\,
      O => hs_data(0)
    );
\hs_data[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(3),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(2),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(1),
      O => \hs_data[0]_i_2_n_0\
    );
\hs_data[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[5]_i_3_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[1]_i_2_n_0\,
      O => hs_data(1)
    );
\hs_data[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(5),
      I1 => h_reg(4),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(3),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(2),
      O => \hs_data[1]_i_2_n_0\
    );
\hs_data[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[6]_i_3_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[2]_i_2_n_0\,
      O => hs_data(2)
    );
\hs_data[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(5),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(4),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(3),
      O => \hs_data[2]_i_2_n_0\
    );
\hs_data[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[7]_i_4_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[3]_i_2_n_0\,
      O => hs_data(3)
    );
\hs_data[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(6),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(5),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(4),
      O => \hs_data[3]_i_2_n_0\
    );
\hs_data[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[4]_i_2_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[4]_i_3_n_0\,
      O => hs_data(4)
    );
\hs_data[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(12),
      I1 => h_reg(11),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(10),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(9),
      O => \hs_data[4]_i_2_n_0\
    );
\hs_data[4]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(7),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(6),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(5),
      O => \hs_data[4]_i_3_n_0\
    );
\hs_data[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[5]_i_2_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[5]_i_3_n_0\,
      O => hs_data(5)
    );
\hs_data[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(13),
      I1 => h_reg(12),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(11),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(10),
      O => \hs_data[5]_i_2_n_0\
    );
\hs_data[5]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(8),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(7),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(6),
      O => \hs_data[5]_i_3_n_0\
    );
\hs_data[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[6]_i_2_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[6]_i_3_n_0\,
      O => hs_data(6)
    );
\hs_data[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(14),
      I1 => h_reg(13),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(12),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(11),
      O => \hs_data[6]_i_2_n_0\
    );
\hs_data[6]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(8),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(7),
      O => \hs_data[6]_i_3_n_0\
    );
\hs_data[7]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => en_hs_lpn_sync_r,
      O => \hs_data[7]_i_1_n_0\
    );
\hs_data[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \hs_data[7]_i_3_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \hs_data[7]_i_4_n_0\,
      O => hs_data(7)
    );
\hs_data[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(15),
      I1 => h_reg(14),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(13),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(12),
      O => \hs_data[7]_i_3_n_0\
    );
\hs_data[7]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => \start_bit_reg_n_0_[1]\,
      I3 => h_reg(9),
      I4 => \start_bit_reg_n_0_[0]\,
      I5 => h_reg(8),
      O => \hs_data[7]_i_4_n_0\
    );
\hs_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(0),
      Q => dl0_rxdatahs(0),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(1),
      Q => dl0_rxdatahs(1),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(2),
      Q => dl0_rxdatahs(2),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(3),
      Q => dl0_rxdatahs(3),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(4),
      Q => dl0_rxdatahs(4),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(5),
      Q => dl0_rxdatahs(5),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(6),
      Q => dl0_rxdatahs(6),
      R => \hs_data[7]_i_1_n_0\
    );
\hs_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \^e\(0),
      D => hs_data(7),
      Q => dl0_rxdatahs(7),
      R => \hs_data[7]_i_1_n_0\
    );
hs_dvalid_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"C8"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => \^dl0_rxvalidhs\,
      O => hs_dvalid_i_1_n_0
    );
hs_dvalid_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => hs_dvalid_i_1_n_0,
      Q => \^dl0_rxvalidhs\,
      R => '0'
    );
\pkt_cnt_r[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAA8"
    )
        port map (
      I0 => \^e\(0),
      I1 => \^dl0_errsotsynchs\,
      I2 => \^dl0_rxsynchs\,
      I3 => \^dl0_errsoths\,
      O => pkt_cnt_r0
    );
\rx_hs_dp_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(0),
      Q => rx_hs_dp_r(0),
      R => '0'
    );
\rx_hs_dp_r_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(1),
      Q => rx_hs_dp_r(1),
      R => '0'
    );
\rx_hs_dp_r_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(2),
      Q => rx_hs_dp_r(2),
      R => '0'
    );
\rx_hs_dp_r_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(3),
      Q => rx_hs_dp_r(3),
      R => '0'
    );
\rx_hs_dp_r_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(4),
      Q => rx_hs_dp_r(4),
      R => '0'
    );
\rx_hs_dp_r_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(5),
      Q => rx_hs_dp_r(5),
      R => '0'
    );
\rx_hs_dp_r_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(6),
      Q => rx_hs_dp_r(6),
      R => '0'
    );
\rx_hs_dp_r_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => '1',
      D => rx_dl0_hs_dp(7),
      Q => rx_hs_dp_r(7),
      R => '0'
    );
rxsynchs_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04FF0400"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => rxsynchs_i_2_n_0,
      I3 => rxsynchs_i_3_n_0,
      I4 => \^dl0_rxsynchs\,
      O => rxsynchs_i_1_n_0
    );
rxsynchs_i_10: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08000000"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(8),
      I4 => h_reg(7),
      O => rxsynchs_i_10_n_0
    );
rxsynchs_i_11: unisim.vcomponents.LUT5
    generic map(
      INIT => X"404444CC"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(6),
      I2 => h_reg(9),
      I3 => h_reg(8),
      I4 => h_reg(10),
      O => rxsynchs_i_11_n_0
    );
rxsynchs_i_12: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => h_reg(9),
      I1 => h_reg(8),
      O => rxsynchs_i_12_n_0
    );
rxsynchs_i_13: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000E0E00FF0E0E"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(3),
      I2 => h_reg(6),
      I3 => h_reg(8),
      I4 => h_reg(7),
      I5 => rxsynchs_i_14_n_0,
      O => rxsynchs_i_13_n_0
    );
rxsynchs_i_14: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(9),
      O => rxsynchs_i_14_n_0
    );
rxsynchs_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000004F7F"
    )
        port map (
      I0 => rxsynchs_i_4_n_0,
      I1 => rxsynchs_i_5_n_0,
      I2 => align_done_i_3_n_0,
      I3 => rxsynchs_i_6_n_0,
      I4 => align_done_i_10_n_0,
      I5 => \start_bit[0]_i_3_n_0\,
      O => rxsynchs_i_2_n_0
    );
rxsynchs_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FDFF"
    )
        port map (
      I0 => align_done_i_3_n_0,
      I1 => \align_done_i_2__0_n_0\,
      I2 => \^e\(0),
      I3 => en_hs_lpn_sync_r,
      O => rxsynchs_i_3_n_0
    );
rxsynchs_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF1"
    )
        port map (
      I0 => rxsynchs_i_7_n_0,
      I1 => rxsynchs_i_8_n_0,
      I2 => rxsynchs_i_9_n_0,
      I3 => align_done_i_17_n_0,
      O => rxsynchs_i_4_n_0
    );
rxsynchs_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFEFEFEFEFFFEFE"
    )
        port map (
      I0 => \start_bit[2]_i_8_n_0\,
      I1 => \start_bit[0]_i_7_n_0\,
      I2 => align_done_i_17_n_0,
      I3 => rxsynchs_i_9_n_0,
      I4 => rxsynchs_i_7_n_0,
      I5 => rxsynchs_i_10_n_0,
      O => rxsynchs_i_5_n_0
    );
rxsynchs_i_6: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF1"
    )
        port map (
      I0 => align_done_i_6_n_0,
      I1 => align_done_i_16_n_0,
      I2 => align_done_i_4_n_0,
      I3 => align_done_i_15_n_0,
      O => rxsynchs_i_6_n_0
    );
rxsynchs_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFEFEEEEEE"
    )
        port map (
      I0 => rxsynchs_i_11_n_0,
      I1 => h_reg(5),
      I2 => h_reg(6),
      I3 => h_reg(7),
      I4 => rxsynchs_i_12_n_0,
      I5 => rxsynchs_i_13_n_0,
      O => rxsynchs_i_7_n_0
    );
rxsynchs_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DF4DFFDFFFDFFFFF"
    )
        port map (
      I0 => h_reg(10),
      I1 => h_reg(11),
      I2 => h_reg(12),
      I3 => h_reg(7),
      I4 => h_reg(8),
      I5 => h_reg(9),
      O => rxsynchs_i_8_n_0
    );
rxsynchs_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"20000000B2202000"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => h_reg(9),
      I3 => h_reg(7),
      I4 => h_reg(8),
      I5 => h_reg(6),
      O => rxsynchs_i_9_n_0
    );
rxsynchs_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => rxsynchs_i_1_n_0,
      Q => \^dl0_rxsynchs\,
      R => '0'
    );
\start_bit[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00000002020000"
    )
        port map (
      I0 => \start_bit[0]_i_2_n_0\,
      I1 => \start_bit[0]_i_3_n_0\,
      I2 => \start_bit[0]_i_4_n_0\,
      I3 => \start_bit_reg_n_0_[0]\,
      I4 => en_hs_lpn_sync_r,
      I5 => \^e\(0),
      O => \start_bit[0]_i_1_n_0\
    );
\start_bit[0]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4054454540405545"
    )
        port map (
      I0 => \start_bit[0]_i_11_n_0\,
      I1 => h_reg(9),
      I2 => h_reg(8),
      I3 => h_reg(10),
      I4 => h_reg(7),
      I5 => h_reg(11),
      O => \start_bit[0]_i_10_n_0\
    );
\start_bit[0]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ABABABAA"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(8),
      I2 => h_reg(7),
      I3 => h_reg(5),
      I4 => h_reg(4),
      O => \start_bit[0]_i_11_n_0\
    );
\start_bit[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => align_done_i_10_n_0,
      I1 => \start_bit[0]_i_5_n_0\,
      O => \start_bit[0]_i_2_n_0\
    );
\start_bit[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080000080E80080"
    )
        port map (
      I0 => h_reg(4),
      I1 => h_reg(5),
      I2 => h_reg(8),
      I3 => h_reg(7),
      I4 => h_reg(6),
      I5 => h_reg(3),
      O => \start_bit[0]_i_3_n_0\
    );
\start_bit[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00FF000000F2"
    )
        port map (
      I0 => align_done_i_8_n_0,
      I1 => \start_bit[0]_i_6__0_n_0\,
      I2 => \start_bit[2]_i_8_n_0\,
      I3 => \start_bit[2]_i_9_n_0\,
      I4 => \start_bit[0]_i_7_n_0\,
      I5 => errsoths_i_6_n_0,
      O => \start_bit[0]_i_4_n_0\
    );
\start_bit[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F555101110110011"
    )
        port map (
      I0 => h_reg(3),
      I1 => \start_bit[0]_i_8_n_0\,
      I2 => \start_bit[0]_i_9_n_0\,
      I3 => h_reg(4),
      I4 => h_reg(5),
      I5 => h_reg(6),
      O => \start_bit[0]_i_5_n_0\
    );
\start_bit[0]_i_6__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10100010"
    )
        port map (
      I0 => align_done_i_4_n_0,
      I1 => align_done_i_5_n_0,
      I2 => align_done_i_8_n_0,
      I3 => align_done_i_6_n_0,
      I4 => align_done_i_7_n_0,
      O => \start_bit[0]_i_6__0_n_0\
    );
\start_bit[0]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => rxsynchs_i_9_n_0,
      I1 => \start_bit[0]_i_10_n_0\,
      I2 => rxsynchs_i_8_n_0,
      O => \start_bit[0]_i_7_n_0\
    );
\start_bit[0]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F0E000E0F0E0F0E"
    )
        port map (
      I0 => h_reg(2),
      I1 => h_reg(1),
      I2 => h_reg(4),
      I3 => h_reg(5),
      I4 => h_reg(8),
      I5 => h_reg(7),
      O => \start_bit[0]_i_8_n_0\
    );
\start_bit[0]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => h_reg(8),
      I1 => h_reg(7),
      O => \start_bit[0]_i_9_n_0\
    );
\start_bit[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF100010"
    )
        port map (
      I0 => \start_bit[1]_i_2_n_0\,
      I1 => \start_bit[1]_i_3__0_n_0\,
      I2 => \start_bit[1]_i_4__0_n_0\,
      I3 => \start_bit[2]_i_3_n_0\,
      I4 => \start_bit_reg_n_0_[1]\,
      I5 => \start_bit[2]_i_6_n_0\,
      O => \start_bit[1]_i_1_n_0\
    );
\start_bit[1]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \start_bit[2]_i_8_n_0\,
      I1 => \start_bit[2]_i_7_n_0\,
      O => \start_bit[1]_i_2_n_0\
    );
\start_bit[1]_i_3__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => \start_bit[2]_i_9_n_0\,
      I1 => \^e\(0),
      I2 => en_hs_lpn_sync_r,
      O => \start_bit[1]_i_3__0_n_0\
    );
\start_bit[1]_i_4__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFEFF0000"
    )
        port map (
      I0 => align_done_i_4_n_0,
      I1 => align_done_i_5_n_0,
      I2 => align_done_i_7_n_0,
      I3 => align_done_i_6_n_0,
      I4 => align_done_i_8_n_0,
      I5 => \start_bit[2]_i_7_n_0\,
      O => \start_bit[1]_i_4__0_n_0\
    );
\start_bit[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000040404540"
    )
        port map (
      I0 => \start_bit[2]_i_2__0_n_0\,
      I1 => \start_bit_reg_n_0_[2]\,
      I2 => \start_bit[2]_i_3_n_0\,
      I3 => \start_bit[2]_i_4_n_0\,
      I4 => \start_bit[2]_i_5_n_0\,
      I5 => \start_bit[2]_i_6_n_0\,
      O => \start_bit[2]_i_1_n_0\
    );
\start_bit[2]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A2AAAAAAAAAAAAAA"
    )
        port map (
      I0 => h_reg(7),
      I1 => h_reg(12),
      I2 => h_reg(11),
      I3 => h_reg(10),
      I4 => h_reg(9),
      I5 => h_reg(8),
      O => \start_bit[2]_i_10_n_0\
    );
\start_bit[2]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"22BB330F33FF110F"
    )
        port map (
      I0 => h_reg(11),
      I1 => h_reg(10),
      I2 => \start_bit[2]_i_12_n_0\,
      I3 => h_reg(9),
      I4 => h_reg(8),
      I5 => h_reg(12),
      O => \start_bit[2]_i_11_n_0\
    );
\start_bit[2]_i_12\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => h_reg(6),
      I1 => h_reg(5),
      O => \start_bit[2]_i_12_n_0\
    );
\start_bit[2]_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \start_bit[2]_i_7_n_0\,
      I1 => \^e\(0),
      I2 => en_hs_lpn_sync_r,
      O => \start_bit[2]_i_2__0_n_0\
    );
\start_bit[2]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      O => \start_bit[2]_i_3_n_0\
    );
\start_bit[2]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \start_bit[2]_i_8_n_0\,
      I1 => \align_done_i_2__0_n_0\,
      O => \start_bit[2]_i_4_n_0\
    );
\start_bit[2]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFB"
    )
        port map (
      I0 => \start_bit[2]_i_7_n_0\,
      I1 => en_hs_lpn_sync_r,
      I2 => \^e\(0),
      I3 => \start_bit[2]_i_9_n_0\,
      O => \start_bit[2]_i_5_n_0\
    );
\start_bit[2]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^e\(0),
      I1 => en_hs_lpn_sync_r,
      I2 => align_done_i_3_n_0,
      O => \start_bit[2]_i_6_n_0\
    );
\start_bit[2]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF00D0"
    )
        port map (
      I0 => h_reg(6),
      I1 => errsoths_i_16_n_0,
      I2 => rxsynchs_i_7_n_0,
      I3 => rxsynchs_i_9_n_0,
      I4 => align_done_i_17_n_0,
      I5 => \start_bit[0]_i_7_n_0\,
      O => \start_bit[2]_i_7_n_0\
    );
\start_bit[2]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"54FF"
    )
        port map (
      I0 => align_done_i_15_n_0,
      I1 => \start_bit[2]_i_10_n_0\,
      I2 => \start_bit[2]_i_11_n_0\,
      I3 => rxsynchs_i_8_n_0,
      O => \start_bit[2]_i_8_n_0\
    );
\start_bit[2]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => align_done_i_10_n_0,
      I1 => align_done_i_9_n_0,
      O => \start_bit[2]_i_9_n_0\
    );
\start_bit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \start_bit[0]_i_1_n_0\,
      Q => \start_bit_reg_n_0_[0]\,
      R => '0'
    );
\start_bit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \start_bit[1]_i_1_n_0\,
      Q => \start_bit_reg_n_0_[1]\,
      R => '0'
    );
\start_bit_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \start_bit[2]_i_1_n_0\,
      Q => \start_bit_reg_n_0_[2]\,
      R => '0'
    );
\two_lane_hs_rx_timeout.hs_wait_count[15]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^e\(0),
      I1 => \^dl0_rxvalidhs\,
      O => SR(0)
    );
\two_lane_hs_rx_timeout.maxfrm_wait_done_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B0008000"
    )
        port map (
      I0 => s_level_out_d3_reg,
      I1 => \two_lane_hs_rx_timeout.hs_wait_count_reg[14]\,
      I2 => \^dl0_rxvalidhs\,
      I3 => \^e\(0),
      I4 => prmry_in,
      O => \two_lane_hs_rx_timeout.maxfrm_wait_done_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic is
  port (
    \out\ : out STD_LOGIC;
    \s_level_out_bus_d6_reg[0]\ : out STD_LOGIC;
    cl_status_reg_bit_0 : out STD_LOGIC;
    stopstate0 : out STD_LOGIC;
    system_rst_in : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    \s_level_out_bus_d3_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    p_5_in : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    core_rst : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic : entity is "mipi_dphy_v4_0_1_rx_support_rst_logic";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic is
  signal \FSM_sequential_rst_blk_state[0]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_rst_blk_state[0]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_rst_blk_state[1]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_rst_blk_state[1]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_rst_blk_state[2]_i_1_n_0\ : STD_LOGIC;
  signal \FSM_sequential_rst_blk_state[2]_i_2_n_0\ : STD_LOGIC;
  signal \FSM_sequential_rst_blk_state[2]_i_3_n_0\ : STD_LOGIC;
  signal core_rst_sync : STD_LOGIC;
  signal \^out\ : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of \out\ : signal is std.standard.true;
  signal phy_rdy_sync : STD_LOGIC;
  signal rst_blk_state : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of rst_blk_state : signal is "yes";
  signal \^s_level_out_bus_d6_reg[0]\ : STD_LOGIC;
  attribute DONT_TOUCH of \s_level_out_bus_d6_reg[0]\ : signal is std.standard.true;
  signal system_rst_byteclk_i_1_n_0 : STD_LOGIC;
  signal system_rst_byteclk_i_2_n_0 : STD_LOGIC;
  signal system_rst_i_1_n_0 : STD_LOGIC;
  signal system_rst_i_2_n_0 : STD_LOGIC;
  signal NLW_core_rst_sync_i_prmry_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_phy_rdy_sync_i_prmry_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_phy_rdy_sync_i_scndry_vect_out_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \FSM_sequential_rst_blk_state[1]_i_1\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \FSM_sequential_rst_blk_state[2]_i_1\ : label is "soft_lutpair69";
  attribute FSM_ENCODED_STATES : string;
  attribute FSM_ENCODED_STATES of \FSM_sequential_rst_blk_state_reg[0]\ : label is "RST_BEGIN:000,ASSERT_ALL_RESETS:001,RELEASE_PHY_RESET:010,CHECK_SRST:100,RESET_FSM_DONE:011";
  attribute KEEP : string;
  attribute KEEP of \FSM_sequential_rst_blk_state_reg[0]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_rst_blk_state_reg[1]\ : label is "RST_BEGIN:000,ASSERT_ALL_RESETS:001,RELEASE_PHY_RESET:010,CHECK_SRST:100,RESET_FSM_DONE:011";
  attribute KEEP of \FSM_sequential_rst_blk_state_reg[1]\ : label is "yes";
  attribute FSM_ENCODED_STATES of \FSM_sequential_rst_blk_state_reg[2]\ : label is "RST_BEGIN:000,ASSERT_ALL_RESETS:001,RELEASE_PHY_RESET:010,CHECK_SRST:100,RESET_FSM_DONE:011";
  attribute KEEP of \FSM_sequential_rst_blk_state_reg[2]\ : label is "yes";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of core_rst_sync_i : label is "yes";
  attribute c_cdc_type : string;
  attribute c_cdc_type of core_rst_sync_i : label is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of core_rst_sync_i : label is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of core_rst_sync_i : label is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of core_rst_sync_i : label is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of core_rst_sync_i : label is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of core_rst_sync_i : label is "6'b000010";
  attribute DowngradeIPIdentifiedWarnings of phy_rdy_sync_i : label is "yes";
  attribute c_cdc_type of phy_rdy_sync_i : label is "2'b01";
  attribute c_flop_input of phy_rdy_sync_i : label is "1'b0";
  attribute c_mtbf_stages of phy_rdy_sync_i : label is 3;
  attribute c_reset_state of phy_rdy_sync_i : label is "1'b1";
  attribute c_single_bit of phy_rdy_sync_i : label is "1'b1";
  attribute c_vector_width of phy_rdy_sync_i : label is "6'b000010";
  attribute SOFT_HLUTNM of system_rst_byteclk_i_1 : label is "soft_lutpair70";
  attribute DONT_TOUCH of system_rst_byteclk_reg : label is std.standard.true;
  attribute KEEP of system_rst_byteclk_reg : label is "yes";
  attribute SOFT_HLUTNM of system_rst_i_1 : label is "soft_lutpair70";
  attribute DONT_TOUCH of system_rst_reg : label is std.standard.true;
  attribute KEEP of system_rst_reg : label is "yes";
begin
  \out\ <= \^out\;
  \s_level_out_bus_d6_reg[0]\ <= \^s_level_out_bus_d6_reg[0]\;
\FSM_sequential_rst_blk_state[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \FSM_sequential_rst_blk_state[0]_i_2_n_0\,
      I1 => \FSM_sequential_rst_blk_state[2]_i_3_n_0\,
      I2 => rst_blk_state(0),
      O => \FSM_sequential_rst_blk_state[0]_i_1_n_0\
    );
\FSM_sequential_rst_blk_state[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CC888C88CC8C8C8C"
    )
        port map (
      I0 => rst_blk_state(2),
      I1 => \s_level_out_bus_d3_reg[1]\(0),
      I2 => rst_blk_state(0),
      I3 => p_5_in,
      I4 => rst_blk_state(1),
      I5 => phy_rdy_sync,
      O => \FSM_sequential_rst_blk_state[0]_i_2_n_0\
    );
\FSM_sequential_rst_blk_state[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \FSM_sequential_rst_blk_state[1]_i_2_n_0\,
      I1 => \FSM_sequential_rst_blk_state[2]_i_3_n_0\,
      I2 => rst_blk_state(1),
      O => \FSM_sequential_rst_blk_state[1]_i_1_n_0\
    );
\FSM_sequential_rst_blk_state[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AF0F8800000000"
    )
        port map (
      I0 => p_5_in,
      I1 => phy_rdy_sync,
      I2 => rst_blk_state(1),
      I3 => rst_blk_state(2),
      I4 => rst_blk_state(0),
      I5 => \s_level_out_bus_d3_reg[1]\(0),
      O => \FSM_sequential_rst_blk_state[1]_i_2_n_0\
    );
\FSM_sequential_rst_blk_state[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \FSM_sequential_rst_blk_state[2]_i_2_n_0\,
      I1 => \FSM_sequential_rst_blk_state[2]_i_3_n_0\,
      I2 => rst_blk_state(2),
      O => \FSM_sequential_rst_blk_state[2]_i_1_n_0\
    );
\FSM_sequential_rst_blk_state[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000044500000"
    )
        port map (
      I0 => p_5_in,
      I1 => rst_blk_state(1),
      I2 => phy_rdy_sync,
      I3 => rst_blk_state(0),
      I4 => \s_level_out_bus_d3_reg[1]\(0),
      I5 => rst_blk_state(2),
      O => \FSM_sequential_rst_blk_state[2]_i_2_n_0\
    );
\FSM_sequential_rst_blk_state[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000AF3CFFFFFFFFF"
    )
        port map (
      I0 => p_5_in,
      I1 => phy_rdy_sync,
      I2 => rst_blk_state(1),
      I3 => rst_blk_state(0),
      I4 => rst_blk_state(2),
      I5 => \s_level_out_bus_d3_reg[1]\(0),
      O => \FSM_sequential_rst_blk_state[2]_i_3_n_0\
    );
\FSM_sequential_rst_blk_state_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst_sync,
      D => \FSM_sequential_rst_blk_state[0]_i_1_n_0\,
      Q => rst_blk_state(0)
    );
\FSM_sequential_rst_blk_state_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst_sync,
      D => \FSM_sequential_rst_blk_state[1]_i_1_n_0\,
      Q => rst_blk_state(1)
    );
\FSM_sequential_rst_blk_state_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst_sync,
      D => \FSM_sequential_rst_blk_state[2]_i_1_n_0\,
      Q => rst_blk_state(2)
    );
cl_stopstate_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF8F"
    )
        port map (
      I0 => \^s_level_out_bus_d6_reg[0]\,
      I1 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      I2 => \s_level_out_bus_d3_reg[1]\(0),
      I3 => core_rst,
      O => cl_status_reg_bit_0
    );
core_rst_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5\
     port map (
      prmry_ack => NLW_core_rst_sync_i_prmry_ack_UNCONNECTED,
      prmry_aclk => '0',
      prmry_in => system_rst_in,
      prmry_rst_n => '1',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => core_clk,
      scndry_out => core_rst_sync,
      scndry_rst_n => '0',
      scndry_vect_out(1 downto 0) => NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED(1 downto 0)
    );
\gen_hs_high_rates.stopstate_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^s_level_out_bus_d6_reg[0]\,
      I1 => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      O => stopstate0
    );
phy_rdy_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6\
     port map (
      prmry_ack => NLW_phy_rdy_sync_i_prmry_ack_UNCONNECTED,
      prmry_aclk => '0',
      prmry_in => '0',
      prmry_rst_n => '1',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => core_clk,
      scndry_out => phy_rdy_sync,
      scndry_rst_n => '0',
      scndry_vect_out(1 downto 0) => NLW_phy_rdy_sync_i_scndry_vect_out_UNCONNECTED(1 downto 0)
    );
system_rst_byteclk_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => system_rst_byteclk_i_2_n_0,
      I1 => \s_level_out_bus_d3_reg[1]\(0),
      O => system_rst_byteclk_i_1_n_0
    );
system_rst_byteclk_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"003D000DFFFF00CF"
    )
        port map (
      I0 => phy_rdy_sync,
      I1 => rst_blk_state(0),
      I2 => rst_blk_state(1),
      I3 => rst_blk_state(2),
      I4 => \^out\,
      I5 => p_5_in,
      O => system_rst_byteclk_i_2_n_0
    );
system_rst_byteclk_reg: unisim.vcomponents.FDPE
     port map (
      C => core_clk,
      CE => '1',
      D => system_rst_byteclk_i_1_n_0,
      PRE => core_rst_sync,
      Q => \^out\
    );
system_rst_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => system_rst_i_2_n_0,
      I1 => \s_level_out_bus_d3_reg[1]\(0),
      O => system_rst_i_1_n_0
    );
system_rst_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"003D000DFFFF00CF"
    )
        port map (
      I0 => phy_rdy_sync,
      I1 => rst_blk_state(0),
      I2 => rst_blk_state(1),
      I3 => rst_blk_state(2),
      I4 => \^s_level_out_bus_d6_reg[0]\,
      I5 => p_5_in,
      O => system_rst_i_2_n_0
    );
system_rst_reg: unisim.vcomponents.FDPE
     port map (
      C => core_clk,
      CE => '1',
      D => system_rst_i_1_n_0,
      PRE => core_rst_sync,
      Q => \^s_level_out_bus_d6_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane is
  port (
    dl_status_reg : out STD_LOGIC_VECTOR ( 2 downto 0 );
    dl_pkt_cnt : out STD_LOGIC_VECTOR ( 15 downto 0 );
    dl0_rxactivehs : out STD_LOGIC;
    dl0_rxvalidhs : out STD_LOGIC;
    dl0_rxsynchs : out STD_LOGIC;
    dl0_errsoths : out STD_LOGIC;
    dl0_errsotsynchs : out STD_LOGIC;
    dl0_stopstate : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 7 downto 0 );
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    dl_en_hs_lpn_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg\ : out STD_LOGIC;
    dl0_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    tap_comp_rst : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC;
    rx_dl0_lp_dn : in STD_LOGIC;
    rx_dl0_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    stg3_reg : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    S : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]_0\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    cal_done : in STD_LOGIC;
    stopstate0 : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    cl_rxclkactivehs_reg_0 : in STD_LOGIC;
    s_level_out_d3_reg : in STD_LOGIC;
    \two_lane_hs_rx_timeout.hs_wait_count_reg[14]\ : in STD_LOGIC;
    prmry_in : in STD_LOGIC;
    rx_dl0_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane : entity is "mipi_dphy_v4_0_1_rx_data_lane";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane is
  signal \active_sm_r__2\ : STD_LOGIC;
  signal \^dl0_rxactivehs\ : STD_LOGIC;
  signal \^dl0_stopstate\ : STD_LOGIC;
  signal dl_en_hs_lpn_i : STD_LOGIC;
  signal \^dl_pkt_cnt\ : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal fifo_rd_rst_t1 : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of fifo_rd_rst_t1 : signal is std.standard.true;
  signal fifo_rd_rst_t1_nxt : STD_LOGIC;
  attribute DONT_TOUCH of fifo_rd_rst_t1_nxt : signal is std.standard.true;
  signal fifo_rd_rst_t2 : STD_LOGIC;
  attribute DONT_TOUCH of fifo_rd_rst_t2 : signal is std.standard.true;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13\ : STD_LOGIC;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14\ : STD_LOGIC;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15\ : STD_LOGIC;
  signal \gen_hs_high_rates.active_sm_r_reg_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.dl_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \gen_hs_high_rates.dl_state_reg_n_0_[1]\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[0]_i_1_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[1]_i_1_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[2]_i_1_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[3]_i_1_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[4]_i_2_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_state_extn_r_i_1_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_state_extn_r_i_2_n_0\ : STD_LOGIC;
  signal pkt_cnt_r0 : STD_LOGIC;
  signal \pkt_cnt_r[0]_i_3_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2_n_7\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1_n_7\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1_n_7\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal rxactivehs_coreclk_sync_r : STD_LOGIC;
  signal rxactivehs_sync : STD_LOGIC;
  signal rxactivehs_sync_i_n_1 : STD_LOGIC;
  signal stop_extn_cnt : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal stop_state_extn_r : STD_LOGIC;
  signal \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_pkt_cnt_r_reg[12]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute DONT_TOUCH of fifo_rd_rst_t1_nxt_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of fifo_rd_rst_t1_nxt_reg : label is "yes";
  attribute DONT_TOUCH of fifo_rd_rst_t1_reg : label is std.standard.true;
  attribute KEEP of fifo_rd_rst_t1_reg : label is "yes";
  attribute DONT_TOUCH of fifo_rd_rst_t2_reg : label is std.standard.true;
  attribute KEEP of fifo_rd_rst_t2_reg : label is "yes";
  attribute c_init_val : string;
  attribute c_init_val of \gen_calib_result.u_tap_comp_rst_byteclk_sync_i\ : label is "1'b1";
  attribute c_mtbf_stages : string;
  attribute c_mtbf_stages of \gen_calib_result.u_tap_comp_rst_byteclk_sync_i\ : label is "5'b00010";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_extn_cnt[1]_i_1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_extn_cnt[2]_i_1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_extn_cnt[4]_i_3\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_state_extn_r_i_2\ : label is "soft_lutpair45";
begin
  dl0_rxactivehs <= \^dl0_rxactivehs\;
  dl0_stopstate <= \^dl0_stopstate\;
  dl_pkt_cnt(15 downto 0) <= \^dl_pkt_cnt\(15 downto 0);
fifo_rd_rst_t1_nxt_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => fifo_rd_rst_t1,
      Q => fifo_rd_rst_t1_nxt,
      R => '0'
    );
fifo_rd_rst_t1_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => stg3_reg,
      Q => fifo_rd_rst_t1,
      R => '0'
    );
fifo_rd_rst_t2_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => stg3_reg,
      Q => fifo_rd_rst_t2,
      R => '0'
    );
\gen_calib_result.cal_done_sync_i\: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6\
     port map (
      cal_done => cal_done,
      rx_div4_clk => rx_div4_clk
    );
\gen_calib_result.u_tap_comp_rst_byteclk_sync_i\: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1\
     port map (
      prmry_in => tap_comp_rst,
      scndry_aclk => rx_div4_clk,
      scndry_out => \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED\
    );
\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7
     port map (
      Q(7 downto 0) => Q(7 downto 0),
      S(3 downto 0) => S(3 downto 0),
      \active_sm_r__2\ => \active_sm_r__2\,
      cl_rxclkactivehs_reg => cl_rxclkactivehs_reg,
      cl_rxclkactivehs_reg_0 => cl_rxclkactivehs_reg_0,
      core_clk => core_clk,
      core_rst => core_rst,
      dl0_stopstate => \^dl0_stopstate\,
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      dl_en_hs_lpn_reg_0(0) => dl_en_hs_lpn_reg(0),
      dl_status_reg(2 downto 0) => dl_status_reg(2 downto 0),
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      \gen_hs_high_rates.active_sm_r_reg\ => \gen_hs_high_rates.active_sm_r_reg_n_0\,
      \gen_hs_high_rates.dl_state_reg[0]\ => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14\,
      \gen_hs_high_rates.dl_state_reg[0]_0\ => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      \gen_hs_high_rates.dl_state_reg[1]\ => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15\,
      \gen_hs_high_rates.dl_state_reg[1]_0\ => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      \gen_hs_high_rates.stopstate_reg\ => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13\,
      \out\ => \out\,
      rx_dl0_lp_dn => rx_dl0_lp_dn,
      rx_dl0_lp_dp => rx_dl0_lp_dp,
      rxactivehs_coreclk_sync_r => rxactivehs_coreclk_sync_r,
      \s_level_out_bus_d3_reg[4]\(3 downto 0) => \s_level_out_bus_d3_reg[4]\(3 downto 0),
      \s_level_out_bus_d3_reg[4]_0\(2 downto 0) => \s_level_out_bus_d3_reg[4]_0\(2 downto 0),
      s_level_out_d2_reg => rxactivehs_sync,
      stop_state_extn_r => stop_state_extn_r
    );
\gen_hs_high_rates.active_sm_r_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => rxactivehs_sync_i_n_1,
      Q => \gen_hs_high_rates.active_sm_r_reg_n_0\,
      R => stopstate0
    );
\gen_hs_high_rates.dl_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14\,
      Q => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      R => stopstate0
    );
\gen_hs_high_rates.dl_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15\,
      Q => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      R => stopstate0
    );
\gen_hs_high_rates.rx_sot_det_align_i\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8
     port map (
      E(0) => \^dl0_rxactivehs\,
      SR(0) => SR(0),
      dl0_errsoths => dl0_errsoths,
      dl0_errsotsynchs => dl0_errsotsynchs,
      dl0_rxdatahs(7 downto 0) => dl0_rxdatahs(7 downto 0),
      dl0_rxsynchs => dl0_rxsynchs,
      dl0_rxvalidhs => dl0_rxvalidhs,
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      pkt_cnt_r0 => pkt_cnt_r0,
      prmry_in => prmry_in,
      rx_div4_clk => rx_div4_clk,
      rx_dl0_hs_dp(7 downto 0) => rx_dl0_hs_dp(7 downto 0),
      s_level_out_d3_reg => s_level_out_d3_reg,
      \two_lane_hs_rx_timeout.hs_wait_count_reg[14]\ => \two_lane_hs_rx_timeout.hs_wait_count_reg[14]\,
      \two_lane_hs_rx_timeout.maxfrm_wait_done_reg\ => \two_lane_hs_rx_timeout.maxfrm_wait_done_reg\
    );
\gen_hs_high_rates.rxactivehs_coreclk_sync_r_reg\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => rxactivehs_sync,
      Q => rxactivehs_coreclk_sync_r
    );
\gen_hs_high_rates.stop_extn_cnt[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(0),
      O => \gen_hs_high_rates.stop_extn_cnt[0]_i_1_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0440"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(0),
      I3 => stop_extn_cnt(1),
      O => \gen_hs_high_rates.stop_extn_cnt[1]_i_1_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04444000"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(0),
      I3 => stop_extn_cnt(1),
      I4 => stop_extn_cnt(2),
      O => \gen_hs_high_rates.stop_extn_cnt[2]_i_1_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0444444440000000"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(1),
      I3 => stop_extn_cnt(0),
      I4 => stop_extn_cnt(2),
      I5 => stop_extn_cnt(3),
      O => \gen_hs_high_rates.stop_extn_cnt[3]_i_1_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF7"
    )
        port map (
      I0 => \gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I3 => stop_extn_cnt(2),
      I4 => stop_extn_cnt(3),
      I5 => stop_extn_cnt(4),
      O => \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0444444440000000"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(2),
      I3 => \gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0\,
      I4 => stop_extn_cnt(3),
      I5 => stop_extn_cnt(4),
      O => \gen_hs_high_rates.stop_extn_cnt[4]_i_2_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[4]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => stop_extn_cnt(1),
      I1 => stop_extn_cnt(0),
      O => \gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[0]_i_1_n_0\,
      Q => stop_extn_cnt(0)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[1]_i_1_n_0\,
      Q => stop_extn_cnt(1)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[2]_i_1_n_0\,
      Q => stop_extn_cnt(2)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[3]_i_1_n_0\,
      Q => stop_extn_cnt(3)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[4]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[4]_i_2_n_0\,
      Q => stop_extn_cnt(4)
    );
\gen_hs_high_rates.stop_state_extn_r_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2220"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I2 => \gen_hs_high_rates.stop_state_extn_r_i_2_n_0\,
      I3 => stop_state_extn_r,
      O => \gen_hs_high_rates.stop_state_extn_r_i_1_n_0\
    );
\gen_hs_high_rates.stop_state_extn_r_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000020"
    )
        port map (
      I0 => stop_extn_cnt(0),
      I1 => stop_extn_cnt(2),
      I2 => stop_extn_cnt(1),
      I3 => stop_extn_cnt(3),
      I4 => stop_extn_cnt(4),
      O => \gen_hs_high_rates.stop_state_extn_r_i_2_n_0\
    );
\gen_hs_high_rates.stop_state_extn_r_reg\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_state_extn_r_i_1_n_0\,
      Q => stop_state_extn_r
    );
\gen_hs_high_rates.stopstate_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13\,
      Q => \^dl0_stopstate\,
      R => stopstate0
    );
\pkt_cnt_r[0]_i_3\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^dl_pkt_cnt\(0),
      O => \pkt_cnt_r[0]_i_3_n_0\
    );
\pkt_cnt_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2_n_7\,
      Q => \^dl_pkt_cnt\(0),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[0]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \pkt_cnt_r_reg[0]_i_2_n_0\,
      CO(2) => \pkt_cnt_r_reg[0]_i_2_n_1\,
      CO(1) => \pkt_cnt_r_reg[0]_i_2_n_2\,
      CO(0) => \pkt_cnt_r_reg[0]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0001",
      O(3) => \pkt_cnt_r_reg[0]_i_2_n_4\,
      O(2) => \pkt_cnt_r_reg[0]_i_2_n_5\,
      O(1) => \pkt_cnt_r_reg[0]_i_2_n_6\,
      O(0) => \pkt_cnt_r_reg[0]_i_2_n_7\,
      S(3 downto 1) => \^dl_pkt_cnt\(3 downto 1),
      S(0) => \pkt_cnt_r[0]_i_3_n_0\
    );
\pkt_cnt_r_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1_n_5\,
      Q => \^dl_pkt_cnt\(10),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1_n_4\,
      Q => \^dl_pkt_cnt\(11),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1_n_7\,
      Q => \^dl_pkt_cnt\(12),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[12]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \pkt_cnt_r_reg[8]_i_1_n_0\,
      CO(3) => \NLW_pkt_cnt_r_reg[12]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \pkt_cnt_r_reg[12]_i_1_n_1\,
      CO(1) => \pkt_cnt_r_reg[12]_i_1_n_2\,
      CO(0) => \pkt_cnt_r_reg[12]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \pkt_cnt_r_reg[12]_i_1_n_4\,
      O(2) => \pkt_cnt_r_reg[12]_i_1_n_5\,
      O(1) => \pkt_cnt_r_reg[12]_i_1_n_6\,
      O(0) => \pkt_cnt_r_reg[12]_i_1_n_7\,
      S(3 downto 0) => \^dl_pkt_cnt\(15 downto 12)
    );
\pkt_cnt_r_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1_n_6\,
      Q => \^dl_pkt_cnt\(13),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1_n_5\,
      Q => \^dl_pkt_cnt\(14),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1_n_4\,
      Q => \^dl_pkt_cnt\(15),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2_n_6\,
      Q => \^dl_pkt_cnt\(1),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2_n_5\,
      Q => \^dl_pkt_cnt\(2),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2_n_4\,
      Q => \^dl_pkt_cnt\(3),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1_n_7\,
      Q => \^dl_pkt_cnt\(4),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[4]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \pkt_cnt_r_reg[0]_i_2_n_0\,
      CO(3) => \pkt_cnt_r_reg[4]_i_1_n_0\,
      CO(2) => \pkt_cnt_r_reg[4]_i_1_n_1\,
      CO(1) => \pkt_cnt_r_reg[4]_i_1_n_2\,
      CO(0) => \pkt_cnt_r_reg[4]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \pkt_cnt_r_reg[4]_i_1_n_4\,
      O(2) => \pkt_cnt_r_reg[4]_i_1_n_5\,
      O(1) => \pkt_cnt_r_reg[4]_i_1_n_6\,
      O(0) => \pkt_cnt_r_reg[4]_i_1_n_7\,
      S(3 downto 0) => \^dl_pkt_cnt\(7 downto 4)
    );
\pkt_cnt_r_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1_n_6\,
      Q => \^dl_pkt_cnt\(5),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1_n_5\,
      Q => \^dl_pkt_cnt\(6),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1_n_4\,
      Q => \^dl_pkt_cnt\(7),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1_n_7\,
      Q => \^dl_pkt_cnt\(8),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[8]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \pkt_cnt_r_reg[4]_i_1_n_0\,
      CO(3) => \pkt_cnt_r_reg[8]_i_1_n_0\,
      CO(2) => \pkt_cnt_r_reg[8]_i_1_n_1\,
      CO(1) => \pkt_cnt_r_reg[8]_i_1_n_2\,
      CO(0) => \pkt_cnt_r_reg[8]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \pkt_cnt_r_reg[8]_i_1_n_4\,
      O(2) => \pkt_cnt_r_reg[8]_i_1_n_5\,
      O(1) => \pkt_cnt_r_reg[8]_i_1_n_6\,
      O(0) => \pkt_cnt_r_reg[8]_i_1_n_7\,
      S(3 downto 0) => \^dl_pkt_cnt\(11 downto 8)
    );
\pkt_cnt_r_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1_n_6\,
      Q => \^dl_pkt_cnt\(9),
      R => fifo_rd_rst_t1
    );
rxactivehs_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9\
     port map (
      \active_sm_r__2\ => \active_sm_r__2\,
      core_clk => core_clk,
      dl0_rxactivehs => \^dl0_rxactivehs\,
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      \gen_hs_high_rates.active_sm_r_reg\ => rxactivehs_sync_i_n_1,
      \gen_hs_high_rates.active_sm_r_reg_0\ => \gen_hs_high_rates.active_sm_r_reg_n_0\,
      \gen_hs_high_rates.dl_state_reg[0]\ => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      \gen_hs_high_rates.dl_state_reg[1]\ => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      \out\ => rxactivehs_sync,
      rxactivehs_coreclk_sync_r => rxactivehs_coreclk_sync_r,
      stop_state_extn_r => stop_state_extn_r
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1 is
  port (
    dl_status_reg : out STD_LOGIC_VECTOR ( 2 downto 0 );
    dl_pkt_cnt : out STD_LOGIC_VECTOR ( 15 downto 0 );
    dl1_rxactivehs : out STD_LOGIC;
    dl1_rxvalidhs : out STD_LOGIC;
    dl1_rxsynchs : out STD_LOGIC;
    dl1_errsoths : out STD_LOGIC;
    dl1_errsotsynchs : out STD_LOGIC;
    dl1_stopstate : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl_en_hs_lpn_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    dl1_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    tap_comp_rst : in STD_LOGIC;
    rx_div4_clk : in STD_LOGIC;
    rx_dl1_lp_dn : in STD_LOGIC;
    rx_dl1_lp_dp : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    stg3_reg : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    \s_level_out_bus_d3_reg[4]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \s_level_out_bus_d3_reg[4]_1\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    cal_done : in STD_LOGIC;
    stopstate0 : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg\ : in STD_LOGIC;
    cl_rxclkactivehs_reg : in STD_LOGIC;
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ : in STD_LOGIC;
    cl_rxclkactivehs_reg_0 : in STD_LOGIC;
    rx_dl1_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1 : entity is "mipi_dphy_v4_0_1_rx_data_lane";
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1 is
  signal \active_sm_r__2\ : STD_LOGIC;
  signal \^dl1_rxactivehs\ : STD_LOGIC;
  signal \^dl1_stopstate\ : STD_LOGIC;
  signal dl_en_hs_lpn_i : STD_LOGIC;
  signal \^dl_pkt_cnt\ : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal fifo_rd_rst_t1 : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of fifo_rd_rst_t1 : signal is std.standard.true;
  signal fifo_rd_rst_t1_nxt : STD_LOGIC;
  attribute DONT_TOUCH of fifo_rd_rst_t1_nxt : signal is std.standard.true;
  signal fifo_rd_rst_t2 : STD_LOGIC;
  attribute DONT_TOUCH of fifo_rd_rst_t2 : signal is std.standard.true;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13\ : STD_LOGIC;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14\ : STD_LOGIC;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15\ : STD_LOGIC;
  signal \gen_hs_high_rates.active_sm_r_reg_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.dl_state_reg_n_0_[0]\ : STD_LOGIC;
  signal \gen_hs_high_rates.dl_state_reg_n_0_[1]\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[0]_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[1]_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[2]_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[3]_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[4]_i_2__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_state_extn_r_i_1__0_n_0\ : STD_LOGIC;
  signal \gen_hs_high_rates.stop_state_extn_r_i_2__0_n_0\ : STD_LOGIC;
  signal pkt_cnt_r0 : STD_LOGIC;
  signal \pkt_cnt_r[0]_i_3__0_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[0]_i_2__0_n_7\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[12]_i_1__0_n_7\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[4]_i_1__0_n_7\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_0\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_1\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_2\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_3\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_4\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_5\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_6\ : STD_LOGIC;
  signal \pkt_cnt_r_reg[8]_i_1__0_n_7\ : STD_LOGIC;
  signal rxactivehs_coreclk_sync_r : STD_LOGIC;
  signal rxactivehs_sync : STD_LOGIC;
  signal rxactivehs_sync_i_n_1 : STD_LOGIC;
  signal stop_extn_cnt : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal stop_state_extn_r : STD_LOGIC;
  signal \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_pkt_cnt_r_reg[12]_i_1__0_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute DONT_TOUCH of fifo_rd_rst_t1_nxt_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of fifo_rd_rst_t1_nxt_reg : label is "yes";
  attribute DONT_TOUCH of fifo_rd_rst_t1_reg : label is std.standard.true;
  attribute KEEP of fifo_rd_rst_t1_reg : label is "yes";
  attribute DONT_TOUCH of fifo_rd_rst_t2_reg : label is std.standard.true;
  attribute KEEP of fifo_rd_rst_t2_reg : label is "yes";
  attribute c_init_val : string;
  attribute c_init_val of \gen_calib_result.u_tap_comp_rst_byteclk_sync_i\ : label is "1'b1";
  attribute c_mtbf_stages : string;
  attribute c_mtbf_stages of \gen_calib_result.u_tap_comp_rst_byteclk_sync_i\ : label is "5'b00010";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_extn_cnt[1]_i_1__0\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_extn_cnt[2]_i_1__0\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \gen_hs_high_rates.stop_state_extn_r_i_2__0\ : label is "soft_lutpair67";
begin
  dl1_rxactivehs <= \^dl1_rxactivehs\;
  dl1_stopstate <= \^dl1_stopstate\;
  dl_pkt_cnt(15 downto 0) <= \^dl_pkt_cnt\(15 downto 0);
fifo_rd_rst_t1_nxt_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => fifo_rd_rst_t1,
      Q => fifo_rd_rst_t1_nxt,
      R => '0'
    );
fifo_rd_rst_t1_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => stg3_reg,
      Q => fifo_rd_rst_t1,
      R => '0'
    );
fifo_rd_rst_t2_reg: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => stg3_reg,
      Q => fifo_rd_rst_t2,
      R => '0'
    );
\gen_calib_result.cal_done_sync_i\: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2\
     port map (
      cal_done => cal_done,
      rx_div4_clk => rx_div4_clk
    );
\gen_calib_result.u_tap_comp_rst_byteclk_sync_i\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync
     port map (
      prmry_in => tap_comp_rst,
      scndry_aclk => rx_div4_clk,
      scndry_out => \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED\
    );
\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm
     port map (
      Q(7 downto 0) => Q(7 downto 0),
      \active_sm_r__2\ => \active_sm_r__2\,
      cl_rxclkactivehs_reg => cl_rxclkactivehs_reg,
      cl_rxclkactivehs_reg_0 => cl_rxclkactivehs_reg_0,
      core_clk => core_clk,
      core_rst => core_rst,
      dl1_stopstate => \^dl1_stopstate\,
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      dl_en_hs_lpn_reg_0(0) => dl_en_hs_lpn_reg(0),
      dl_status_reg(2 downto 0) => dl_status_reg(2 downto 0),
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\,
      \gen_hs_high_rates.active_sm_r_reg\ => \gen_hs_high_rates.active_sm_r_reg_n_0\,
      \gen_hs_high_rates.dl_state_reg[0]\ => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14\,
      \gen_hs_high_rates.dl_state_reg[0]_0\ => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      \gen_hs_high_rates.dl_state_reg[1]\ => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15\,
      \gen_hs_high_rates.dl_state_reg[1]_0\ => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      \gen_hs_high_rates.stopstate_reg\ => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13\,
      \out\ => \out\,
      rx_dl1_lp_dn => rx_dl1_lp_dn,
      rx_dl1_lp_dp => rx_dl1_lp_dp,
      rxactivehs_coreclk_sync_r => rxactivehs_coreclk_sync_r,
      \s_level_out_bus_d3_reg[4]\(3 downto 0) => \s_level_out_bus_d3_reg[4]\(3 downto 0),
      \s_level_out_bus_d3_reg[4]_0\(3 downto 0) => \s_level_out_bus_d3_reg[4]_0\(3 downto 0),
      \s_level_out_bus_d3_reg[4]_1\(2 downto 0) => \s_level_out_bus_d3_reg[4]_1\(2 downto 0),
      s_level_out_d2_reg => rxactivehs_sync,
      stop_state_extn_r => stop_state_extn_r
    );
\gen_hs_high_rates.active_sm_r_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => rxactivehs_sync_i_n_1,
      Q => \gen_hs_high_rates.active_sm_r_reg_n_0\,
      R => stopstate0
    );
\gen_hs_high_rates.dl_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14\,
      Q => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      R => stopstate0
    );
\gen_hs_high_rates.dl_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => core_clk,
      CE => '1',
      D => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15\,
      Q => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      R => stopstate0
    );
\gen_hs_high_rates.rx_sot_det_align_i\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align
     port map (
      E(0) => \^dl1_rxactivehs\,
      dl1_errsoths => dl1_errsoths,
      dl1_errsotsynchs => dl1_errsotsynchs,
      dl1_rxdatahs(7 downto 0) => dl1_rxdatahs(7 downto 0),
      dl1_rxsynchs => dl1_rxsynchs,
      dl1_rxvalidhs => dl1_rxvalidhs,
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      pkt_cnt_r0 => pkt_cnt_r0,
      rx_div4_clk => rx_div4_clk,
      rx_dl1_hs_dp(7 downto 0) => rx_dl1_hs_dp(7 downto 0)
    );
\gen_hs_high_rates.rxactivehs_coreclk_sync_r_reg\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => rxactivehs_sync,
      Q => rxactivehs_coreclk_sync_r
    );
\gen_hs_high_rates.stop_extn_cnt[0]_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(0),
      O => \gen_hs_high_rates.stop_extn_cnt[0]_i_1__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[1]_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0440"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(0),
      I3 => stop_extn_cnt(1),
      O => \gen_hs_high_rates.stop_extn_cnt[1]_i_1__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[2]_i_1__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"04444000"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(0),
      I3 => stop_extn_cnt(1),
      I4 => stop_extn_cnt(2),
      O => \gen_hs_high_rates.stop_extn_cnt[2]_i_1__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[3]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0444444440000000"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(1),
      I3 => stop_extn_cnt(0),
      I4 => stop_extn_cnt(2),
      I5 => stop_extn_cnt(3),
      O => \gen_hs_high_rates.stop_extn_cnt[3]_i_1__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF7"
    )
        port map (
      I0 => \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I3 => stop_extn_cnt(2),
      I4 => stop_extn_cnt(3),
      I5 => stop_extn_cnt(4),
      O => \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[4]_i_2__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0444444440000000"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I2 => stop_extn_cnt(2),
      I3 => \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0\,
      I4 => stop_extn_cnt(3),
      I5 => stop_extn_cnt(4),
      O => \gen_hs_high_rates.stop_extn_cnt[4]_i_2__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt[4]_i_3__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => stop_extn_cnt(1),
      I1 => stop_extn_cnt(0),
      O => \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0\
    );
\gen_hs_high_rates.stop_extn_cnt_reg[0]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[0]_i_1__0_n_0\,
      Q => stop_extn_cnt(0)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[1]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[1]_i_1__0_n_0\,
      Q => stop_extn_cnt(1)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[2]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[2]_i_1__0_n_0\,
      Q => stop_extn_cnt(2)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[3]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[3]_i_1__0_n_0\,
      Q => stop_extn_cnt(3)
    );
\gen_hs_high_rates.stop_extn_cnt_reg[4]\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0\,
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_extn_cnt[4]_i_2__0_n_0\,
      Q => stop_extn_cnt(4)
    );
\gen_hs_high_rates.stop_state_extn_r_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2220"
    )
        port map (
      I0 => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      I1 => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      I2 => \gen_hs_high_rates.stop_state_extn_r_i_2__0_n_0\,
      I3 => stop_state_extn_r,
      O => \gen_hs_high_rates.stop_state_extn_r_i_1__0_n_0\
    );
\gen_hs_high_rates.stop_state_extn_r_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000020"
    )
        port map (
      I0 => stop_extn_cnt(0),
      I1 => stop_extn_cnt(2),
      I2 => stop_extn_cnt(1),
      I3 => stop_extn_cnt(3),
      I4 => stop_extn_cnt(4),
      O => \gen_hs_high_rates.stop_state_extn_r_i_2__0_n_0\
    );
\gen_hs_high_rates.stop_state_extn_r_reg\: unisim.vcomponents.FDCE
     port map (
      C => core_clk,
      CE => '1',
      CLR => core_rst,
      D => \gen_hs_high_rates.stop_state_extn_r_i_1__0_n_0\,
      Q => stop_state_extn_r
    );
\gen_hs_high_rates.stopstate_reg\: unisim.vcomponents.FDRE
     port map (
      C => core_clk,
      CE => '1',
      D => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13\,
      Q => \^dl1_stopstate\,
      R => stopstate0
    );
\pkt_cnt_r[0]_i_3__0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^dl_pkt_cnt\(0),
      O => \pkt_cnt_r[0]_i_3__0_n_0\
    );
\pkt_cnt_r_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2__0_n_7\,
      Q => \^dl_pkt_cnt\(0),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[0]_i_2__0\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \pkt_cnt_r_reg[0]_i_2__0_n_0\,
      CO(2) => \pkt_cnt_r_reg[0]_i_2__0_n_1\,
      CO(1) => \pkt_cnt_r_reg[0]_i_2__0_n_2\,
      CO(0) => \pkt_cnt_r_reg[0]_i_2__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0001",
      O(3) => \pkt_cnt_r_reg[0]_i_2__0_n_4\,
      O(2) => \pkt_cnt_r_reg[0]_i_2__0_n_5\,
      O(1) => \pkt_cnt_r_reg[0]_i_2__0_n_6\,
      O(0) => \pkt_cnt_r_reg[0]_i_2__0_n_7\,
      S(3 downto 1) => \^dl_pkt_cnt\(3 downto 1),
      S(0) => \pkt_cnt_r[0]_i_3__0_n_0\
    );
\pkt_cnt_r_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1__0_n_5\,
      Q => \^dl_pkt_cnt\(10),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1__0_n_4\,
      Q => \^dl_pkt_cnt\(11),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1__0_n_7\,
      Q => \^dl_pkt_cnt\(12),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[12]_i_1__0\: unisim.vcomponents.CARRY4
     port map (
      CI => \pkt_cnt_r_reg[8]_i_1__0_n_0\,
      CO(3) => \NLW_pkt_cnt_r_reg[12]_i_1__0_CO_UNCONNECTED\(3),
      CO(2) => \pkt_cnt_r_reg[12]_i_1__0_n_1\,
      CO(1) => \pkt_cnt_r_reg[12]_i_1__0_n_2\,
      CO(0) => \pkt_cnt_r_reg[12]_i_1__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \pkt_cnt_r_reg[12]_i_1__0_n_4\,
      O(2) => \pkt_cnt_r_reg[12]_i_1__0_n_5\,
      O(1) => \pkt_cnt_r_reg[12]_i_1__0_n_6\,
      O(0) => \pkt_cnt_r_reg[12]_i_1__0_n_7\,
      S(3 downto 0) => \^dl_pkt_cnt\(15 downto 12)
    );
\pkt_cnt_r_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1__0_n_6\,
      Q => \^dl_pkt_cnt\(13),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1__0_n_5\,
      Q => \^dl_pkt_cnt\(14),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[12]_i_1__0_n_4\,
      Q => \^dl_pkt_cnt\(15),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2__0_n_6\,
      Q => \^dl_pkt_cnt\(1),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2__0_n_5\,
      Q => \^dl_pkt_cnt\(2),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[0]_i_2__0_n_4\,
      Q => \^dl_pkt_cnt\(3),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1__0_n_7\,
      Q => \^dl_pkt_cnt\(4),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[4]_i_1__0\: unisim.vcomponents.CARRY4
     port map (
      CI => \pkt_cnt_r_reg[0]_i_2__0_n_0\,
      CO(3) => \pkt_cnt_r_reg[4]_i_1__0_n_0\,
      CO(2) => \pkt_cnt_r_reg[4]_i_1__0_n_1\,
      CO(1) => \pkt_cnt_r_reg[4]_i_1__0_n_2\,
      CO(0) => \pkt_cnt_r_reg[4]_i_1__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \pkt_cnt_r_reg[4]_i_1__0_n_4\,
      O(2) => \pkt_cnt_r_reg[4]_i_1__0_n_5\,
      O(1) => \pkt_cnt_r_reg[4]_i_1__0_n_6\,
      O(0) => \pkt_cnt_r_reg[4]_i_1__0_n_7\,
      S(3 downto 0) => \^dl_pkt_cnt\(7 downto 4)
    );
\pkt_cnt_r_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1__0_n_6\,
      Q => \^dl_pkt_cnt\(5),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1__0_n_5\,
      Q => \^dl_pkt_cnt\(6),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[4]_i_1__0_n_4\,
      Q => \^dl_pkt_cnt\(7),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1__0_n_7\,
      Q => \^dl_pkt_cnt\(8),
      R => fifo_rd_rst_t1
    );
\pkt_cnt_r_reg[8]_i_1__0\: unisim.vcomponents.CARRY4
     port map (
      CI => \pkt_cnt_r_reg[4]_i_1__0_n_0\,
      CO(3) => \pkt_cnt_r_reg[8]_i_1__0_n_0\,
      CO(2) => \pkt_cnt_r_reg[8]_i_1__0_n_1\,
      CO(1) => \pkt_cnt_r_reg[8]_i_1__0_n_2\,
      CO(0) => \pkt_cnt_r_reg[8]_i_1__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \pkt_cnt_r_reg[8]_i_1__0_n_4\,
      O(2) => \pkt_cnt_r_reg[8]_i_1__0_n_5\,
      O(1) => \pkt_cnt_r_reg[8]_i_1__0_n_6\,
      O(0) => \pkt_cnt_r_reg[8]_i_1__0_n_7\,
      S(3 downto 0) => \^dl_pkt_cnt\(11 downto 8)
    );
\pkt_cnt_r_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => rx_div4_clk,
      CE => pkt_cnt_r0,
      D => \pkt_cnt_r_reg[8]_i_1__0_n_6\,
      Q => \^dl_pkt_cnt\(9),
      R => fifo_rd_rst_t1
    );
rxactivehs_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3\
     port map (
      \active_sm_r__2\ => \active_sm_r__2\,
      core_clk => core_clk,
      dl1_rxactivehs => \^dl1_rxactivehs\,
      dl_en_hs_lpn_i => dl_en_hs_lpn_i,
      \gen_hs_high_rates.active_sm_r_reg\ => rxactivehs_sync_i_n_1,
      \gen_hs_high_rates.active_sm_r_reg_0\ => \gen_hs_high_rates.active_sm_r_reg_n_0\,
      \gen_hs_high_rates.dl_state_reg[0]\ => \gen_hs_high_rates.dl_state_reg_n_0_[0]\,
      \gen_hs_high_rates.dl_state_reg[1]\ => \gen_hs_high_rates.dl_state_reg_n_0_[1]\,
      \out\ => rxactivehs_sync,
      rxactivehs_coreclk_sync_r => rxactivehs_coreclk_sync_r,
      stop_state_extn_r => stop_state_extn_r
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top is
  port (
    rx_div4_clk : in STD_LOGIC;
    clk_200m : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    core_ref_clk : out STD_LOGIC;
    system_rst_in : in STD_LOGIC;
    dphy_srst_out : out STD_LOGIC;
    dphy_en_out : out STD_LOGIC;
    system_rst_phybyteclk_in : in STD_LOGIC;
    system_rst_byteclk_in : in STD_LOGIC;
    phy_rst : out STD_LOGIC;
    phy_ready : in STD_LOGIC;
    sys_rst_byteclk_out : out STD_LOGIC;
    init_done : out STD_LOGIC;
    idelay_tap_value : out STD_LOGIC_VECTOR ( 8 downto 0 );
    idelay_load : out STD_LOGIC;
    idelay_ready : in STD_LOGIC;
    tap_comp_res : out STD_LOGIC_VECTOR ( 3 downto 0 );
    tap_comp_rst : in STD_LOGIC;
    cal_pass : in STD_LOGIC;
    cal_done : in STD_LOGIC;
    dly_ctrl_rdy : in STD_LOGIC;
    idly_tap_val : in STD_LOGIC_VECTOR ( 4 downto 0 );
    reg_cal_start : out STD_LOGIC;
    rx_dl0_en_hs_lpn : out STD_LOGIC;
    rx_dl0_disable_ibuf : out STD_LOGIC;
    rx_dl0_lp_dp : in STD_LOGIC;
    rx_dl0_lp_dn : in STD_LOGIC;
    rx_dl0_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 );
    rx_dl0_fifo_empty : in STD_LOGIC;
    rx_dl0_fifo_rd_en : out STD_LOGIC;
    rx_dl0_fifo_rd_clk : out STD_LOGIC;
    dl0_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidhs : out STD_LOGIC;
    dl0_rxactivehs : out STD_LOGIC;
    dl0_rxsynchs : out STD_LOGIC;
    dl0_forcerxmode : in STD_LOGIC;
    dl0_stopstate : out STD_LOGIC;
    dl0_enable : in STD_LOGIC;
    dl0_ulpsactivenot : out STD_LOGIC;
    dl0_rxclkesc : out STD_LOGIC;
    dl0_rxlpdtesc : out STD_LOGIC;
    dl0_rxulpsesc : out STD_LOGIC;
    dl0_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl0_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidesc : out STD_LOGIC;
    dl0_errsoths : out STD_LOGIC;
    dl0_errsotsynchs : out STD_LOGIC;
    dl0_erresc : out STD_LOGIC;
    dl0_errsyncesc : out STD_LOGIC;
    dl0_errcontrol : out STD_LOGIC;
    rx_dl1_en_hs_lpn : out STD_LOGIC;
    rx_dl1_disable_ibuf : out STD_LOGIC;
    rx_dl1_lp_dp : in STD_LOGIC;
    rx_dl1_lp_dn : in STD_LOGIC;
    rx_dl1_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 );
    rx_dl1_fifo_empty : in STD_LOGIC;
    rx_dl1_fifo_rd_en : out STD_LOGIC;
    rx_dl1_fifo_rd_clk : out STD_LOGIC;
    dl1_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidhs : out STD_LOGIC;
    dl1_rxactivehs : out STD_LOGIC;
    dl1_rxsynchs : out STD_LOGIC;
    dl1_forcerxmode : in STD_LOGIC;
    dl1_stopstate : out STD_LOGIC;
    dl1_enable : in STD_LOGIC;
    dl1_ulpsactivenot : out STD_LOGIC;
    dl1_rxclkesc : out STD_LOGIC;
    dl1_rxlpdtesc : out STD_LOGIC;
    dl1_rxulpsesc : out STD_LOGIC;
    dl1_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl1_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidesc : out STD_LOGIC;
    dl1_errsoths : out STD_LOGIC;
    dl1_errsotsynchs : out STD_LOGIC;
    dl1_erresc : out STD_LOGIC;
    dl1_errsyncesc : out STD_LOGIC;
    dl1_errcontrol : out STD_LOGIC;
    rx_dl2_en_hs_lpn : out STD_LOGIC;
    rx_dl2_disable_ibuf : out STD_LOGIC;
    rx_dl2_lp_dp : in STD_LOGIC;
    rx_dl2_lp_dn : in STD_LOGIC;
    rx_dl2_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 );
    rx_dl2_fifo_empty : in STD_LOGIC;
    rx_dl2_fifo_rd_en : out STD_LOGIC;
    rx_dl2_fifo_rd_clk : out STD_LOGIC;
    dl2_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl2_rxvalidhs : out STD_LOGIC;
    dl2_rxactivehs : out STD_LOGIC;
    dl2_rxsynchs : out STD_LOGIC;
    dl2_forcerxmode : in STD_LOGIC;
    dl2_stopstate : out STD_LOGIC;
    dl2_enable : in STD_LOGIC;
    dl2_ulpsactivenot : out STD_LOGIC;
    dl2_rxclkesc : out STD_LOGIC;
    dl2_rxlpdtesc : out STD_LOGIC;
    dl2_rxulpsesc : out STD_LOGIC;
    dl2_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl2_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl2_rxvalidesc : out STD_LOGIC;
    dl2_errsoths : out STD_LOGIC;
    dl2_errsotsynchs : out STD_LOGIC;
    dl2_erresc : out STD_LOGIC;
    dl2_errsyncesc : out STD_LOGIC;
    dl2_errcontrol : out STD_LOGIC;
    rx_dl3_en_hs_lpn : out STD_LOGIC;
    rx_dl3_disable_ibuf : out STD_LOGIC;
    rx_dl3_lp_dp : in STD_LOGIC;
    rx_dl3_lp_dn : in STD_LOGIC;
    rx_dl3_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 );
    rx_dl3_fifo_empty : in STD_LOGIC;
    rx_dl3_fifo_rd_en : out STD_LOGIC;
    rx_dl3_fifo_rd_clk : out STD_LOGIC;
    dl3_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl3_rxvalidhs : out STD_LOGIC;
    dl3_rxactivehs : out STD_LOGIC;
    dl3_rxsynchs : out STD_LOGIC;
    dl3_forcerxmode : in STD_LOGIC;
    dl3_stopstate : out STD_LOGIC;
    dl3_enable : in STD_LOGIC;
    dl3_ulpsactivenot : out STD_LOGIC;
    dl3_rxclkesc : out STD_LOGIC;
    dl3_rxlpdtesc : out STD_LOGIC;
    dl3_rxulpsesc : out STD_LOGIC;
    dl3_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl3_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl3_rxvalidesc : out STD_LOGIC;
    dl3_errsoths : out STD_LOGIC;
    dl3_errsotsynchs : out STD_LOGIC;
    dl3_erresc : out STD_LOGIC;
    dl3_errsyncesc : out STD_LOGIC;
    dl3_errcontrol : out STD_LOGIC;
    cl_rxclkactivehs : out STD_LOGIC;
    cl_stopstate : out STD_LOGIC;
    cl_enable : in STD_LOGIC;
    cl_rxulpsclknot : out STD_LOGIC;
    cl_ulpsactivenot : out STD_LOGIC;
    rx_cl_en_hs_lpn : out STD_LOGIC;
    rx_cl_disable_ibuf : out STD_LOGIC;
    rx_cl_lp_dp : in STD_LOGIC;
    rx_cl_lp_dn : in STD_LOGIC;
    rx_cl_hs_dp : in STD_LOGIC_VECTOR ( 7 downto 0 );
    rx_cl_fifo_empty : in STD_LOGIC;
    rx_cl_fifo_rd_en : out STD_LOGIC;
    rx_cl_fifo_rd_clk : out STD_LOGIC;
    s_axi_aclk : in STD_LOGIC;
    s_axi_aresetn : in STD_LOGIC;
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_araddr : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC
  );
  attribute BYTE_UI : integer;
  attribute BYTE_UI of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 10;
  attribute CL_ACTIVE_BYTE_UI : integer;
  attribute CL_ACTIVE_BYTE_UI of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 1;
  attribute C_CLK_PREPARE_VAL : integer;
  attribute C_CLK_PREPARE_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 40;
  attribute C_CLK_SETTLE_VAL : integer;
  attribute C_CLK_SETTLE_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 95;
  attribute C_CLK_TERMEN_VAL : integer;
  attribute C_CLK_TERMEN_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 38;
  attribute C_CLK_ZERO_VAL : integer;
  attribute C_CLK_ZERO_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 205;
  attribute C_DPHY_LANES : integer;
  attribute C_DPHY_LANES of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 2;
  attribute C_DPHY_MODE : string;
  attribute C_DPHY_MODE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "SLAVE";
  attribute C_D_TERMEN_VAL : integer;
  attribute C_D_TERMEN_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 35;
  attribute C_EN_DEBUG_REGS : integer;
  attribute C_EN_DEBUG_REGS of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 0;
  attribute C_EN_REGISTER : integer;
  attribute C_EN_REGISTER of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 1;
  attribute C_EN_TIMEOUT_REGS : integer;
  attribute C_EN_TIMEOUT_REGS of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 0;
  attribute C_EN_ULPS_WAKEUP_CNT : string;
  attribute C_EN_ULPS_WAKEUP_CNT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "FALSE";
  attribute C_ESC_TIMEOUT : integer;
  attribute C_ESC_TIMEOUT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 25600;
  attribute C_HS_LINE_RATE : integer;
  attribute C_HS_LINE_RATE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 800;
  attribute C_HS_RX_TIMEOUT : integer;
  attribute C_HS_RX_TIMEOUT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 65541;
  attribute C_HS_SETTLE_VAL : integer;
  attribute C_HS_SETTLE_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 147;
  attribute C_HS_SKIP_VAL : integer;
  attribute C_HS_SKIP_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 40;
  attribute C_INIT : integer;
  attribute C_INIT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 100000;
  attribute C_IS_7SERIES : string;
  attribute C_IS_7SERIES of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "TRUE";
  attribute C_LPX_PERIOD : integer;
  attribute C_LPX_PERIOD of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 50;
  attribute C_STABLE_CLK_PERIOD : string;
  attribute C_STABLE_CLK_PERIOD of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "5.000000";
  attribute C_WAKEUP : integer;
  attribute C_WAKEUP of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 1000000;
  attribute DPHY_PRESET : string;
  attribute DPHY_PRESET of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "yes";
  attribute LPX_PERIOD_MIN : integer;
  attribute LPX_PERIOD_MIN of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 25;
  attribute LP_STATE_CNT : integer;
  attribute LP_STATE_CNT of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 2;
  attribute MTBF_SYNC_STAGES : integer;
  attribute MTBF_SYNC_STAGES of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 3;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is "mipi_dphy_v4_0_1_rx_fab_top";
  attribute SUPPORT_LEVEL : integer;
  attribute SUPPORT_LEVEL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 1;
  attribute UI10_VAL : integer;
  attribute UI10_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 12;
  attribute UI_VAL : integer;
  attribute UI_VAL of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top : entity is 1250;
end bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top;

architecture STRUCTURE of bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top is
  signal \<const0>\ : STD_LOGIC;
  signal cl_init_done_div4clk_i : STD_LOGIC;
  signal \^cl_rxclkactivehs\ : STD_LOGIC;
  signal cl_status_reg_bit_0 : STD_LOGIC;
  signal cl_stop_state : STD_LOGIC;
  signal clk_active_r : STD_LOGIC;
  signal dl_pkt_cnt : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal dl_status_reg : STD_LOGIC_VECTOR ( 13 downto 0 );
  signal \^dphy_en_out\ : STD_LOGIC;
  signal \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0\ : STD_LOGIC;
  signal \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_3\ : STD_LOGIC;
  signal \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5\ : STD_LOGIC;
  signal \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_7\ : STD_LOGIC;
  signal \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_8\ : STD_LOGIC;
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg_0\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_19\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_20\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_21\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_22\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_23\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_24\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_25\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_26\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_27\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_28\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_29\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_30\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_31\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_32\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_33\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_34\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_35\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_36\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_37\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_38\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_39\ : STD_LOGIC;
  signal \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_40\ : STD_LOGIC;
  signal \gen_rx_data_lane[0].rx_data_lane_inst_n_34\ : STD_LOGIC;
  signal \gen_rx_data_lane[0].rx_data_lane_inst_n_35\ : STD_LOGIC;
  signal \gen_rx_data_lane[1].rx_data_lane_inst_n_33\ : STD_LOGIC;
  signal \^init_done\ : STD_LOGIC;
  signal init_done_div4clk_sync : STD_LOGIC;
  signal init_value : STD_LOGIC_VECTOR ( 22 downto 8 );
  signal maxfrm_wait_done : STD_LOGIC;
  signal maxfrm_wait_done_sync_i_i_1_n_0 : STD_LOGIC;
  signal p_2_in : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal p_5_in : STD_LOGIC;
  signal stopstate0 : STD_LOGIC;
  signal system_rst_byteclk_w : STD_LOGIC;
  signal system_rst_w : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_1\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_2\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_3\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_1\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_2\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_3\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_1\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_2\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_3\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_1\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8]\ : STD_LOGIC;
  signal \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9]\ : STD_LOGIC;
  signal NLW_maxfrm_wait_done_sync_i_prmry_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_maxfrm_wait_done_sync_i_scndry_out_UNCONNECTED : STD_LOGIC;
  signal NLW_maxfrm_wait_done_sync_i_scndry_vect_out_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute DowngradeIPIdentifiedWarnings of maxfrm_wait_done_sync_i : label is "yes";
  attribute c_cdc_type : string;
  attribute c_cdc_type of maxfrm_wait_done_sync_i : label is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of maxfrm_wait_done_sync_i : label is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of maxfrm_wait_done_sync_i : label is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of maxfrm_wait_done_sync_i : label is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of maxfrm_wait_done_sync_i : label is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of maxfrm_wait_done_sync_i : label is "6'b000010";
begin
  cl_rxclkactivehs <= \^cl_rxclkactivehs\;
  cl_rxulpsclknot <= \<const0>\;
  cl_ulpsactivenot <= \<const0>\;
  core_ref_clk <= \<const0>\;
  dl0_errcontrol <= \<const0>\;
  dl0_erresc <= \<const0>\;
  dl0_errsyncesc <= \<const0>\;
  dl0_rxclkesc <= \<const0>\;
  dl0_rxdataesc(7) <= \<const0>\;
  dl0_rxdataesc(6) <= \<const0>\;
  dl0_rxdataesc(5) <= \<const0>\;
  dl0_rxdataesc(4) <= \<const0>\;
  dl0_rxdataesc(3) <= \<const0>\;
  dl0_rxdataesc(2) <= \<const0>\;
  dl0_rxdataesc(1) <= \<const0>\;
  dl0_rxdataesc(0) <= \<const0>\;
  dl0_rxlpdtesc <= \<const0>\;
  dl0_rxtriggeresc(3) <= \<const0>\;
  dl0_rxtriggeresc(2) <= \<const0>\;
  dl0_rxtriggeresc(1) <= \<const0>\;
  dl0_rxtriggeresc(0) <= \<const0>\;
  dl0_rxulpsesc <= \<const0>\;
  dl0_rxvalidesc <= \<const0>\;
  dl0_ulpsactivenot <= \<const0>\;
  dl1_errcontrol <= \<const0>\;
  dl1_erresc <= \<const0>\;
  dl1_errsyncesc <= \<const0>\;
  dl1_rxclkesc <= \<const0>\;
  dl1_rxdataesc(7) <= \<const0>\;
  dl1_rxdataesc(6) <= \<const0>\;
  dl1_rxdataesc(5) <= \<const0>\;
  dl1_rxdataesc(4) <= \<const0>\;
  dl1_rxdataesc(3) <= \<const0>\;
  dl1_rxdataesc(2) <= \<const0>\;
  dl1_rxdataesc(1) <= \<const0>\;
  dl1_rxdataesc(0) <= \<const0>\;
  dl1_rxlpdtesc <= \<const0>\;
  dl1_rxtriggeresc(3) <= \<const0>\;
  dl1_rxtriggeresc(2) <= \<const0>\;
  dl1_rxtriggeresc(1) <= \<const0>\;
  dl1_rxtriggeresc(0) <= \<const0>\;
  dl1_rxulpsesc <= \<const0>\;
  dl1_rxvalidesc <= \<const0>\;
  dl1_ulpsactivenot <= \<const0>\;
  dl2_errcontrol <= \<const0>\;
  dl2_erresc <= \<const0>\;
  dl2_errsoths <= \<const0>\;
  dl2_errsotsynchs <= \<const0>\;
  dl2_errsyncesc <= \<const0>\;
  dl2_rxactivehs <= \<const0>\;
  dl2_rxclkesc <= \<const0>\;
  dl2_rxdataesc(7) <= \<const0>\;
  dl2_rxdataesc(6) <= \<const0>\;
  dl2_rxdataesc(5) <= \<const0>\;
  dl2_rxdataesc(4) <= \<const0>\;
  dl2_rxdataesc(3) <= \<const0>\;
  dl2_rxdataesc(2) <= \<const0>\;
  dl2_rxdataesc(1) <= \<const0>\;
  dl2_rxdataesc(0) <= \<const0>\;
  dl2_rxdatahs(7) <= \<const0>\;
  dl2_rxdatahs(6) <= \<const0>\;
  dl2_rxdatahs(5) <= \<const0>\;
  dl2_rxdatahs(4) <= \<const0>\;
  dl2_rxdatahs(3) <= \<const0>\;
  dl2_rxdatahs(2) <= \<const0>\;
  dl2_rxdatahs(1) <= \<const0>\;
  dl2_rxdatahs(0) <= \<const0>\;
  dl2_rxlpdtesc <= \<const0>\;
  dl2_rxsynchs <= \<const0>\;
  dl2_rxtriggeresc(3) <= \<const0>\;
  dl2_rxtriggeresc(2) <= \<const0>\;
  dl2_rxtriggeresc(1) <= \<const0>\;
  dl2_rxtriggeresc(0) <= \<const0>\;
  dl2_rxulpsesc <= \<const0>\;
  dl2_rxvalidesc <= \<const0>\;
  dl2_rxvalidhs <= \<const0>\;
  dl2_stopstate <= \<const0>\;
  dl2_ulpsactivenot <= \<const0>\;
  dl3_errcontrol <= \<const0>\;
  dl3_erresc <= \<const0>\;
  dl3_errsoths <= \<const0>\;
  dl3_errsotsynchs <= \<const0>\;
  dl3_errsyncesc <= \<const0>\;
  dl3_rxactivehs <= \<const0>\;
  dl3_rxclkesc <= \<const0>\;
  dl3_rxdataesc(7) <= \<const0>\;
  dl3_rxdataesc(6) <= \<const0>\;
  dl3_rxdataesc(5) <= \<const0>\;
  dl3_rxdataesc(4) <= \<const0>\;
  dl3_rxdataesc(3) <= \<const0>\;
  dl3_rxdataesc(2) <= \<const0>\;
  dl3_rxdataesc(1) <= \<const0>\;
  dl3_rxdataesc(0) <= \<const0>\;
  dl3_rxdatahs(7) <= \<const0>\;
  dl3_rxdatahs(6) <= \<const0>\;
  dl3_rxdatahs(5) <= \<const0>\;
  dl3_rxdatahs(4) <= \<const0>\;
  dl3_rxdatahs(3) <= \<const0>\;
  dl3_rxdatahs(2) <= \<const0>\;
  dl3_rxdatahs(1) <= \<const0>\;
  dl3_rxdatahs(0) <= \<const0>\;
  dl3_rxlpdtesc <= \<const0>\;
  dl3_rxsynchs <= \<const0>\;
  dl3_rxtriggeresc(3) <= \<const0>\;
  dl3_rxtriggeresc(2) <= \<const0>\;
  dl3_rxtriggeresc(1) <= \<const0>\;
  dl3_rxtriggeresc(0) <= \<const0>\;
  dl3_rxulpsesc <= \<const0>\;
  dl3_rxvalidesc <= \<const0>\;
  dl3_rxvalidhs <= \<const0>\;
  dl3_stopstate <= \<const0>\;
  dl3_ulpsactivenot <= \<const0>\;
  dphy_en_out <= \^dphy_en_out\;
  idelay_load <= \<const0>\;
  idelay_tap_value(8) <= \<const0>\;
  idelay_tap_value(7) <= \<const0>\;
  idelay_tap_value(6) <= \<const0>\;
  idelay_tap_value(5) <= \<const0>\;
  idelay_tap_value(4) <= \<const0>\;
  idelay_tap_value(3) <= \<const0>\;
  idelay_tap_value(2) <= \<const0>\;
  idelay_tap_value(1) <= \<const0>\;
  idelay_tap_value(0) <= \<const0>\;
  init_done <= \^init_done\;
  phy_rst <= \<const0>\;
  reg_cal_start <= \<const0>\;
  rx_cl_disable_ibuf <= \<const0>\;
  rx_cl_en_hs_lpn <= \<const0>\;
  rx_cl_fifo_rd_clk <= \<const0>\;
  rx_cl_fifo_rd_en <= \<const0>\;
  rx_dl0_disable_ibuf <= \<const0>\;
  rx_dl0_en_hs_lpn <= \<const0>\;
  rx_dl0_fifo_rd_clk <= \<const0>\;
  rx_dl0_fifo_rd_en <= \<const0>\;
  rx_dl1_disable_ibuf <= \<const0>\;
  rx_dl1_en_hs_lpn <= \<const0>\;
  rx_dl1_fifo_rd_clk <= \<const0>\;
  rx_dl1_fifo_rd_en <= \<const0>\;
  rx_dl2_disable_ibuf <= \<const0>\;
  rx_dl2_en_hs_lpn <= \<const0>\;
  rx_dl2_fifo_rd_clk <= \<const0>\;
  rx_dl2_fifo_rd_en <= \<const0>\;
  rx_dl3_disable_ibuf <= \<const0>\;
  rx_dl3_en_hs_lpn <= \<const0>\;
  rx_dl3_fifo_rd_clk <= \<const0>\;
  rx_dl3_fifo_rd_en <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  sys_rst_byteclk_out <= \<const0>\;
  tap_comp_res(3) <= \<const0>\;
  tap_comp_res(2) <= \<const0>\;
  tap_comp_res(1) <= \<const0>\;
  tap_comp_res(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
cl_enable_sync_fab_top_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1\
     port map (
      cl_enable => cl_enable,
      core_clk => core_clk
    );
clk_active_r_reg: unisim.vcomponents.FDCE
     port map (
      C => rx_div4_clk,
      CE => '1',
      CLR => \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0\,
      D => '1',
      Q => clk_active_r
    );
clk_active_r_sync: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0\
     port map (
      clk_active_r => clk_active_r,
      core_clk => core_clk
    );
\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i\: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0\
     port map (
      fifo_rd_rst_t2_reg => \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0\,
      \out\ => system_rst_byteclk_w,
      rx_div4_clk => rx_div4_clk
    );
\gen_csi_rx_clk_lane.dphy_rx_clk_lane\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane
     port map (
      D(0) => cl_stop_state,
      \FSM_sequential_dl_rx_state_reg[0]\(0) => \gen_rx_data_lane[1].rx_data_lane_inst_n_33\,
      \FSM_sequential_dl_rx_state_reg[0]_0\(0) => \gen_rx_data_lane[0].rx_data_lane_inst_n_34\,
      \cl_rx_state_reg[1]_0\ => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5\,
      cl_rxclkactivehs => \^cl_rxclkactivehs\,
      cl_status_reg_bit_0 => cl_status_reg_bit_0,
      cl_stopstate => cl_stopstate,
      core_clk => core_clk,
      core_rst => core_rst,
      dl_status_reg_bit_4_reg => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_7\,
      dl_status_reg_bit_4_reg_0 => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_8\,
      init_done => \^init_done\,
      \out\ => cl_init_done_div4clk_i,
      rx_cl_lp_dn => rx_cl_lp_dn,
      rx_cl_lp_dp => rx_cl_lp_dp,
      \s_level_out_bus_d1_cdc_to_reg[0]\(0) => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_3\,
      \s_level_out_bus_d3_reg[1]\(0) => \^dphy_en_out\,
      \s_level_out_bus_d3_reg[22]\(14 downto 0) => init_value(22 downto 8),
      system_rst_reg => system_rst_w
    );
\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg
     port map (
      D(0) => cl_stop_state,
      Q(7 downto 0) => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg\(7 downto 0),
      S(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_19\,
      S(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_20\,
      S(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_21\,
      S(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_22\,
      cl_enable => cl_enable,
      cl_status_reg_bit_0_reg(0) => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_3\,
      core_clk => core_clk,
      dl_pkt_cnt(31 downto 0) => dl_pkt_cnt(31 downto 0),
      dl_status_reg(5) => dl_status_reg(13),
      dl_status_reg(4) => dl_status_reg(11),
      dl_status_reg(3 downto 2) => dl_status_reg(7 downto 6),
      dl_status_reg(1) => dl_status_reg(4),
      dl_status_reg(0) => dl_status_reg(0),
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \^init_done\,
      \out\(1) => \^dphy_en_out\,
      \out\(0) => dphy_srst_out,
      p_5_in => p_5_in,
      rx_div4_clk => rx_div4_clk,
      s_axi_aclk => s_axi_aclk,
      s_axi_araddr(4 downto 0) => s_axi_araddr(6 downto 2),
      s_axi_aresetn => s_axi_aresetn,
      s_axi_arready => s_axi_arready,
      s_axi_arvalid => s_axi_arvalid,
      s_axi_awaddr(4 downto 0) => s_axi_awaddr(6 downto 2),
      s_axi_awready => s_axi_awready,
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bready => s_axi_bready,
      s_axi_bvalid => s_axi_bvalid,
      s_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      s_axi_rready => s_axi_rready,
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wdata(31 downto 0) => s_axi_wdata(31 downto 0),
      s_axi_wready => s_axi_wready,
      s_axi_wvalid => s_axi_wvalid,
      \s_level_out_bus_d4_reg[22]\(14 downto 0) => init_value(22 downto 8),
      \settle_cnt_reg[0]\(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_23\,
      \settle_cnt_reg[0]\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_24\,
      \settle_cnt_reg[0]\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_25\,
      \settle_cnt_reg[0]\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_26\,
      \settle_cnt_reg[0]_0\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_27\,
      \settle_cnt_reg[0]_0\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_28\,
      \settle_cnt_reg[0]_0\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_29\,
      \settle_cnt_reg[0]_1\(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_30\,
      \settle_cnt_reg[0]_1\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_31\,
      \settle_cnt_reg[0]_1\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_32\,
      \settle_cnt_reg[0]_1\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_33\,
      \settle_cnt_reg[0]_2\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_34\,
      \settle_cnt_reg[0]_2\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_35\,
      \settle_cnt_reg[0]_2\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_36\,
      \settle_cnt_reg[0]_3\(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_37\,
      \settle_cnt_reg[0]_3\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_38\,
      \settle_cnt_reg[0]_3\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_39\,
      \settle_cnt_reg[0]_3\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_40\,
      \settle_cnt_reg[7]\(7 downto 0) => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg_0\(7 downto 0),
      system_rst_reg => system_rst_w
    );
\gen_rx_data_lane[0].rx_data_lane_inst\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane
     port map (
      Q(7 downto 0) => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg\(7 downto 0),
      S(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_19\,
      S(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_20\,
      S(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_21\,
      S(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_22\,
      SR(0) => \two_lane_hs_rx_timeout.hs_wait_count\(0),
      cal_done => cal_done,
      cl_rxclkactivehs_reg => \^cl_rxclkactivehs\,
      cl_rxclkactivehs_reg_0 => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_8\,
      core_clk => core_clk,
      core_rst => core_rst,
      dl0_errsoths => dl0_errsoths,
      dl0_errsotsynchs => dl0_errsotsynchs,
      dl0_rxactivehs => dl0_rxactivehs,
      dl0_rxdatahs(7 downto 0) => dl0_rxdatahs(7 downto 0),
      dl0_rxsynchs => dl0_rxsynchs,
      dl0_rxvalidhs => dl0_rxvalidhs,
      dl0_stopstate => dl0_stopstate,
      dl_en_hs_lpn_reg(0) => \gen_rx_data_lane[0].rx_data_lane_inst_n_34\,
      dl_pkt_cnt(15 downto 0) => dl_pkt_cnt(15 downto 0),
      dl_status_reg(2) => dl_status_reg(6),
      dl_status_reg(1) => dl_status_reg(4),
      dl_status_reg(0) => dl_status_reg(0),
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \^init_done\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5\,
      \out\ => system_rst_w,
      prmry_in => maxfrm_wait_done,
      rx_div4_clk => rx_div4_clk,
      rx_dl0_hs_dp(7 downto 0) => rx_dl0_hs_dp(7 downto 0),
      rx_dl0_lp_dn => rx_dl0_lp_dn,
      rx_dl0_lp_dp => rx_dl0_lp_dp,
      \s_level_out_bus_d3_reg[4]\(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_30\,
      \s_level_out_bus_d3_reg[4]\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_31\,
      \s_level_out_bus_d3_reg[4]\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_32\,
      \s_level_out_bus_d3_reg[4]\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_33\,
      \s_level_out_bus_d3_reg[4]_0\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_34\,
      \s_level_out_bus_d3_reg[4]_0\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_35\,
      \s_level_out_bus_d3_reg[4]_0\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_36\,
      s_level_out_d3_reg => init_done_div4clk_sync,
      stg3_reg => \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0\,
      stopstate0 => stopstate0,
      tap_comp_rst => tap_comp_rst,
      \two_lane_hs_rx_timeout.hs_wait_count_reg[14]\ => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0\,
      \two_lane_hs_rx_timeout.maxfrm_wait_done_reg\ => \gen_rx_data_lane[0].rx_data_lane_inst_n_35\
    );
\gen_rx_data_lane[1].rx_data_lane_inst\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1
     port map (
      Q(7 downto 0) => \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg_0\(7 downto 0),
      cal_done => cal_done,
      cl_rxclkactivehs_reg => \^cl_rxclkactivehs\,
      cl_rxclkactivehs_reg_0 => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_7\,
      core_clk => core_clk,
      core_rst => core_rst,
      dl1_errsoths => dl1_errsoths,
      dl1_errsotsynchs => dl1_errsotsynchs,
      dl1_rxactivehs => dl1_rxactivehs,
      dl1_rxdatahs(7 downto 0) => dl1_rxdatahs(7 downto 0),
      dl1_rxsynchs => dl1_rxsynchs,
      dl1_rxvalidhs => dl1_rxvalidhs,
      dl1_stopstate => dl1_stopstate,
      dl_en_hs_lpn_reg(0) => \gen_rx_data_lane[1].rx_data_lane_inst_n_33\,
      dl_pkt_cnt(15 downto 0) => dl_pkt_cnt(31 downto 16),
      dl_status_reg(2) => dl_status_reg(13),
      dl_status_reg(1) => dl_status_reg(11),
      dl_status_reg(0) => dl_status_reg(7),
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \^init_done\,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg_0\ => \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5\,
      \out\ => system_rst_w,
      rx_div4_clk => rx_div4_clk,
      rx_dl1_hs_dp(7 downto 0) => rx_dl1_hs_dp(7 downto 0),
      rx_dl1_lp_dn => rx_dl1_lp_dn,
      rx_dl1_lp_dp => rx_dl1_lp_dp,
      \s_level_out_bus_d3_reg[4]\(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_23\,
      \s_level_out_bus_d3_reg[4]\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_24\,
      \s_level_out_bus_d3_reg[4]\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_25\,
      \s_level_out_bus_d3_reg[4]\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_26\,
      \s_level_out_bus_d3_reg[4]_0\(3) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_37\,
      \s_level_out_bus_d3_reg[4]_0\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_38\,
      \s_level_out_bus_d3_reg[4]_0\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_39\,
      \s_level_out_bus_d3_reg[4]_0\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_40\,
      \s_level_out_bus_d3_reg[4]_1\(2) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_27\,
      \s_level_out_bus_d3_reg[4]_1\(1) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_28\,
      \s_level_out_bus_d3_reg[4]_1\(0) => \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_29\,
      stg3_reg => \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0\,
      stopstate0 => stopstate0,
      tap_comp_rst => tap_comp_rst
    );
init_done_div4clk_sync_i: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9\
     port map (
      \out\ => cl_init_done_div4clk_i,
      rx_div4_clk => rx_div4_clk,
      s_level_out_d4_reg_0 => init_done_div4clk_sync
    );
maxfrm_wait_done_sync_i: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell
     port map (
      prmry_ack => NLW_maxfrm_wait_done_sync_i_prmry_ack_UNCONNECTED,
      prmry_aclk => '0',
      prmry_in => maxfrm_wait_done,
      prmry_rst_n => '1',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => core_clk,
      scndry_out => NLW_maxfrm_wait_done_sync_i_scndry_out_UNCONNECTED,
      scndry_rst_n => maxfrm_wait_done_sync_i_i_1_n_0,
      scndry_vect_out(1 downto 0) => NLW_maxfrm_wait_done_sync_i_scndry_vect_out_UNCONNECTED(1 downto 0)
    );
maxfrm_wait_done_sync_i_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => core_rst,
      O => maxfrm_wait_done_sync_i_i_1_n_0
    );
\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0\,
      O => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0\,
      I1 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14]\,
      I2 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4]\,
      I3 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11]\,
      I4 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5]\,
      I5 => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0\,
      O => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count[15]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEF"
    )
        port map (
      I0 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12]\,
      I1 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8]\,
      I2 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1]\,
      I3 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10]\,
      O => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count[15]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0]\,
      I1 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9]\,
      I2 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6]\,
      I3 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13]\,
      I4 => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0\,
      O => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count[15]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15]\,
      I1 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3]\,
      I2 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7]\,
      I3 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2]\,
      O => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count[3]_i_2\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0]\,
      O => \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(0),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(10),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(11),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0\,
      CO(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0\,
      CO(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_1\,
      CO(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_2\,
      CO(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => p_2_in(11 downto 8),
      S(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11]\,
      S(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10]\,
      S(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9]\,
      S(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8]\
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(12),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(13),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(14),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(15),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3\: unisim.vcomponents.CARRY4
     port map (
      CI => \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0\,
      CO(3) => \NLW_two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_1\,
      CO(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_2\,
      CO(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => p_2_in(15 downto 12),
      S(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15]\,
      S(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14]\,
      S(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13]\,
      S(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12]\
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(1),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(2),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(3),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0\,
      CO(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_1\,
      CO(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_2\,
      CO(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 1) => B"000",
      DI(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0]\,
      O(3 downto 0) => p_2_in(3 downto 0),
      S(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3]\,
      S(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2]\,
      S(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1]\,
      S(0) => \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0\
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(4),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(5),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(6),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(7),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0\,
      CO(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0\,
      CO(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_1\,
      CO(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_2\,
      CO(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => p_2_in(7 downto 4),
      S(3) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7]\,
      S(2) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6]\,
      S(1) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5]\,
      S(0) => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4]\
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(8),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.hs_wait_count_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0\,
      D => p_2_in(9),
      Q => \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9]\,
      R => \two_lane_hs_rx_timeout.hs_wait_count\(0)
    );
\two_lane_hs_rx_timeout.maxfrm_wait_done_reg\: unisim.vcomponents.FDRE
     port map (
      C => rx_div4_clk,
      CE => '1',
      D => \gen_rx_data_lane[0].rx_data_lane_inst_n_35\,
      Q => maxfrm_wait_done,
      R => '0'
    );
u_rx_support_rst_logic: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic
     port map (
      cl_status_reg_bit_0 => cl_status_reg_bit_0,
      core_clk => core_clk,
      core_rst => core_rst,
      \en_cl_init_to_blk.cl_init_done_coreclk_reg\ => \^init_done\,
      \out\ => system_rst_byteclk_w,
      p_5_in => p_5_in,
      \s_level_out_bus_d3_reg[1]\(0) => \^dphy_en_out\,
      \s_level_out_bus_d6_reg[0]\ => system_rst_w,
      stopstate0 => stopstate0,
      system_rst_in => system_rst_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_bd_ca02_phy_0_support is
  port (
    system_rst_out : out STD_LOGIC;
    init_done : out STD_LOGIC;
    dl0_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidhs : out STD_LOGIC;
    dl0_rxactivehs : out STD_LOGIC;
    dl0_rxsynchs : out STD_LOGIC;
    dl0_stopstate : out STD_LOGIC;
    dl0_errsoths : out STD_LOGIC;
    dl0_errsotsynchs : out STD_LOGIC;
    dl1_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidhs : out STD_LOGIC;
    dl1_rxactivehs : out STD_LOGIC;
    dl1_rxsynchs : out STD_LOGIC;
    dl1_stopstate : out STD_LOGIC;
    dl1_errsoths : out STD_LOGIC;
    dl1_errsotsynchs : out STD_LOGIC;
    cl_rxclkactivehs : out STD_LOGIC;
    cl_stopstate : out STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rvalid : out STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    rxbyteclkhs : out STD_LOGIC;
    dlyctrl_rdy_out : out STD_LOGIC;
    core_rst : in STD_LOGIC;
    core_clk : in STD_LOGIC;
    cl_enable : in STD_LOGIC;
    data_lp_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_lp_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 );
    clk_lp_rxp : in STD_LOGIC;
    clk_lp_rxn : in STD_LOGIC;
    s_axi_aclk : in STD_LOGIC;
    s_axi_aresetn : in STD_LOGIC;
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axi_awvalid : in STD_LOGIC;
    s_axi_araddr : in STD_LOGIC_VECTOR ( 4 downto 0 );
    s_axi_arvalid : in STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wvalid : in STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    data_hs_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_hs_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 );
    clk_hs_rxp : in STD_LOGIC;
    clk_hs_rxn : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_bd_ca02_phy_0_support : entity is "bd_ca02_phy_0_support";
end bd_ca02_phy_0_bd_ca02_phy_0_support;

architecture STRUCTURE of bd_ca02_phy_0_bd_ca02_phy_0_support is
  signal cl_enable_sync : STD_LOGIC;
  signal core_rst_coreclk_sync : STD_LOGIC;
  signal data_in_to_device_w : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal dphy_en_w : STD_LOGIC;
  signal dphy_srst_w : STD_LOGIC;
  signal \^rxbyteclkhs\ : STD_LOGIC;
  signal \^system_rst_out\ : STD_LOGIC;
  signal \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_done_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_pass_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_pass_in_rst_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_idelay_tap_val_out_UNCONNECTED\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \NLW_slave_rx.cl_enable_sync_support_i_prmry_ack_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.cl_enable_sync_support_i_scndry_vect_out_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_cl_rxulpsclknot_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_cl_ulpsactivenot_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_core_ref_clk_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_errcontrol_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_erresc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_errsyncesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_rxclkesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_rxlpdtesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_rxulpsesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_rxvalidesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_ulpsactivenot_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_errcontrol_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_erresc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_errsyncesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_rxclkesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_rxlpdtesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_rxulpsesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_rxvalidesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_ulpsactivenot_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_errcontrol_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_erresc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_errsoths_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_errsotsynchs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_errsyncesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxactivehs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxclkesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxlpdtesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxsynchs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxulpsesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidhs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_stopstate_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_ulpsactivenot_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_errcontrol_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_erresc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_errsoths_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_errsotsynchs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_errsyncesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxactivehs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxclkesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxlpdtesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxsynchs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxulpsesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidesc_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidhs_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_stopstate_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_ulpsactivenot_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_idelay_load_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_phy_rst_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_reg_cal_start_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_cl_disable_ibuf_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_cl_en_hs_lpn_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_clk_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_en_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_disable_ibuf_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_en_hs_lpn_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_clk_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_en_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_disable_ibuf_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_en_hs_lpn_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_clk_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_en_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_disable_ibuf_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_en_hs_lpn_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_clk_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_en_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_disable_ibuf_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_en_hs_lpn_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_clk_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_en_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_sys_rst_byteclk_out_UNCONNECTED\ : STD_LOGIC;
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_rxdataesc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl0_rxtriggeresc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_rxdataesc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl1_rxtriggeresc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxdataesc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxdatahs_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl2_rxtriggeresc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxdataesc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxdatahs_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_dl3_rxtriggeresc_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_idelay_tap_value_UNCONNECTED\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_s_axi_bresp_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_s_axi_rresp_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_slave_rx.dphy_rx_fab_top_tap_comp_res_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_slave_rx.u_rx_rst_logic_7series_system_rst_byteclk_UNCONNECTED\ : STD_LOGIC;
  attribute CAL_CHECK_TAP_MAX : string;
  attribute CAL_CHECK_TAP_MAX of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "5'b11111";
  attribute CAL_CHECK_TAP_MIN : string;
  attribute CAL_CHECK_TAP_MIN of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "5'b00001";
  attribute CAL_CHECK_TAP_MIN_INT : string;
  attribute CAL_CHECK_TAP_MIN_INT of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "5'b00000";
  attribute C_CAL_MODE : string;
  attribute C_CAL_MODE of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "FIXED";
  attribute C_DPHY_LANES : integer;
  attribute C_DPHY_LANES of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is 2;
  attribute C_IDLY_GRP_NAME : string;
  attribute C_IDLY_GRP_NAME of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "mipi_csi2rx_idly_group";
  attribute C_IDLY_TAP : integer;
  attribute C_IDLY_TAP of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is 1;
  attribute C_SHARE_IDLYCTRL : string;
  attribute C_SHARE_IDLYCTRL of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "true";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "yes";
  attribute GEN_LD : string;
  attribute GEN_LD of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "2'b01";
  attribute GEN_PASS_RST : string;
  attribute GEN_PASS_RST of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "2'b10";
  attribute IDLE : string;
  attribute IDLE of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "2'b00";
  attribute ISERDES_IOBDELAY : string;
  attribute ISERDES_IOBDELAY of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "BOTH";
  attribute MTBF_SYNC_STAGES : integer;
  attribute MTBF_SYNC_STAGES of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is 3;
  attribute PASS_IN_WAIT_TIME : string;
  attribute PASS_IN_WAIT_TIME of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "32'b00000000000000010000000000000000";
  attribute PASS_RST_WAIT_TIME : string;
  attribute PASS_RST_WAIT_TIME of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "6'b101000";
  attribute PASS_WAIT : string;
  attribute PASS_WAIT of \slave_rx.bd_ca02_phy_0_rx_ioi_i\ : label is "2'b11";
  attribute DowngradeIPIdentifiedWarnings of \slave_rx.cl_enable_sync_support_i\ : label is "yes";
  attribute c_cdc_type : string;
  attribute c_cdc_type of \slave_rx.cl_enable_sync_support_i\ : label is "2'b01";
  attribute c_flop_input : string;
  attribute c_flop_input of \slave_rx.cl_enable_sync_support_i\ : label is "1'b0";
  attribute c_mtbf_stages : integer;
  attribute c_mtbf_stages of \slave_rx.cl_enable_sync_support_i\ : label is 3;
  attribute c_reset_state : string;
  attribute c_reset_state of \slave_rx.cl_enable_sync_support_i\ : label is "1'b1";
  attribute c_single_bit : string;
  attribute c_single_bit of \slave_rx.cl_enable_sync_support_i\ : label is "1'b1";
  attribute c_vector_width : string;
  attribute c_vector_width of \slave_rx.cl_enable_sync_support_i\ : label is "6'b000010";
  attribute BYTE_UI : integer;
  attribute BYTE_UI of \slave_rx.dphy_rx_fab_top\ : label is 10;
  attribute CL_ACTIVE_BYTE_UI : integer;
  attribute CL_ACTIVE_BYTE_UI of \slave_rx.dphy_rx_fab_top\ : label is 1;
  attribute C_CLK_PREPARE_VAL : integer;
  attribute C_CLK_PREPARE_VAL of \slave_rx.dphy_rx_fab_top\ : label is 40;
  attribute C_CLK_SETTLE_VAL : integer;
  attribute C_CLK_SETTLE_VAL of \slave_rx.dphy_rx_fab_top\ : label is 95;
  attribute C_CLK_TERMEN_VAL : integer;
  attribute C_CLK_TERMEN_VAL of \slave_rx.dphy_rx_fab_top\ : label is 38;
  attribute C_CLK_ZERO_VAL : integer;
  attribute C_CLK_ZERO_VAL of \slave_rx.dphy_rx_fab_top\ : label is 205;
  attribute C_DPHY_LANES of \slave_rx.dphy_rx_fab_top\ : label is 2;
  attribute C_DPHY_MODE : string;
  attribute C_DPHY_MODE of \slave_rx.dphy_rx_fab_top\ : label is "SLAVE";
  attribute C_D_TERMEN_VAL : integer;
  attribute C_D_TERMEN_VAL of \slave_rx.dphy_rx_fab_top\ : label is 35;
  attribute C_EN_DEBUG_REGS : integer;
  attribute C_EN_DEBUG_REGS of \slave_rx.dphy_rx_fab_top\ : label is 0;
  attribute C_EN_REGISTER : integer;
  attribute C_EN_REGISTER of \slave_rx.dphy_rx_fab_top\ : label is 1;
  attribute C_EN_TIMEOUT_REGS : integer;
  attribute C_EN_TIMEOUT_REGS of \slave_rx.dphy_rx_fab_top\ : label is 0;
  attribute C_EN_ULPS_WAKEUP_CNT : string;
  attribute C_EN_ULPS_WAKEUP_CNT of \slave_rx.dphy_rx_fab_top\ : label is "FALSE";
  attribute C_ESC_TIMEOUT : integer;
  attribute C_ESC_TIMEOUT of \slave_rx.dphy_rx_fab_top\ : label is 25600;
  attribute C_HS_LINE_RATE : integer;
  attribute C_HS_LINE_RATE of \slave_rx.dphy_rx_fab_top\ : label is 800;
  attribute C_HS_RX_TIMEOUT : integer;
  attribute C_HS_RX_TIMEOUT of \slave_rx.dphy_rx_fab_top\ : label is 65541;
  attribute C_HS_SETTLE_VAL : integer;
  attribute C_HS_SETTLE_VAL of \slave_rx.dphy_rx_fab_top\ : label is 147;
  attribute C_HS_SKIP_VAL : integer;
  attribute C_HS_SKIP_VAL of \slave_rx.dphy_rx_fab_top\ : label is 40;
  attribute C_INIT : integer;
  attribute C_INIT of \slave_rx.dphy_rx_fab_top\ : label is 100000;
  attribute C_IS_7SERIES : string;
  attribute C_IS_7SERIES of \slave_rx.dphy_rx_fab_top\ : label is "TRUE";
  attribute C_LPX_PERIOD : integer;
  attribute C_LPX_PERIOD of \slave_rx.dphy_rx_fab_top\ : label is 50;
  attribute C_STABLE_CLK_PERIOD : string;
  attribute C_STABLE_CLK_PERIOD of \slave_rx.dphy_rx_fab_top\ : label is "5.000000";
  attribute C_WAKEUP : integer;
  attribute C_WAKEUP of \slave_rx.dphy_rx_fab_top\ : label is 1000000;
  attribute DPHY_PRESET : string;
  attribute DPHY_PRESET of \slave_rx.dphy_rx_fab_top\ : label is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings of \slave_rx.dphy_rx_fab_top\ : label is "yes";
  attribute LPX_PERIOD_MIN : integer;
  attribute LPX_PERIOD_MIN of \slave_rx.dphy_rx_fab_top\ : label is 25;
  attribute LP_STATE_CNT : integer;
  attribute LP_STATE_CNT of \slave_rx.dphy_rx_fab_top\ : label is 2;
  attribute MTBF_SYNC_STAGES of \slave_rx.dphy_rx_fab_top\ : label is 3;
  attribute SUPPORT_LEVEL : integer;
  attribute SUPPORT_LEVEL of \slave_rx.dphy_rx_fab_top\ : label is 1;
  attribute UI10_VAL : integer;
  attribute UI10_VAL of \slave_rx.dphy_rx_fab_top\ : label is 12;
  attribute UI_VAL : integer;
  attribute UI_VAL of \slave_rx.dphy_rx_fab_top\ : label is 1250;
  attribute c_init_val : string;
  attribute c_init_val of \slave_rx.u_core_rst_coreclk_sync_rx_i\ : label is "1'b1";
  attribute c_mtbf_stages_string : string;
  attribute c_mtbf_stages_string of \slave_rx.u_core_rst_coreclk_sync_rx_i\ : label is "5'b00010";
  attribute DPHY_PRESET of \slave_rx.u_rx_rst_logic_7series\ : label is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings of \slave_rx.u_rx_rst_logic_7series\ : label is "yes";
  attribute MTBF_SYNC_STAGES of \slave_rx.u_rx_rst_logic_7series\ : label is 3;
  attribute RESET_FSM_DONE : string;
  attribute RESET_FSM_DONE of \slave_rx.u_rx_rst_logic_7series\ : label is "2'b10";
  attribute RST_BEGIN : string;
  attribute RST_BEGIN of \slave_rx.u_rx_rst_logic_7series\ : label is "2'b00";
  attribute STABLE_CLK_PERIOD : string;
  attribute STABLE_CLK_PERIOD of \slave_rx.u_rx_rst_logic_7series\ : label is "5.000000";
  attribute WAIT_FOR_ENABLE : string;
  attribute WAIT_FOR_ENABLE of \slave_rx.u_rx_rst_logic_7series\ : label is "2'b01";
begin
  rxbyteclkhs <= \^rxbyteclkhs\;
  system_rst_out <= \^system_rst_out\;
\slave_rx.bd_ca02_phy_0_rx_ioi_i\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series
     port map (
      cal_done => \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_done_UNCONNECTED\,
      cal_pass => \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_pass_UNCONNECTED\,
      cal_start => '0',
      clk_hs_rxn => clk_hs_rxn,
      clk_hs_rxp => clk_hs_rxp,
      clk_reset => '0',
      core_clk => core_clk,
      data_hs_rxn(1 downto 0) => data_hs_rxn(1 downto 0),
      data_hs_rxp(1 downto 0) => data_hs_rxp(1 downto 0),
      data_in_to_device(15 downto 0) => data_in_to_device_w(15 downto 0),
      div4_clk_out => \^rxbyteclkhs\,
      dlyctrl_rdy => dlyctrl_rdy_out,
      idelay_tap_val_out(4 downto 0) => \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_idelay_tap_val_out_UNCONNECTED\(4 downto 0),
      io_reset => '0',
      pass_in_rst => \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_pass_in_rst_UNCONNECTED\,
      rx_clk_active => '0',
      system_reset => \^system_rst_out\,
      tap_val_pass_in(3 downto 0) => B"0000"
    );
\slave_rx.cl_enable_sync_support_i\: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1\
     port map (
      prmry_ack => \NLW_slave_rx.cl_enable_sync_support_i_prmry_ack_UNCONNECTED\,
      prmry_aclk => '0',
      prmry_in => cl_enable,
      prmry_rst_n => '1',
      prmry_vect_in(1 downto 0) => B"00",
      scndry_aclk => core_clk,
      scndry_out => cl_enable_sync,
      scndry_rst_n => '0',
      scndry_vect_out(1 downto 0) => \NLW_slave_rx.cl_enable_sync_support_i_scndry_vect_out_UNCONNECTED\(1 downto 0)
    );
\slave_rx.dphy_rx_fab_top\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top
     port map (
      cal_done => '0',
      cal_pass => '0',
      cl_enable => cl_enable_sync,
      cl_rxclkactivehs => cl_rxclkactivehs,
      cl_rxulpsclknot => \NLW_slave_rx.dphy_rx_fab_top_cl_rxulpsclknot_UNCONNECTED\,
      cl_stopstate => cl_stopstate,
      cl_ulpsactivenot => \NLW_slave_rx.dphy_rx_fab_top_cl_ulpsactivenot_UNCONNECTED\,
      clk_200m => '0',
      core_clk => core_clk,
      core_ref_clk => \NLW_slave_rx.dphy_rx_fab_top_core_ref_clk_UNCONNECTED\,
      core_rst => core_rst_coreclk_sync,
      dl0_enable => '0',
      dl0_errcontrol => \NLW_slave_rx.dphy_rx_fab_top_dl0_errcontrol_UNCONNECTED\,
      dl0_erresc => \NLW_slave_rx.dphy_rx_fab_top_dl0_erresc_UNCONNECTED\,
      dl0_errsoths => dl0_errsoths,
      dl0_errsotsynchs => dl0_errsotsynchs,
      dl0_errsyncesc => \NLW_slave_rx.dphy_rx_fab_top_dl0_errsyncesc_UNCONNECTED\,
      dl0_forcerxmode => '0',
      dl0_rxactivehs => dl0_rxactivehs,
      dl0_rxclkesc => \NLW_slave_rx.dphy_rx_fab_top_dl0_rxclkesc_UNCONNECTED\,
      dl0_rxdataesc(7 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl0_rxdataesc_UNCONNECTED\(7 downto 0),
      dl0_rxdatahs(7 downto 0) => dl0_rxdatahs(7 downto 0),
      dl0_rxlpdtesc => \NLW_slave_rx.dphy_rx_fab_top_dl0_rxlpdtesc_UNCONNECTED\,
      dl0_rxsynchs => dl0_rxsynchs,
      dl0_rxtriggeresc(3 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl0_rxtriggeresc_UNCONNECTED\(3 downto 0),
      dl0_rxulpsesc => \NLW_slave_rx.dphy_rx_fab_top_dl0_rxulpsesc_UNCONNECTED\,
      dl0_rxvalidesc => \NLW_slave_rx.dphy_rx_fab_top_dl0_rxvalidesc_UNCONNECTED\,
      dl0_rxvalidhs => dl0_rxvalidhs,
      dl0_stopstate => dl0_stopstate,
      dl0_ulpsactivenot => \NLW_slave_rx.dphy_rx_fab_top_dl0_ulpsactivenot_UNCONNECTED\,
      dl1_enable => '0',
      dl1_errcontrol => \NLW_slave_rx.dphy_rx_fab_top_dl1_errcontrol_UNCONNECTED\,
      dl1_erresc => \NLW_slave_rx.dphy_rx_fab_top_dl1_erresc_UNCONNECTED\,
      dl1_errsoths => dl1_errsoths,
      dl1_errsotsynchs => dl1_errsotsynchs,
      dl1_errsyncesc => \NLW_slave_rx.dphy_rx_fab_top_dl1_errsyncesc_UNCONNECTED\,
      dl1_forcerxmode => '0',
      dl1_rxactivehs => dl1_rxactivehs,
      dl1_rxclkesc => \NLW_slave_rx.dphy_rx_fab_top_dl1_rxclkesc_UNCONNECTED\,
      dl1_rxdataesc(7 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl1_rxdataesc_UNCONNECTED\(7 downto 0),
      dl1_rxdatahs(7 downto 0) => dl1_rxdatahs(7 downto 0),
      dl1_rxlpdtesc => \NLW_slave_rx.dphy_rx_fab_top_dl1_rxlpdtesc_UNCONNECTED\,
      dl1_rxsynchs => dl1_rxsynchs,
      dl1_rxtriggeresc(3 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl1_rxtriggeresc_UNCONNECTED\(3 downto 0),
      dl1_rxulpsesc => \NLW_slave_rx.dphy_rx_fab_top_dl1_rxulpsesc_UNCONNECTED\,
      dl1_rxvalidesc => \NLW_slave_rx.dphy_rx_fab_top_dl1_rxvalidesc_UNCONNECTED\,
      dl1_rxvalidhs => dl1_rxvalidhs,
      dl1_stopstate => dl1_stopstate,
      dl1_ulpsactivenot => \NLW_slave_rx.dphy_rx_fab_top_dl1_ulpsactivenot_UNCONNECTED\,
      dl2_enable => '0',
      dl2_errcontrol => \NLW_slave_rx.dphy_rx_fab_top_dl2_errcontrol_UNCONNECTED\,
      dl2_erresc => \NLW_slave_rx.dphy_rx_fab_top_dl2_erresc_UNCONNECTED\,
      dl2_errsoths => \NLW_slave_rx.dphy_rx_fab_top_dl2_errsoths_UNCONNECTED\,
      dl2_errsotsynchs => \NLW_slave_rx.dphy_rx_fab_top_dl2_errsotsynchs_UNCONNECTED\,
      dl2_errsyncesc => \NLW_slave_rx.dphy_rx_fab_top_dl2_errsyncesc_UNCONNECTED\,
      dl2_forcerxmode => '0',
      dl2_rxactivehs => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxactivehs_UNCONNECTED\,
      dl2_rxclkesc => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxclkesc_UNCONNECTED\,
      dl2_rxdataesc(7 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxdataesc_UNCONNECTED\(7 downto 0),
      dl2_rxdatahs(7 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxdatahs_UNCONNECTED\(7 downto 0),
      dl2_rxlpdtesc => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxlpdtesc_UNCONNECTED\,
      dl2_rxsynchs => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxsynchs_UNCONNECTED\,
      dl2_rxtriggeresc(3 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxtriggeresc_UNCONNECTED\(3 downto 0),
      dl2_rxulpsesc => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxulpsesc_UNCONNECTED\,
      dl2_rxvalidesc => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidesc_UNCONNECTED\,
      dl2_rxvalidhs => \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidhs_UNCONNECTED\,
      dl2_stopstate => \NLW_slave_rx.dphy_rx_fab_top_dl2_stopstate_UNCONNECTED\,
      dl2_ulpsactivenot => \NLW_slave_rx.dphy_rx_fab_top_dl2_ulpsactivenot_UNCONNECTED\,
      dl3_enable => '0',
      dl3_errcontrol => \NLW_slave_rx.dphy_rx_fab_top_dl3_errcontrol_UNCONNECTED\,
      dl3_erresc => \NLW_slave_rx.dphy_rx_fab_top_dl3_erresc_UNCONNECTED\,
      dl3_errsoths => \NLW_slave_rx.dphy_rx_fab_top_dl3_errsoths_UNCONNECTED\,
      dl3_errsotsynchs => \NLW_slave_rx.dphy_rx_fab_top_dl3_errsotsynchs_UNCONNECTED\,
      dl3_errsyncesc => \NLW_slave_rx.dphy_rx_fab_top_dl3_errsyncesc_UNCONNECTED\,
      dl3_forcerxmode => '0',
      dl3_rxactivehs => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxactivehs_UNCONNECTED\,
      dl3_rxclkesc => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxclkesc_UNCONNECTED\,
      dl3_rxdataesc(7 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxdataesc_UNCONNECTED\(7 downto 0),
      dl3_rxdatahs(7 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxdatahs_UNCONNECTED\(7 downto 0),
      dl3_rxlpdtesc => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxlpdtesc_UNCONNECTED\,
      dl3_rxsynchs => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxsynchs_UNCONNECTED\,
      dl3_rxtriggeresc(3 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxtriggeresc_UNCONNECTED\(3 downto 0),
      dl3_rxulpsesc => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxulpsesc_UNCONNECTED\,
      dl3_rxvalidesc => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidesc_UNCONNECTED\,
      dl3_rxvalidhs => \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidhs_UNCONNECTED\,
      dl3_stopstate => \NLW_slave_rx.dphy_rx_fab_top_dl3_stopstate_UNCONNECTED\,
      dl3_ulpsactivenot => \NLW_slave_rx.dphy_rx_fab_top_dl3_ulpsactivenot_UNCONNECTED\,
      dly_ctrl_rdy => '0',
      dphy_en_out => dphy_en_w,
      dphy_srst_out => dphy_srst_w,
      idelay_load => \NLW_slave_rx.dphy_rx_fab_top_idelay_load_UNCONNECTED\,
      idelay_ready => '0',
      idelay_tap_value(8 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_idelay_tap_value_UNCONNECTED\(8 downto 0),
      idly_tap_val(4 downto 0) => B"00000",
      init_done => init_done,
      phy_ready => '0',
      phy_rst => \NLW_slave_rx.dphy_rx_fab_top_phy_rst_UNCONNECTED\,
      reg_cal_start => \NLW_slave_rx.dphy_rx_fab_top_reg_cal_start_UNCONNECTED\,
      rx_cl_disable_ibuf => \NLW_slave_rx.dphy_rx_fab_top_rx_cl_disable_ibuf_UNCONNECTED\,
      rx_cl_en_hs_lpn => \NLW_slave_rx.dphy_rx_fab_top_rx_cl_en_hs_lpn_UNCONNECTED\,
      rx_cl_fifo_empty => '0',
      rx_cl_fifo_rd_clk => \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_clk_UNCONNECTED\,
      rx_cl_fifo_rd_en => \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_en_UNCONNECTED\,
      rx_cl_hs_dp(7 downto 0) => B"00000000",
      rx_cl_lp_dn => clk_lp_rxn,
      rx_cl_lp_dp => clk_lp_rxp,
      rx_div4_clk => \^rxbyteclkhs\,
      rx_dl0_disable_ibuf => \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_disable_ibuf_UNCONNECTED\,
      rx_dl0_en_hs_lpn => \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_en_hs_lpn_UNCONNECTED\,
      rx_dl0_fifo_empty => '0',
      rx_dl0_fifo_rd_clk => \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_clk_UNCONNECTED\,
      rx_dl0_fifo_rd_en => \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_en_UNCONNECTED\,
      rx_dl0_hs_dp(7 downto 0) => data_in_to_device_w(7 downto 0),
      rx_dl0_lp_dn => data_lp_rxn(0),
      rx_dl0_lp_dp => data_lp_rxp(0),
      rx_dl1_disable_ibuf => \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_disable_ibuf_UNCONNECTED\,
      rx_dl1_en_hs_lpn => \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_en_hs_lpn_UNCONNECTED\,
      rx_dl1_fifo_empty => '0',
      rx_dl1_fifo_rd_clk => \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_clk_UNCONNECTED\,
      rx_dl1_fifo_rd_en => \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_en_UNCONNECTED\,
      rx_dl1_hs_dp(7 downto 0) => data_in_to_device_w(15 downto 8),
      rx_dl1_lp_dn => data_lp_rxn(1),
      rx_dl1_lp_dp => data_lp_rxp(1),
      rx_dl2_disable_ibuf => \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_disable_ibuf_UNCONNECTED\,
      rx_dl2_en_hs_lpn => \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_en_hs_lpn_UNCONNECTED\,
      rx_dl2_fifo_empty => '0',
      rx_dl2_fifo_rd_clk => \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_clk_UNCONNECTED\,
      rx_dl2_fifo_rd_en => \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_en_UNCONNECTED\,
      rx_dl2_hs_dp(7 downto 0) => B"00000000",
      rx_dl2_lp_dn => '0',
      rx_dl2_lp_dp => '0',
      rx_dl3_disable_ibuf => \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_disable_ibuf_UNCONNECTED\,
      rx_dl3_en_hs_lpn => \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_en_hs_lpn_UNCONNECTED\,
      rx_dl3_fifo_empty => '0',
      rx_dl3_fifo_rd_clk => \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_clk_UNCONNECTED\,
      rx_dl3_fifo_rd_en => \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_en_UNCONNECTED\,
      rx_dl3_hs_dp(7 downto 0) => B"00000000",
      rx_dl3_lp_dn => '0',
      rx_dl3_lp_dp => '0',
      s_axi_aclk => s_axi_aclk,
      s_axi_araddr(6 downto 2) => s_axi_araddr(4 downto 0),
      s_axi_araddr(1 downto 0) => B"00",
      s_axi_aresetn => s_axi_aresetn,
      s_axi_arready => s_axi_arready,
      s_axi_arvalid => s_axi_arvalid,
      s_axi_awaddr(6 downto 2) => s_axi_awaddr(4 downto 0),
      s_axi_awaddr(1 downto 0) => B"00",
      s_axi_awready => s_axi_awready,
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bready => s_axi_bready,
      s_axi_bresp(1 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_s_axi_bresp_UNCONNECTED\(1 downto 0),
      s_axi_bvalid => s_axi_bvalid,
      s_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      s_axi_rready => s_axi_rready,
      s_axi_rresp(1 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_s_axi_rresp_UNCONNECTED\(1 downto 0),
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wdata(31 downto 0) => s_axi_wdata(31 downto 0),
      s_axi_wready => s_axi_wready,
      s_axi_wstrb(3 downto 0) => B"0000",
      s_axi_wvalid => s_axi_wvalid,
      sys_rst_byteclk_out => \NLW_slave_rx.dphy_rx_fab_top_sys_rst_byteclk_out_UNCONNECTED\,
      system_rst_byteclk_in => '0',
      system_rst_in => \^system_rst_out\,
      system_rst_phybyteclk_in => '0',
      tap_comp_res(3 downto 0) => \NLW_slave_rx.dphy_rx_fab_top_tap_comp_res_UNCONNECTED\(3 downto 0),
      tap_comp_rst => '0'
    );
\slave_rx.u_core_rst_coreclk_sync_rx_i\: entity work.\bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2\
     port map (
      prmry_in => core_rst,
      scndry_aclk => core_clk,
      scndry_out => core_rst_coreclk_sync
    );
\slave_rx.u_rx_rst_logic_7series\: entity work.bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series
     port map (
      cl_enable => cl_enable_sync,
      core_clk => core_clk,
      core_rst => core_rst_coreclk_sync,
      dphyen => dphy_en_w,
      srst => dphy_srst_w,
      system_rst => \^system_rst_out\,
      system_rst_byteclk => \NLW_slave_rx.u_rx_rst_logic_7series_system_rst_byteclk_UNCONNECTED\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0_bd_ca02_phy_0_core is
  port (
    core_clk : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    rxbyteclkhs : out STD_LOGIC;
    dlyctrl_rdy_out : out STD_LOGIC;
    system_rst_out : out STD_LOGIC;
    init_done : out STD_LOGIC;
    cl_rxclkactivehs : out STD_LOGIC;
    cl_stopstate : out STD_LOGIC;
    cl_enable : in STD_LOGIC;
    cl_rxulpsclknot : out STD_LOGIC;
    cl_ulpsactivenot : out STD_LOGIC;
    dl0_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidhs : out STD_LOGIC;
    dl0_rxactivehs : out STD_LOGIC;
    dl0_rxsynchs : out STD_LOGIC;
    dl0_forcerxmode : in STD_LOGIC;
    dl0_stopstate : out STD_LOGIC;
    dl0_enable : in STD_LOGIC;
    dl0_ulpsactivenot : out STD_LOGIC;
    dl0_rxclkesc : out STD_LOGIC;
    dl0_rxlpdtesc : out STD_LOGIC;
    dl0_rxulpsesc : out STD_LOGIC;
    dl0_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl0_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidesc : out STD_LOGIC;
    dl0_errsoths : out STD_LOGIC;
    dl0_errsotsynchs : out STD_LOGIC;
    dl0_erresc : out STD_LOGIC;
    dl0_errsyncesc : out STD_LOGIC;
    dl0_errcontrol : out STD_LOGIC;
    dl1_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidhs : out STD_LOGIC;
    dl1_rxactivehs : out STD_LOGIC;
    dl1_rxsynchs : out STD_LOGIC;
    dl1_forcerxmode : in STD_LOGIC;
    dl1_stopstate : out STD_LOGIC;
    dl1_enable : in STD_LOGIC;
    dl1_ulpsactivenot : out STD_LOGIC;
    dl1_rxclkesc : out STD_LOGIC;
    dl1_rxlpdtesc : out STD_LOGIC;
    dl1_rxulpsesc : out STD_LOGIC;
    dl1_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl1_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidesc : out STD_LOGIC;
    dl1_errsoths : out STD_LOGIC;
    dl1_errsotsynchs : out STD_LOGIC;
    dl1_erresc : out STD_LOGIC;
    dl1_errsyncesc : out STD_LOGIC;
    dl1_errcontrol : out STD_LOGIC;
    s_axi_aclk : in STD_LOGIC;
    s_axi_aresetn : in STD_LOGIC;
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_araddr : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    clk_hs_rxp : in STD_LOGIC;
    clk_hs_rxn : in STD_LOGIC;
    data_hs_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_hs_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 );
    clk_lp_rxp : in STD_LOGIC;
    clk_lp_rxn : in STD_LOGIC;
    data_lp_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_lp_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute C_CAL_MODE : string;
  attribute C_CAL_MODE of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "FIXED";
  attribute C_DIV4_CLK_PERIOD : string;
  attribute C_DIV4_CLK_PERIOD of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "10.000000";
  attribute C_DPHY_LANES : integer;
  attribute C_DPHY_LANES of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 2;
  attribute C_DPHY_MODE : string;
  attribute C_DPHY_MODE of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "SLAVE";
  attribute C_EN_DEBUG_REGS : integer;
  attribute C_EN_DEBUG_REGS of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 0;
  attribute C_EN_HS_OBUFTDS : string;
  attribute C_EN_HS_OBUFTDS of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "FALSE";
  attribute C_EN_REG_IF : integer;
  attribute C_EN_REG_IF of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 1;
  attribute C_EN_TIMEOUT_REGS : integer;
  attribute C_EN_TIMEOUT_REGS of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 0;
  attribute C_EN_ULPS_WAKEUP_CNT : string;
  attribute C_EN_ULPS_WAKEUP_CNT of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "FALSE";
  attribute C_ESC_CLK_PERIOD : string;
  attribute C_ESC_CLK_PERIOD of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "50.000000";
  attribute C_ESC_TIMEOUT : integer;
  attribute C_ESC_TIMEOUT of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 25600;
  attribute C_EXAMPLE_SIMULATION : string;
  attribute C_EXAMPLE_SIMULATION of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "false";
  attribute C_HS_LINE_RATE : integer;
  attribute C_HS_LINE_RATE of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 800;
  attribute C_HS_SETTLE_NS : integer;
  attribute C_HS_SETTLE_NS of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 147;
  attribute C_HS_TIMEOUT : integer;
  attribute C_HS_TIMEOUT of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 65541;
  attribute C_IDLY_TAP : integer;
  attribute C_IDLY_TAP of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 1;
  attribute C_INIT : integer;
  attribute C_INIT of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 100000;
  attribute C_IS_7SERIES : string;
  attribute C_IS_7SERIES of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "TRUE";
  attribute C_LPX_PERIOD : integer;
  attribute C_LPX_PERIOD of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 50;
  attribute C_STABLE_CLK_PERIOD : string;
  attribute C_STABLE_CLK_PERIOD of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "5.000000";
  attribute C_TXPLL_CLKIN_PERIOD : string;
  attribute C_TXPLL_CLKIN_PERIOD of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "8.000000";
  attribute C_USE_LANE0_TXREADYHS : string;
  attribute C_USE_LANE0_TXREADYHS of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "FALSE";
  attribute C_WAKEUP : integer;
  attribute C_WAKEUP of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 1000000;
  attribute DPHY_PRESET : string;
  attribute DPHY_PRESET of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "yes";
  attribute MTBF_SYNC_STAGES : integer;
  attribute MTBF_SYNC_STAGES of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 3;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is "bd_ca02_phy_0_core";
  attribute SUPPORT_LEVEL : integer;
  attribute SUPPORT_LEVEL of bd_ca02_phy_0_bd_ca02_phy_0_core : entity is 1;
end bd_ca02_phy_0_bd_ca02_phy_0_core;

architecture STRUCTURE of bd_ca02_phy_0_bd_ca02_phy_0_core is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
begin
  cl_rxulpsclknot <= \<const1>\;
  cl_ulpsactivenot <= \<const1>\;
  dl0_errcontrol <= \<const0>\;
  dl0_erresc <= \<const0>\;
  dl0_errsyncesc <= \<const0>\;
  dl0_rxclkesc <= \<const0>\;
  dl0_rxdataesc(7) <= \<const0>\;
  dl0_rxdataesc(6) <= \<const0>\;
  dl0_rxdataesc(5) <= \<const0>\;
  dl0_rxdataesc(4) <= \<const0>\;
  dl0_rxdataesc(3) <= \<const0>\;
  dl0_rxdataesc(2) <= \<const0>\;
  dl0_rxdataesc(1) <= \<const0>\;
  dl0_rxdataesc(0) <= \<const0>\;
  dl0_rxlpdtesc <= \<const0>\;
  dl0_rxtriggeresc(3) <= \<const0>\;
  dl0_rxtriggeresc(2) <= \<const0>\;
  dl0_rxtriggeresc(1) <= \<const0>\;
  dl0_rxtriggeresc(0) <= \<const0>\;
  dl0_rxulpsesc <= \<const0>\;
  dl0_rxvalidesc <= \<const0>\;
  dl0_ulpsactivenot <= \<const1>\;
  dl1_errcontrol <= \<const0>\;
  dl1_erresc <= \<const0>\;
  dl1_errsyncesc <= \<const0>\;
  dl1_rxclkesc <= \<const0>\;
  dl1_rxdataesc(7) <= \<const0>\;
  dl1_rxdataesc(6) <= \<const0>\;
  dl1_rxdataesc(5) <= \<const0>\;
  dl1_rxdataesc(4) <= \<const0>\;
  dl1_rxdataesc(3) <= \<const0>\;
  dl1_rxdataesc(2) <= \<const0>\;
  dl1_rxdataesc(1) <= \<const0>\;
  dl1_rxdataesc(0) <= \<const0>\;
  dl1_rxlpdtesc <= \<const0>\;
  dl1_rxtriggeresc(3) <= \<const0>\;
  dl1_rxtriggeresc(2) <= \<const0>\;
  dl1_rxtriggeresc(1) <= \<const0>\;
  dl1_rxtriggeresc(0) <= \<const0>\;
  dl1_rxulpsesc <= \<const0>\;
  dl1_rxvalidesc <= \<const0>\;
  dl1_ulpsactivenot <= \<const1>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
bd_ca02_phy_0_rx_support_i: entity work.bd_ca02_phy_0_bd_ca02_phy_0_support
     port map (
      cl_enable => cl_enable,
      cl_rxclkactivehs => cl_rxclkactivehs,
      cl_stopstate => cl_stopstate,
      clk_hs_rxn => clk_hs_rxn,
      clk_hs_rxp => clk_hs_rxp,
      clk_lp_rxn => clk_lp_rxn,
      clk_lp_rxp => clk_lp_rxp,
      core_clk => core_clk,
      core_rst => core_rst,
      data_hs_rxn(1 downto 0) => data_hs_rxn(1 downto 0),
      data_hs_rxp(1 downto 0) => data_hs_rxp(1 downto 0),
      data_lp_rxn(1 downto 0) => data_lp_rxn(1 downto 0),
      data_lp_rxp(1 downto 0) => data_lp_rxp(1 downto 0),
      dl0_errsoths => dl0_errsoths,
      dl0_errsotsynchs => dl0_errsotsynchs,
      dl0_rxactivehs => dl0_rxactivehs,
      dl0_rxdatahs(7 downto 0) => dl0_rxdatahs(7 downto 0),
      dl0_rxsynchs => dl0_rxsynchs,
      dl0_rxvalidhs => dl0_rxvalidhs,
      dl0_stopstate => dl0_stopstate,
      dl1_errsoths => dl1_errsoths,
      dl1_errsotsynchs => dl1_errsotsynchs,
      dl1_rxactivehs => dl1_rxactivehs,
      dl1_rxdatahs(7 downto 0) => dl1_rxdatahs(7 downto 0),
      dl1_rxsynchs => dl1_rxsynchs,
      dl1_rxvalidhs => dl1_rxvalidhs,
      dl1_stopstate => dl1_stopstate,
      dlyctrl_rdy_out => dlyctrl_rdy_out,
      init_done => init_done,
      rxbyteclkhs => rxbyteclkhs,
      s_axi_aclk => s_axi_aclk,
      s_axi_araddr(4 downto 0) => s_axi_araddr(6 downto 2),
      s_axi_aresetn => s_axi_aresetn,
      s_axi_arready => s_axi_arready,
      s_axi_arvalid => s_axi_arvalid,
      s_axi_awaddr(4 downto 0) => s_axi_awaddr(6 downto 2),
      s_axi_awready => s_axi_awready,
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bready => s_axi_bready,
      s_axi_bvalid => s_axi_bvalid,
      s_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      s_axi_rready => s_axi_rready,
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wdata(31 downto 0) => s_axi_wdata(31 downto 0),
      s_axi_wready => s_axi_wready,
      s_axi_wvalid => s_axi_wvalid,
      system_rst_out => system_rst_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity bd_ca02_phy_0 is
  port (
    core_clk : in STD_LOGIC;
    core_rst : in STD_LOGIC;
    dlyctrl_rdy_out : out STD_LOGIC;
    rxbyteclkhs : out STD_LOGIC;
    system_rst_out : out STD_LOGIC;
    init_done : out STD_LOGIC;
    cl_rxclkactivehs : out STD_LOGIC;
    cl_stopstate : out STD_LOGIC;
    cl_enable : in STD_LOGIC;
    cl_rxulpsclknot : out STD_LOGIC;
    cl_ulpsactivenot : out STD_LOGIC;
    dl0_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidhs : out STD_LOGIC;
    dl0_rxactivehs : out STD_LOGIC;
    dl0_rxsynchs : out STD_LOGIC;
    dl0_forcerxmode : in STD_LOGIC;
    dl0_stopstate : out STD_LOGIC;
    dl0_enable : in STD_LOGIC;
    dl0_ulpsactivenot : out STD_LOGIC;
    dl0_rxclkesc : out STD_LOGIC;
    dl0_rxlpdtesc : out STD_LOGIC;
    dl0_rxulpsesc : out STD_LOGIC;
    dl0_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl0_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl0_rxvalidesc : out STD_LOGIC;
    dl0_errsoths : out STD_LOGIC;
    dl0_errsotsynchs : out STD_LOGIC;
    dl0_erresc : out STD_LOGIC;
    dl0_errsyncesc : out STD_LOGIC;
    dl0_errcontrol : out STD_LOGIC;
    dl1_rxdatahs : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidhs : out STD_LOGIC;
    dl1_rxactivehs : out STD_LOGIC;
    dl1_rxsynchs : out STD_LOGIC;
    dl1_forcerxmode : in STD_LOGIC;
    dl1_stopstate : out STD_LOGIC;
    dl1_enable : in STD_LOGIC;
    dl1_ulpsactivenot : out STD_LOGIC;
    dl1_rxclkesc : out STD_LOGIC;
    dl1_rxlpdtesc : out STD_LOGIC;
    dl1_rxulpsesc : out STD_LOGIC;
    dl1_rxtriggeresc : out STD_LOGIC_VECTOR ( 3 downto 0 );
    dl1_rxdataesc : out STD_LOGIC_VECTOR ( 7 downto 0 );
    dl1_rxvalidesc : out STD_LOGIC;
    dl1_errsoths : out STD_LOGIC;
    dl1_errsotsynchs : out STD_LOGIC;
    dl1_erresc : out STD_LOGIC;
    dl1_errsyncesc : out STD_LOGIC;
    dl1_errcontrol : out STD_LOGIC;
    s_axi_aclk : in STD_LOGIC;
    s_axi_aresetn : in STD_LOGIC;
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_araddr : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_wdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axi_rdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    clk_hs_rxp : in STD_LOGIC;
    clk_hs_rxn : in STD_LOGIC;
    data_hs_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_hs_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 );
    clk_lp_rxp : in STD_LOGIC;
    clk_lp_rxn : in STD_LOGIC;
    data_lp_rxp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    data_lp_rxn : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of bd_ca02_phy_0 : entity is true;
  attribute C_CAL_MODE : string;
  attribute C_CAL_MODE of bd_ca02_phy_0 : entity is "FIXED";
  attribute C_DIV4_CLK_PERIOD : string;
  attribute C_DIV4_CLK_PERIOD of bd_ca02_phy_0 : entity is "10.000000";
  attribute C_DPHY_LANES : integer;
  attribute C_DPHY_LANES of bd_ca02_phy_0 : entity is 2;
  attribute C_DPHY_MODE : string;
  attribute C_DPHY_MODE of bd_ca02_phy_0 : entity is "SLAVE";
  attribute C_EN_DEBUG_REGS : integer;
  attribute C_EN_DEBUG_REGS of bd_ca02_phy_0 : entity is 0;
  attribute C_EN_REG_IF : integer;
  attribute C_EN_REG_IF of bd_ca02_phy_0 : entity is 1;
  attribute C_EN_TIMEOUT_REGS : integer;
  attribute C_EN_TIMEOUT_REGS of bd_ca02_phy_0 : entity is 0;
  attribute C_ESC_CLK_PERIOD : string;
  attribute C_ESC_CLK_PERIOD of bd_ca02_phy_0 : entity is "50.000000";
  attribute C_ESC_TIMEOUT : integer;
  attribute C_ESC_TIMEOUT of bd_ca02_phy_0 : entity is 25600;
  attribute C_EXAMPLE_SIMULATION : string;
  attribute C_EXAMPLE_SIMULATION of bd_ca02_phy_0 : entity is "false";
  attribute C_HS_LINE_RATE : integer;
  attribute C_HS_LINE_RATE of bd_ca02_phy_0 : entity is 800;
  attribute C_HS_TIMEOUT : integer;
  attribute C_HS_TIMEOUT of bd_ca02_phy_0 : entity is 65541;
  attribute C_IDLY_TAP : integer;
  attribute C_IDLY_TAP of bd_ca02_phy_0 : entity is 1;
  attribute C_INIT : integer;
  attribute C_INIT of bd_ca02_phy_0 : entity is 100000;
  attribute C_LPX_PERIOD : integer;
  attribute C_LPX_PERIOD of bd_ca02_phy_0 : entity is 50;
  attribute C_STABLE_CLK_PERIOD : string;
  attribute C_STABLE_CLK_PERIOD of bd_ca02_phy_0 : entity is "5.000000";
  attribute C_TXPLL_CLKIN_PERIOD : string;
  attribute C_TXPLL_CLKIN_PERIOD of bd_ca02_phy_0 : entity is "8.000000";
  attribute C_WAKEUP : integer;
  attribute C_WAKEUP of bd_ca02_phy_0 : entity is 1000000;
  attribute DPHY_PRESET : string;
  attribute DPHY_PRESET of bd_ca02_phy_0 : entity is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of bd_ca02_phy_0 : entity is "yes";
  attribute MTBF_SYNC_STAGES : integer;
  attribute MTBF_SYNC_STAGES of bd_ca02_phy_0 : entity is 3;
  attribute SUPPORT_LEVEL : integer;
  attribute SUPPORT_LEVEL of bd_ca02_phy_0 : entity is 1;
end bd_ca02_phy_0;

architecture STRUCTURE of bd_ca02_phy_0 is
  attribute C_CAL_MODE of inst : label is "FIXED";
  attribute C_DIV4_CLK_PERIOD of inst : label is "10.000000";
  attribute C_DPHY_LANES of inst : label is 2;
  attribute C_DPHY_MODE of inst : label is "SLAVE";
  attribute C_EN_DEBUG_REGS of inst : label is 0;
  attribute C_EN_HS_OBUFTDS : string;
  attribute C_EN_HS_OBUFTDS of inst : label is "FALSE";
  attribute C_EN_REG_IF of inst : label is 1;
  attribute C_EN_TIMEOUT_REGS of inst : label is 0;
  attribute C_EN_ULPS_WAKEUP_CNT : string;
  attribute C_EN_ULPS_WAKEUP_CNT of inst : label is "FALSE";
  attribute C_ESC_CLK_PERIOD of inst : label is "50.000000";
  attribute C_ESC_TIMEOUT of inst : label is 25600;
  attribute C_EXAMPLE_SIMULATION of inst : label is "false";
  attribute C_HS_LINE_RATE of inst : label is 800;
  attribute C_HS_SETTLE_NS : integer;
  attribute C_HS_SETTLE_NS of inst : label is 147;
  attribute C_HS_TIMEOUT of inst : label is 65541;
  attribute C_IDLY_TAP of inst : label is 1;
  attribute C_INIT of inst : label is 100000;
  attribute C_IS_7SERIES : string;
  attribute C_IS_7SERIES of inst : label is "TRUE";
  attribute C_LPX_PERIOD of inst : label is 50;
  attribute C_STABLE_CLK_PERIOD of inst : label is "5.000000";
  attribute C_TXPLL_CLKIN_PERIOD of inst : label is "8.000000";
  attribute C_USE_LANE0_TXREADYHS : string;
  attribute C_USE_LANE0_TXREADYHS of inst : label is "FALSE";
  attribute C_WAKEUP of inst : label is 1000000;
  attribute DPHY_PRESET of inst : label is "CSI2RX_XLNX";
  attribute DowngradeIPIdentifiedWarnings of inst : label is "yes";
  attribute MTBF_SYNC_STAGES of inst : label is 3;
  attribute SUPPORT_LEVEL of inst : label is 1;
begin
inst: entity work.bd_ca02_phy_0_bd_ca02_phy_0_core
     port map (
      cl_enable => cl_enable,
      cl_rxclkactivehs => cl_rxclkactivehs,
      cl_rxulpsclknot => cl_rxulpsclknot,
      cl_stopstate => cl_stopstate,
      cl_ulpsactivenot => cl_ulpsactivenot,
      clk_hs_rxn => clk_hs_rxn,
      clk_hs_rxp => clk_hs_rxp,
      clk_lp_rxn => clk_lp_rxn,
      clk_lp_rxp => clk_lp_rxp,
      core_clk => core_clk,
      core_rst => core_rst,
      data_hs_rxn(1 downto 0) => data_hs_rxn(1 downto 0),
      data_hs_rxp(1 downto 0) => data_hs_rxp(1 downto 0),
      data_lp_rxn(1 downto 0) => data_lp_rxn(1 downto 0),
      data_lp_rxp(1 downto 0) => data_lp_rxp(1 downto 0),
      dl0_enable => dl0_enable,
      dl0_errcontrol => dl0_errcontrol,
      dl0_erresc => dl0_erresc,
      dl0_errsoths => dl0_errsoths,
      dl0_errsotsynchs => dl0_errsotsynchs,
      dl0_errsyncesc => dl0_errsyncesc,
      dl0_forcerxmode => dl0_forcerxmode,
      dl0_rxactivehs => dl0_rxactivehs,
      dl0_rxclkesc => dl0_rxclkesc,
      dl0_rxdataesc(7 downto 0) => dl0_rxdataesc(7 downto 0),
      dl0_rxdatahs(7 downto 0) => dl0_rxdatahs(7 downto 0),
      dl0_rxlpdtesc => dl0_rxlpdtesc,
      dl0_rxsynchs => dl0_rxsynchs,
      dl0_rxtriggeresc(3 downto 0) => dl0_rxtriggeresc(3 downto 0),
      dl0_rxulpsesc => dl0_rxulpsesc,
      dl0_rxvalidesc => dl0_rxvalidesc,
      dl0_rxvalidhs => dl0_rxvalidhs,
      dl0_stopstate => dl0_stopstate,
      dl0_ulpsactivenot => dl0_ulpsactivenot,
      dl1_enable => dl1_enable,
      dl1_errcontrol => dl1_errcontrol,
      dl1_erresc => dl1_erresc,
      dl1_errsoths => dl1_errsoths,
      dl1_errsotsynchs => dl1_errsotsynchs,
      dl1_errsyncesc => dl1_errsyncesc,
      dl1_forcerxmode => dl1_forcerxmode,
      dl1_rxactivehs => dl1_rxactivehs,
      dl1_rxclkesc => dl1_rxclkesc,
      dl1_rxdataesc(7 downto 0) => dl1_rxdataesc(7 downto 0),
      dl1_rxdatahs(7 downto 0) => dl1_rxdatahs(7 downto 0),
      dl1_rxlpdtesc => dl1_rxlpdtesc,
      dl1_rxsynchs => dl1_rxsynchs,
      dl1_rxtriggeresc(3 downto 0) => dl1_rxtriggeresc(3 downto 0),
      dl1_rxulpsesc => dl1_rxulpsesc,
      dl1_rxvalidesc => dl1_rxvalidesc,
      dl1_rxvalidhs => dl1_rxvalidhs,
      dl1_stopstate => dl1_stopstate,
      dl1_ulpsactivenot => dl1_ulpsactivenot,
      dlyctrl_rdy_out => dlyctrl_rdy_out,
      init_done => init_done,
      rxbyteclkhs => rxbyteclkhs,
      s_axi_aclk => s_axi_aclk,
      s_axi_araddr(6 downto 0) => s_axi_araddr(6 downto 0),
      s_axi_aresetn => s_axi_aresetn,
      s_axi_arready => s_axi_arready,
      s_axi_arvalid => s_axi_arvalid,
      s_axi_awaddr(6 downto 0) => s_axi_awaddr(6 downto 0),
      s_axi_awready => s_axi_awready,
      s_axi_awvalid => s_axi_awvalid,
      s_axi_bready => s_axi_bready,
      s_axi_bresp(1 downto 0) => s_axi_bresp(1 downto 0),
      s_axi_bvalid => s_axi_bvalid,
      s_axi_rdata(31 downto 0) => s_axi_rdata(31 downto 0),
      s_axi_rready => s_axi_rready,
      s_axi_rresp(1 downto 0) => s_axi_rresp(1 downto 0),
      s_axi_rvalid => s_axi_rvalid,
      s_axi_wdata(31 downto 0) => s_axi_wdata(31 downto 0),
      s_axi_wready => s_axi_wready,
      s_axi_wstrb(3 downto 0) => s_axi_wstrb(3 downto 0),
      s_axi_wvalid => s_axi_wvalid,
      system_rst_out => system_rst_out
    );
end STRUCTURE;
