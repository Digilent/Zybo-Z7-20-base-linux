// Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2017.4 (lin64) Build 2086221 Fri Dec 15 20:54:30 MST 2017
// Date        : Sat Mar 31 13:24:40 2018
// Host        : ubuntu running 64-bit Ubuntu 16.04.3 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/digilent/work/git/Zybo-Z7-20-base-linux/src/bd/system/ip/system_mipi_csi2_rx_subsystem_0_0/bd_0/ip/ip_3/bd_ca02_phy_0_sim_netlist.v
// Design      : bd_ca02_phy_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z020clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* C_CAL_MODE = "FIXED" *) (* C_DIV4_CLK_PERIOD = "10.000000" *) (* C_DPHY_LANES = "2" *) 
(* C_DPHY_MODE = "SLAVE" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "1" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "800" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "1" *) (* C_INIT = "100000" *) (* C_LPX_PERIOD = "50" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) 
(* DPHY_PRESET = "CSI2RX_XLNX" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) 
(* SUPPORT_LEVEL = "1" *) 
(* NotValidForBitStream *)
module bd_ca02_phy_0
   (core_clk,
    core_rst,
    dlyctrl_rdy_out,
    rxbyteclkhs,
    system_rst_out,
    init_done,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_forcerxmode,
    dl0_stopstate,
    dl0_enable,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_forcerxmode,
    dl1_stopstate,
    dl1_enable,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid,
    clk_hs_rxp,
    clk_hs_rxn,
    data_hs_rxp,
    data_hs_rxn,
    clk_lp_rxp,
    clk_lp_rxn,
    data_lp_rxp,
    data_lp_rxn);
  input core_clk;
  input core_rst;
  output dlyctrl_rdy_out;
  output rxbyteclkhs;
  output system_rst_out;
  output init_done;
  output cl_rxclkactivehs;
  output cl_stopstate;
  input cl_enable;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  input dl0_forcerxmode;
  output dl0_stopstate;
  input dl0_enable;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  input dl1_forcerxmode;
  output dl1_stopstate;
  input dl1_enable;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;
  input clk_hs_rxp;
  input clk_hs_rxn;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;

  wire cl_enable;
  wire cl_rxclkactivehs;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire cl_ulpsactivenot;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire clk_hs_rxn;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire [1:0]data_hs_rxn;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire [1:0]data_hs_rxp;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxactivehs;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxlpdtesc;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxulpsesc;
  wire dl0_rxvalidesc;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxactivehs;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxlpdtesc;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxulpsesc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dlyctrl_rdy_out;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire system_rst_out;

  (* C_CAL_MODE = "FIXED" *) 
  (* C_DIV4_CLK_PERIOD = "10.000000" *) 
  (* C_DPHY_LANES = "2" *) 
  (* C_DPHY_MODE = "SLAVE" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_HS_OBUFTDS = "FALSE" *) 
  (* C_EN_REG_IF = "1" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_EN_ULPS_WAKEUP_CNT = "FALSE" *) 
  (* C_ESC_CLK_PERIOD = "50.000000" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_EXAMPLE_SIMULATION = "false" *) 
  (* C_HS_LINE_RATE = "800" *) 
  (* C_HS_SETTLE_NS = "147" *) 
  (* C_HS_TIMEOUT = "65541" *) 
  (* C_IDLY_TAP = "1" *) 
  (* C_INIT = "100000" *) 
  (* C_IS_7SERIES = "TRUE" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) 
  (* C_USE_LANE0_TXREADYHS = "FALSE" *) 
  (* C_WAKEUP = "1000000" *) 
  (* DPHY_PRESET = "CSI2RX_XLNX" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SUPPORT_LEVEL = "1" *) 
  bd_ca02_phy_0_bd_ca02_phy_0_core inst
       (.cl_enable(cl_enable),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_lp_rxn(clk_lp_rxn),
        .clk_lp_rxp(clk_lp_rxp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_lp_rxn(data_lp_rxn),
        .data_lp_rxp(data_lp_rxp),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxlpdtesc(dl0_rxlpdtesc),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxulpsesc(dl0_rxulpsesc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxlpdtesc(dl1_rxlpdtesc),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxulpsesc(dl1_rxulpsesc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dlyctrl_rdy_out(dlyctrl_rdy_out),
        .init_done(init_done),
        .rxbyteclkhs(rxbyteclkhs),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out));
endmodule

(* C_CAL_MODE = "FIXED" *) (* C_DIV4_CLK_PERIOD = "10.000000" *) (* C_DPHY_LANES = "2" *) 
(* C_DPHY_MODE = "SLAVE" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_HS_OBUFTDS = "FALSE" *) 
(* C_EN_REG_IF = "1" *) (* C_EN_TIMEOUT_REGS = "0" *) (* C_EN_ULPS_WAKEUP_CNT = "FALSE" *) 
(* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) (* C_EXAMPLE_SIMULATION = "false" *) 
(* C_HS_LINE_RATE = "800" *) (* C_HS_SETTLE_NS = "147" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "1" *) (* C_INIT = "100000" *) (* C_IS_7SERIES = "TRUE" *) 
(* C_LPX_PERIOD = "50" *) (* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) 
(* C_USE_LANE0_TXREADYHS = "FALSE" *) (* C_WAKEUP = "1000000" *) (* DPHY_PRESET = "CSI2RX_XLNX" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) (* ORIG_REF_NAME = "bd_ca02_phy_0_core" *) 
(* SUPPORT_LEVEL = "1" *) 
module bd_ca02_phy_0_bd_ca02_phy_0_core
   (core_clk,
    core_rst,
    rxbyteclkhs,
    dlyctrl_rdy_out,
    system_rst_out,
    init_done,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_forcerxmode,
    dl0_stopstate,
    dl0_enable,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_forcerxmode,
    dl1_stopstate,
    dl1_enable,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid,
    clk_hs_rxp,
    clk_hs_rxn,
    data_hs_rxp,
    data_hs_rxn,
    clk_lp_rxp,
    clk_lp_rxn,
    data_lp_rxp,
    data_lp_rxn);
  input core_clk;
  input core_rst;
  output rxbyteclkhs;
  output dlyctrl_rdy_out;
  output system_rst_out;
  output init_done;
  output cl_rxclkactivehs;
  output cl_stopstate;
  input cl_enable;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  input dl0_forcerxmode;
  output dl0_stopstate;
  input dl0_enable;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  input dl1_forcerxmode;
  output dl1_stopstate;
  input dl1_enable;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;
  input clk_hs_rxp;
  input clk_hs_rxn;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;

  wire \<const0> ;
  wire \<const1> ;
  wire cl_enable;
  wire cl_rxclkactivehs;
  wire cl_stopstate;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dlyctrl_rdy_out;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;

  assign cl_rxulpsclknot = \<const1> ;
  assign cl_ulpsactivenot = \<const1> ;
  assign dl0_errcontrol = \<const0> ;
  assign dl0_erresc = \<const0> ;
  assign dl0_errsyncesc = \<const0> ;
  assign dl0_rxclkesc = \<const0> ;
  assign dl0_rxdataesc[7] = \<const0> ;
  assign dl0_rxdataesc[6] = \<const0> ;
  assign dl0_rxdataesc[5] = \<const0> ;
  assign dl0_rxdataesc[4] = \<const0> ;
  assign dl0_rxdataesc[3] = \<const0> ;
  assign dl0_rxdataesc[2] = \<const0> ;
  assign dl0_rxdataesc[1] = \<const0> ;
  assign dl0_rxdataesc[0] = \<const0> ;
  assign dl0_rxlpdtesc = \<const0> ;
  assign dl0_rxtriggeresc[3] = \<const0> ;
  assign dl0_rxtriggeresc[2] = \<const0> ;
  assign dl0_rxtriggeresc[1] = \<const0> ;
  assign dl0_rxtriggeresc[0] = \<const0> ;
  assign dl0_rxulpsesc = \<const0> ;
  assign dl0_rxvalidesc = \<const0> ;
  assign dl0_ulpsactivenot = \<const1> ;
  assign dl1_errcontrol = \<const0> ;
  assign dl1_erresc = \<const0> ;
  assign dl1_errsyncesc = \<const0> ;
  assign dl1_rxclkesc = \<const0> ;
  assign dl1_rxdataesc[7] = \<const0> ;
  assign dl1_rxdataesc[6] = \<const0> ;
  assign dl1_rxdataesc[5] = \<const0> ;
  assign dl1_rxdataesc[4] = \<const0> ;
  assign dl1_rxdataesc[3] = \<const0> ;
  assign dl1_rxdataesc[2] = \<const0> ;
  assign dl1_rxdataesc[1] = \<const0> ;
  assign dl1_rxdataesc[0] = \<const0> ;
  assign dl1_rxlpdtesc = \<const0> ;
  assign dl1_rxtriggeresc[3] = \<const0> ;
  assign dl1_rxtriggeresc[2] = \<const0> ;
  assign dl1_rxtriggeresc[1] = \<const0> ;
  assign dl1_rxtriggeresc[0] = \<const0> ;
  assign dl1_rxulpsesc = \<const0> ;
  assign dl1_rxvalidesc = \<const0> ;
  assign dl1_ulpsactivenot = \<const1> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  bd_ca02_phy_0_bd_ca02_phy_0_support bd_ca02_phy_0_rx_support_i
       (.cl_enable(cl_enable),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_stopstate(cl_stopstate),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_lp_rxn(clk_lp_rxn),
        .clk_lp_rxp(clk_lp_rxp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_lp_rxn(data_lp_rxn),
        .data_lp_rxp(data_lp_rxp),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dlyctrl_rdy_out(dlyctrl_rdy_out),
        .init_done(init_done),
        .rxbyteclkhs(rxbyteclkhs),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[6:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[6:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out));
endmodule

(* ORIG_REF_NAME = "bd_ca02_phy_0_support" *) 
module bd_ca02_phy_0_bd_ca02_phy_0_support
   (system_rst_out,
    init_done,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_stopstate,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_stopstate,
    dl1_errsoths,
    dl1_errsotsynchs,
    cl_rxclkactivehs,
    cl_stopstate,
    s_axi_awready,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_bvalid,
    rxbyteclkhs,
    dlyctrl_rdy_out,
    core_rst,
    core_clk,
    cl_enable,
    data_lp_rxp,
    data_lp_rxn,
    clk_lp_rxp,
    clk_lp_rxn,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_bready,
    data_hs_rxp,
    data_hs_rxn,
    clk_hs_rxp,
    clk_hs_rxn);
  output system_rst_out;
  output init_done;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  output dl0_stopstate;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  output dl1_stopstate;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output cl_rxclkactivehs;
  output cl_stopstate;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_wready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output rxbyteclkhs;
  output dlyctrl_rdy_out;
  input core_rst;
  input core_clk;
  input cl_enable;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;
  input [4:0]s_axi_araddr;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_bready;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_hs_rxp;
  input clk_hs_rxn;

  wire cl_enable;
  wire cl_enable_sync;
  wire cl_rxclkactivehs;
  wire cl_stopstate;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  wire core_rst_coreclk_sync;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [15:0]data_in_to_device_w;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dlyctrl_rdy_out;
  wire dphy_en_w;
  wire dphy_srst_w;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;
  wire \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_done_UNCONNECTED ;
  wire \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_pass_UNCONNECTED ;
  wire \NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_pass_in_rst_UNCONNECTED ;
  wire [4:0]\NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_idelay_tap_val_out_UNCONNECTED ;
  wire \NLW_slave_rx.cl_enable_sync_support_i_prmry_ack_UNCONNECTED ;
  wire [1:0]\NLW_slave_rx.cl_enable_sync_support_i_scndry_vect_out_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_cl_rxulpsclknot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_cl_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_core_ref_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_idelay_load_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_phy_rst_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_reg_cal_start_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_sys_rst_byteclk_out_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl0_rxdataesc_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl0_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl1_rxdataesc_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl1_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl2_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl3_rxtriggeresc_UNCONNECTED ;
  wire [8:0]\NLW_slave_rx.dphy_rx_fab_top_idelay_tap_value_UNCONNECTED ;
  wire [1:0]\NLW_slave_rx.dphy_rx_fab_top_s_axi_bresp_UNCONNECTED ;
  wire [1:0]\NLW_slave_rx.dphy_rx_fab_top_s_axi_rresp_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_tap_comp_res_UNCONNECTED ;
  wire \NLW_slave_rx.u_rx_rst_logic_7series_system_rst_byteclk_UNCONNECTED ;

  (* CAL_CHECK_TAP_MAX = "5'b11111" *) 
  (* CAL_CHECK_TAP_MIN = "5'b00001" *) 
  (* CAL_CHECK_TAP_MIN_INT = "5'b00000" *) 
  (* C_CAL_MODE = "FIXED" *) 
  (* C_DPHY_LANES = "2" *) 
  (* C_IDLY_GRP_NAME = "mipi_csi2rx_idly_group" *) 
  (* C_IDLY_TAP = "1" *) 
  (* C_SHARE_IDLYCTRL = "true" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* GEN_LD = "2'b01" *) 
  (* GEN_PASS_RST = "2'b10" *) 
  (* IDLE = "2'b00" *) 
  (* ISERDES_IOBDELAY = "BOTH" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* PASS_IN_WAIT_TIME = "32'b00000000000000010000000000000000" *) 
  (* PASS_RST_WAIT_TIME = "6'b101000" *) 
  (* PASS_WAIT = "2'b11" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series \slave_rx.bd_ca02_phy_0_rx_ioi_i 
       (.cal_done(\NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_done_UNCONNECTED ),
        .cal_pass(\NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_cal_pass_UNCONNECTED ),
        .cal_start(1'b0),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_reset(1'b0),
        .core_clk(core_clk),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_in_to_device(data_in_to_device_w),
        .div4_clk_out(rxbyteclkhs),
        .dlyctrl_rdy(dlyctrl_rdy_out),
        .idelay_tap_val_out(\NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_idelay_tap_val_out_UNCONNECTED [4:0]),
        .io_reset(1'b0),
        .pass_in_rst(\NLW_slave_rx.bd_ca02_phy_0_rx_ioi_i_pass_in_rst_UNCONNECTED ),
        .rx_clk_active(1'b0),
        .system_reset(system_rst_out),
        .tap_val_pass_in({1'b0,1'b0,1'b0,1'b0}));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1 \slave_rx.cl_enable_sync_support_i 
       (.prmry_ack(\NLW_slave_rx.cl_enable_sync_support_i_prmry_ack_UNCONNECTED ),
        .prmry_aclk(1'b0),
        .prmry_in(cl_enable),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(cl_enable_sync),
        .scndry_rst_n(1'b0),
        .scndry_vect_out(\NLW_slave_rx.cl_enable_sync_support_i_scndry_vect_out_UNCONNECTED [1:0]));
  (* BYTE_UI = "10" *) 
  (* CL_ACTIVE_BYTE_UI = "1" *) 
  (* C_CLK_PREPARE_VAL = "40" *) 
  (* C_CLK_SETTLE_VAL = "95" *) 
  (* C_CLK_TERMEN_VAL = "38" *) 
  (* C_CLK_ZERO_VAL = "205" *) 
  (* C_DPHY_LANES = "2" *) 
  (* C_DPHY_MODE = "SLAVE" *) 
  (* C_D_TERMEN_VAL = "35" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_REGISTER = "1" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_EN_ULPS_WAKEUP_CNT = "FALSE" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_HS_LINE_RATE = "800" *) 
  (* C_HS_RX_TIMEOUT = "65541" *) 
  (* C_HS_SETTLE_VAL = "147" *) 
  (* C_HS_SKIP_VAL = "40" *) 
  (* C_INIT = "100000" *) 
  (* C_IS_7SERIES = "TRUE" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_WAKEUP = "1000000" *) 
  (* DPHY_PRESET = "CSI2RX_XLNX" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* LPX_PERIOD_MIN = "25" *) 
  (* LP_STATE_CNT = "2" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SUPPORT_LEVEL = "1" *) 
  (* UI10_VAL = "12" *) 
  (* UI_VAL = "1250" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top \slave_rx.dphy_rx_fab_top 
       (.cal_done(1'b0),
        .cal_pass(1'b0),
        .cl_enable(cl_enable_sync),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_rxulpsclknot(\NLW_slave_rx.dphy_rx_fab_top_cl_rxulpsclknot_UNCONNECTED ),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_cl_ulpsactivenot_UNCONNECTED ),
        .clk_200m(1'b0),
        .core_clk(core_clk),
        .core_ref_clk(\NLW_slave_rx.dphy_rx_fab_top_core_ref_clk_UNCONNECTED ),
        .core_rst(core_rst_coreclk_sync),
        .dl0_enable(1'b0),
        .dl0_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl0_errcontrol_UNCONNECTED ),
        .dl0_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl0_erresc_UNCONNECTED ),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl0_errsyncesc_UNCONNECTED ),
        .dl0_forcerxmode(1'b0),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxclkesc_UNCONNECTED ),
        .dl0_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxdataesc_UNCONNECTED [7:0]),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxlpdtesc_UNCONNECTED ),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxtriggeresc_UNCONNECTED [3:0]),
        .dl0_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxulpsesc_UNCONNECTED ),
        .dl0_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxvalidesc_UNCONNECTED ),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl0_ulpsactivenot_UNCONNECTED ),
        .dl1_enable(1'b0),
        .dl1_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl1_errcontrol_UNCONNECTED ),
        .dl1_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl1_erresc_UNCONNECTED ),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl1_errsyncesc_UNCONNECTED ),
        .dl1_forcerxmode(1'b0),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxclkesc_UNCONNECTED ),
        .dl1_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxdataesc_UNCONNECTED [7:0]),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxlpdtesc_UNCONNECTED ),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxtriggeresc_UNCONNECTED [3:0]),
        .dl1_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxulpsesc_UNCONNECTED ),
        .dl1_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxvalidesc_UNCONNECTED ),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl1_ulpsactivenot_UNCONNECTED ),
        .dl2_enable(1'b0),
        .dl2_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl2_errcontrol_UNCONNECTED ),
        .dl2_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl2_erresc_UNCONNECTED ),
        .dl2_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl2_errsoths_UNCONNECTED ),
        .dl2_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl2_errsotsynchs_UNCONNECTED ),
        .dl2_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_errsyncesc_UNCONNECTED ),
        .dl2_forcerxmode(1'b0),
        .dl2_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxactivehs_UNCONNECTED ),
        .dl2_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxclkesc_UNCONNECTED ),
        .dl2_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdataesc_UNCONNECTED [7:0]),
        .dl2_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdatahs_UNCONNECTED [7:0]),
        .dl2_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxlpdtesc_UNCONNECTED ),
        .dl2_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxsynchs_UNCONNECTED ),
        .dl2_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxtriggeresc_UNCONNECTED [3:0]),
        .dl2_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxulpsesc_UNCONNECTED ),
        .dl2_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidesc_UNCONNECTED ),
        .dl2_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidhs_UNCONNECTED ),
        .dl2_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl2_stopstate_UNCONNECTED ),
        .dl2_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl2_ulpsactivenot_UNCONNECTED ),
        .dl3_enable(1'b0),
        .dl3_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl3_errcontrol_UNCONNECTED ),
        .dl3_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl3_erresc_UNCONNECTED ),
        .dl3_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl3_errsoths_UNCONNECTED ),
        .dl3_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl3_errsotsynchs_UNCONNECTED ),
        .dl3_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_errsyncesc_UNCONNECTED ),
        .dl3_forcerxmode(1'b0),
        .dl3_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxactivehs_UNCONNECTED ),
        .dl3_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxclkesc_UNCONNECTED ),
        .dl3_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdataesc_UNCONNECTED [7:0]),
        .dl3_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdatahs_UNCONNECTED [7:0]),
        .dl3_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxlpdtesc_UNCONNECTED ),
        .dl3_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxsynchs_UNCONNECTED ),
        .dl3_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxtriggeresc_UNCONNECTED [3:0]),
        .dl3_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxulpsesc_UNCONNECTED ),
        .dl3_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidesc_UNCONNECTED ),
        .dl3_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidhs_UNCONNECTED ),
        .dl3_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl3_stopstate_UNCONNECTED ),
        .dl3_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl3_ulpsactivenot_UNCONNECTED ),
        .dly_ctrl_rdy(1'b0),
        .dphy_en_out(dphy_en_w),
        .dphy_srst_out(dphy_srst_w),
        .idelay_load(\NLW_slave_rx.dphy_rx_fab_top_idelay_load_UNCONNECTED ),
        .idelay_ready(1'b0),
        .idelay_tap_value(\NLW_slave_rx.dphy_rx_fab_top_idelay_tap_value_UNCONNECTED [8:0]),
        .idly_tap_val({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .init_done(init_done),
        .phy_ready(1'b0),
        .phy_rst(\NLW_slave_rx.dphy_rx_fab_top_phy_rst_UNCONNECTED ),
        .reg_cal_start(\NLW_slave_rx.dphy_rx_fab_top_reg_cal_start_UNCONNECTED ),
        .rx_cl_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_disable_ibuf_UNCONNECTED ),
        .rx_cl_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_en_hs_lpn_UNCONNECTED ),
        .rx_cl_fifo_empty(1'b0),
        .rx_cl_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_clk_UNCONNECTED ),
        .rx_cl_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_en_UNCONNECTED ),
        .rx_cl_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cl_lp_dn(clk_lp_rxn),
        .rx_cl_lp_dp(clk_lp_rxp),
        .rx_div4_clk(rxbyteclkhs),
        .rx_dl0_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_disable_ibuf_UNCONNECTED ),
        .rx_dl0_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_en_hs_lpn_UNCONNECTED ),
        .rx_dl0_fifo_empty(1'b0),
        .rx_dl0_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_clk_UNCONNECTED ),
        .rx_dl0_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_en_UNCONNECTED ),
        .rx_dl0_hs_dp(data_in_to_device_w[7:0]),
        .rx_dl0_lp_dn(data_lp_rxn[0]),
        .rx_dl0_lp_dp(data_lp_rxp[0]),
        .rx_dl1_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_disable_ibuf_UNCONNECTED ),
        .rx_dl1_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_en_hs_lpn_UNCONNECTED ),
        .rx_dl1_fifo_empty(1'b0),
        .rx_dl1_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_clk_UNCONNECTED ),
        .rx_dl1_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_en_UNCONNECTED ),
        .rx_dl1_hs_dp(data_in_to_device_w[15:8]),
        .rx_dl1_lp_dn(data_lp_rxn[1]),
        .rx_dl1_lp_dp(data_lp_rxp[1]),
        .rx_dl2_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_disable_ibuf_UNCONNECTED ),
        .rx_dl2_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_en_hs_lpn_UNCONNECTED ),
        .rx_dl2_fifo_empty(1'b0),
        .rx_dl2_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_clk_UNCONNECTED ),
        .rx_dl2_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_en_UNCONNECTED ),
        .rx_dl2_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl2_lp_dn(1'b0),
        .rx_dl2_lp_dp(1'b0),
        .rx_dl3_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_disable_ibuf_UNCONNECTED ),
        .rx_dl3_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_en_hs_lpn_UNCONNECTED ),
        .rx_dl3_fifo_empty(1'b0),
        .rx_dl3_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_clk_UNCONNECTED ),
        .rx_dl3_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_en_UNCONNECTED ),
        .rx_dl3_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl3_lp_dn(1'b0),
        .rx_dl3_lp_dp(1'b0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr,1'b0,1'b0}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr,1'b0,1'b0}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(\NLW_slave_rx.dphy_rx_fab_top_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(\NLW_slave_rx.dphy_rx_fab_top_s_axi_rresp_UNCONNECTED [1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wvalid(s_axi_wvalid),
        .sys_rst_byteclk_out(\NLW_slave_rx.dphy_rx_fab_top_sys_rst_byteclk_out_UNCONNECTED ),
        .system_rst_byteclk_in(1'b0),
        .system_rst_in(system_rst_out),
        .system_rst_phybyteclk_in(1'b0),
        .tap_comp_res(\NLW_slave_rx.dphy_rx_fab_top_tap_comp_res_UNCONNECTED [3:0]),
        .tap_comp_rst(1'b0));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2 \slave_rx.u_core_rst_coreclk_sync_rx_i 
       (.prmry_in(core_rst),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_coreclk_sync));
  (* DPHY_PRESET = "CSI2RX_XLNX" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* RESET_FSM_DONE = "2'b10" *) 
  (* RST_BEGIN = "2'b00" *) 
  (* STABLE_CLK_PERIOD = "5.000000" *) 
  (* WAIT_FOR_ENABLE = "2'b01" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series \slave_rx.u_rx_rst_logic_7series 
       (.cl_enable(cl_enable_sync),
        .core_clk(core_clk),
        .core_rst(core_rst_coreclk_sync),
        .dphyen(dphy_en_w),
        .srst(dphy_srst_w),
        .system_rst(system_rst_out),
        .system_rst_byteclk(\NLW_slave_rx.u_rx_rst_logic_7series_system_rst_byteclk_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_csi_rx_clk_lane" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane
   (out,
    D,
    cl_rxclkactivehs,
    \s_level_out_bus_d1_cdc_to_reg[0] ,
    cl_stopstate,
    \cl_rx_state_reg[1]_0 ,
    init_done,
    dl_status_reg_bit_4_reg,
    dl_status_reg_bit_4_reg_0,
    rx_cl_lp_dn,
    rx_cl_lp_dp,
    core_clk,
    cl_status_reg_bit_0,
    core_rst,
    \s_level_out_bus_d3_reg[1] ,
    system_rst_reg,
    \FSM_sequential_dl_rx_state_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \s_level_out_bus_d3_reg[22] );
  output out;
  output [0:0]D;
  output cl_rxclkactivehs;
  output [0:0]\s_level_out_bus_d1_cdc_to_reg[0] ;
  output cl_stopstate;
  output \cl_rx_state_reg[1]_0 ;
  output init_done;
  output dl_status_reg_bit_4_reg;
  output dl_status_reg_bit_4_reg_0;
  input rx_cl_lp_dn;
  input rx_cl_lp_dp;
  input core_clk;
  input cl_status_reg_bit_0;
  input core_rst;
  input [0:0]\s_level_out_bus_d3_reg[1] ;
  input system_rst_reg;
  input [0:0]\FSM_sequential_dl_rx_state_reg[0] ;
  input [0:0]\FSM_sequential_dl_rx_state_reg[0]_0 ;
  input [14:0]\s_level_out_bus_d3_reg[22] ;

  wire [0:0]\FSM_sequential_dl_rx_state_reg[0] ;
  wire [0:0]\FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire cl_init_done_coreclk0;
  wire cl_init_done_coreclk1;
  wire cl_init_done_coreclk1_carry__0_i_1_n_0;
  wire cl_init_done_coreclk1_carry_i_1_n_0;
  wire cl_init_done_coreclk1_carry_i_2_n_0;
  wire cl_init_done_coreclk1_carry_i_3_n_0;
  wire cl_init_done_coreclk1_carry_i_4_n_0;
  wire cl_init_done_coreclk1_carry_n_0;
  wire cl_init_done_coreclk1_carry_n_1;
  wire cl_init_done_coreclk1_carry_n_2;
  wire cl_init_done_coreclk1_carry_n_3;
  wire cl_rx_state;
  wire \cl_rx_state_reg[1]_0 ;
  wire \cl_rx_state_reg_n_0_[0] ;
  wire \cl_rx_state_reg_n_0_[1] ;
  wire \cl_rx_state_reg_n_0_[2] ;
  (* RTL_KEEP = "true" *) wire cl_rxclkactivehs;
  wire cl_rxclkactivehs1_out;
  wire cl_status_reg_bit_0;
  wire cl_status_reg_bit_3;
  (* DONT_TOUCH *) wire cl_status_reg_bit_4;
  wire cl_status_reg_bit_4__0;
  wire cl_status_reg_bit_4_i_2_n_0;
  wire cl_stopstate;
  wire core_clk;
  wire core_rst;
  wire dl_status_reg_bit_4_reg;
  wire dl_status_reg_bit_4_reg_0;
  wire [7:0]\en_cl_init_to_blk.init_to_cnt_level1_reg__0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level20 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0 ;
  wire [13:0]\en_cl_init_to_blk.init_to_cnt_level2_reg ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 ;
  wire [22:8]\en_init_to_reg.init_reg_nxt ;
  wire [14:0]\en_init_to_reg.init_to_r ;
  wire [12:0]\en_init_to_reg.init_to_r_2 ;
  wire \en_init_to_reg.init_to_r_2[0]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[0]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[0]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_2[10]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[11]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[12]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[1]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[1]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[2]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[2]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[2]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_2[3]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[3]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[3]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_2[4]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[4]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[5]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[5]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[5]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_2[6]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[6]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[7]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[7]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[7]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_2[7]_i_4_n_0 ;
  wire \en_init_to_reg.init_to_r_2[8]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_2[8]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_2[9]_i_1_n_0 ;
  wire [13:0]init_count;
  wire init_done;
  wire lp_00_r;
  wire lp_00_r_i_2_n_0;
  wire lp_01_r;
  wire lp_01_r_i_1_n_0;
  wire lp_10_r;
  wire lp_10_r_i_1_n_0;
  wire lp_11_r;
  wire lp_11_r_dly;
  wire lp_11_r_i_1_n_0;
  wire lp_11_r_nxt;
  wire lp_11_r_reg_n_0;
  wire [4:0]lp_st_cnt;
  wire \lp_st_cnt[4]_i_3_n_0 ;
  wire [1:0]lp_st_dup;
  wire [1:0]lp_state_sync;
  wire lp_state_sync0_i_n_1;
  wire lp_state_sync0_i_n_10;
  wire lp_state_sync0_i_n_11;
  wire lp_state_sync0_i_n_12;
  wire lp_state_sync0_i_n_3;
  wire lp_state_sync0_i_n_4;
  wire lp_state_sync0_i_n_5;
  wire lp_state_sync0_i_n_6;
  wire lp_state_sync0_i_n_7;
  wire lp_state_sync0_i_n_8;
  wire lp_state_sync0_i_n_9;
  wire lp_state_sync1_i_n_5;
  wire lp_state_sync1_i_n_6;
  wire lp_state_sync1_i_n_7;
  (* DONT_TOUCH *) wire out;
  wire [7:0]p_0_in;
  wire [1:1]p_0_out;
  wire rx_cl_lp_dn;
  wire rx_cl_lp_dp;
  wire [0:0]\s_level_out_bus_d1_cdc_to_reg[0] ;
  wire [0:0]\s_level_out_bus_d3_reg[1] ;
  wire [14:0]\s_level_out_bus_d3_reg[22] ;
  wire system_rst_reg;
  wire [3:0]NLW_cl_init_done_coreclk1_carry_O_UNCONNECTED;
  wire [3:1]NLW_cl_init_done_coreclk1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_cl_init_done_coreclk1_carry__0_O_UNCONNECTED;
  wire [3:1]\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED ;

  assign D[0] = cl_status_reg_bit_4;
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_dl_rx_state[3]_i_7__0 
       (.I0(init_done),
        .I1(system_rst_reg),
        .O(\cl_rx_state_reg[1]_0 ));
  CARRY4 cl_init_done_coreclk1_carry
       (.CI(1'b0),
        .CO({cl_init_done_coreclk1_carry_n_0,cl_init_done_coreclk1_carry_n_1,cl_init_done_coreclk1_carry_n_2,cl_init_done_coreclk1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cl_init_done_coreclk1_carry_O_UNCONNECTED[3:0]),
        .S({cl_init_done_coreclk1_carry_i_1_n_0,cl_init_done_coreclk1_carry_i_2_n_0,cl_init_done_coreclk1_carry_i_3_n_0,cl_init_done_coreclk1_carry_i_4_n_0}));
  CARRY4 cl_init_done_coreclk1_carry__0
       (.CI(cl_init_done_coreclk1_carry_n_0),
        .CO({NLW_cl_init_done_coreclk1_carry__0_CO_UNCONNECTED[3:1],cl_init_done_coreclk1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cl_init_done_coreclk1_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,cl_init_done_coreclk1_carry__0_i_1_n_0}));
  LUT3 #(
    .INIT(8'h41)) 
    cl_init_done_coreclk1_carry__0_i_1
       (.I0(init_count[13]),
        .I1(\en_init_to_reg.init_to_r_2 [12]),
        .I2(init_count[12]),
        .O(cl_init_done_coreclk1_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    cl_init_done_coreclk1_carry_i_1
       (.I0(init_count[11]),
        .I1(\en_init_to_reg.init_to_r_2 [11]),
        .I2(init_count[9]),
        .I3(\en_init_to_reg.init_to_r_2 [9]),
        .I4(\en_init_to_reg.init_to_r_2 [10]),
        .I5(init_count[10]),
        .O(cl_init_done_coreclk1_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    cl_init_done_coreclk1_carry_i_2
       (.I0(init_count[6]),
        .I1(\en_init_to_reg.init_to_r_2 [6]),
        .I2(init_count[7]),
        .I3(\en_init_to_reg.init_to_r_2 [7]),
        .I4(\en_init_to_reg.init_to_r_2 [8]),
        .I5(init_count[8]),
        .O(cl_init_done_coreclk1_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    cl_init_done_coreclk1_carry_i_3
       (.I0(init_count[3]),
        .I1(\en_init_to_reg.init_to_r_2 [3]),
        .I2(init_count[4]),
        .I3(\en_init_to_reg.init_to_r_2 [4]),
        .I4(\en_init_to_reg.init_to_r_2 [5]),
        .I5(init_count[5]),
        .O(cl_init_done_coreclk1_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    cl_init_done_coreclk1_carry_i_4
       (.I0(init_count[0]),
        .I1(\en_init_to_reg.init_to_r_2 [0]),
        .I2(init_count[1]),
        .I3(\en_init_to_reg.init_to_r_2 [1]),
        .I4(\en_init_to_reg.init_to_r_2 [2]),
        .I5(init_count[2]),
        .O(cl_init_done_coreclk1_carry_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_11),
        .Q(\cl_rx_state_reg_n_0_[0] ),
        .R(cl_status_reg_bit_0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_1),
        .Q(\cl_rx_state_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_7),
        .Q(\cl_rx_state_reg_n_0_[2] ),
        .R(cl_status_reg_bit_0));
  LUT6 #(
    .INIT(64'h000000000000FF08)) 
    cl_rxclkactivehs_i_1
       (.I0(\cl_rx_state_reg_n_0_[1] ),
        .I1(\cl_rx_state_reg_n_0_[2] ),
        .I2(\cl_rx_state_reg_n_0_[0] ),
        .I3(cl_rxclkactivehs),
        .I4(lp_11_r_reg_n_0),
        .I5(system_rst_reg),
        .O(cl_rxclkactivehs1_out));
  (* KEEP = "yes" *) 
  FDCE cl_rxclkactivehs_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_rxclkactivehs1_out),
        .Q(cl_rxclkactivehs));
  FDRE cl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_9),
        .Q(\s_level_out_bus_d1_cdc_to_reg[0] ),
        .R(cl_status_reg_bit_0));
  LUT2 #(
    .INIT(4'h8)) 
    cl_status_reg_bit_4_i_2
       (.I0(\cl_rx_state_reg_n_0_[1] ),
        .I1(\cl_rx_state_reg_n_0_[0] ),
        .O(cl_status_reg_bit_4_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE cl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_status_reg_bit_4__0),
        .Q(cl_status_reg_bit_4),
        .R(cl_status_reg_bit_0));
  FDRE cl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_6),
        .Q(cl_stopstate),
        .R(cl_status_reg_bit_0));
  LUT2 #(
    .INIT(4'h1)) 
    dl_status_reg_bit_4_i_2
       (.I0(cl_rxclkactivehs),
        .I1(\FSM_sequential_dl_rx_state_reg[0] ),
        .O(dl_status_reg_bit_4_reg));
  LUT2 #(
    .INIT(4'h1)) 
    dl_status_reg_bit_4_i_2__0
       (.I0(cl_rxclkactivehs),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .O(dl_status_reg_bit_4_reg_0));
  FDRE \en_cl_init_to_blk.cl_init_done_coreclk_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_12),
        .Q(init_done),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h01)) 
    \en_cl_init_to_blk.cl_init_done_div4clk_i_1 
       (.I0(\cl_rx_state_reg_n_0_[0] ),
        .I1(\cl_rx_state_reg_n_0_[1] ),
        .I2(\cl_rx_state_reg_n_0_[2] ),
        .O(cl_status_reg_bit_3));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_cl_init_to_blk.cl_init_done_div4clk_reg 
       (.C(core_clk),
        .CE(cl_init_done_coreclk0),
        .D(cl_init_done_coreclk0),
        .Q(out),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_count_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .Q(init_count[0]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [10]),
        .Q(init_count[10]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [11]),
        .Q(init_count[11]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [12]),
        .Q(init_count[12]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [13]),
        .Q(init_count[13]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [1]),
        .Q(init_count[1]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [2]),
        .Q(init_count[2]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [3]),
        .Q(init_count[3]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [4]),
        .Q(init_count[4]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [5]),
        .Q(init_count[5]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [6]),
        .Q(init_count[6]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [7]),
        .Q(init_count[7]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [8]),
        .Q(init_count[8]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [9]),
        .Q(init_count[9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level1[0]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \en_cl_init_to_blk.init_to_cnt_level1[1]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \en_cl_init_to_blk.init_to_cnt_level1[2]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [2]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \en_cl_init_to_blk.init_to_cnt_level1[3]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [3]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \en_cl_init_to_blk.init_to_cnt_level1[4]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [4]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [2]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \en_cl_init_to_blk.init_to_cnt_level1[5]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [5]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [3]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [2]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [4]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \en_cl_init_to_blk.init_to_cnt_level1[6]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [6]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [7]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [6]),
        .O(p_0_in[7]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [2]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [3]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [4]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [5]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [6]),
        .R(lp_state_sync0_i_n_10));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[7]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [7]),
        .R(lp_state_sync0_i_n_10));
  LUT3 #(
    .INIT(8'h80)) 
    \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [7]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [6]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [5]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [3]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [1]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [2]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg__0 [4]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_tc_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .O(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[0] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .R(cl_status_reg_bit_3));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7 }),
        .S({\en_cl_init_to_blk.init_to_cnt_level2_reg [3:1],\en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0 }));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[10] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [10]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[11] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [11]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[12] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [12]),
        .R(cl_status_reg_bit_3));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ),
        .CO({\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED [3:1],\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED [3:2],\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,\en_cl_init_to_blk.init_to_cnt_level2_reg [13:12]}));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[13] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [13]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[1] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [1]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[2] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [2]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[3] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [3]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[4] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [4]),
        .R(cl_status_reg_bit_3));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0 ),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 }),
        .S(\en_cl_init_to_blk.init_to_cnt_level2_reg [7:4]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[5] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [5]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[6] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [6]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[7] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [7]),
        .R(cl_status_reg_bit_3));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[8] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [8]),
        .R(cl_status_reg_bit_3));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 }),
        .S(\en_cl_init_to_blk.init_to_cnt_level2_reg [11:8]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[9] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [9]),
        .R(cl_status_reg_bit_3));
  FDRE \en_init_to_reg.init_reg_nxt_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [2]),
        .Q(\en_init_to_reg.init_reg_nxt [10]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [3]),
        .Q(\en_init_to_reg.init_reg_nxt [11]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [4]),
        .Q(\en_init_to_reg.init_reg_nxt [12]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [5]),
        .Q(\en_init_to_reg.init_reg_nxt [13]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [6]),
        .Q(\en_init_to_reg.init_reg_nxt [14]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [7]),
        .Q(\en_init_to_reg.init_reg_nxt [15]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [8]),
        .Q(\en_init_to_reg.init_reg_nxt [16]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [9]),
        .Q(\en_init_to_reg.init_reg_nxt [17]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [10]),
        .Q(\en_init_to_reg.init_reg_nxt [18]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [11]),
        .Q(\en_init_to_reg.init_reg_nxt [19]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [12]),
        .Q(\en_init_to_reg.init_reg_nxt [20]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [13]),
        .Q(\en_init_to_reg.init_reg_nxt [21]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [14]),
        .Q(\en_init_to_reg.init_reg_nxt [22]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [0]),
        .Q(\en_init_to_reg.init_reg_nxt [8]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_reg_nxt_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d3_reg[22] [1]),
        .Q(\en_init_to_reg.init_reg_nxt [9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hE8BB77EAA81122E8)) 
    \en_init_to_reg.init_to_r_2[0]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2[0]_i_2_n_0 ),
        .I1(\en_init_to_reg.init_to_r [1]),
        .I2(\en_init_to_reg.init_to_r [0]),
        .I3(\en_init_to_reg.init_to_r_2[2]_i_2_n_0 ),
        .I4(\en_init_to_reg.init_to_r [2]),
        .I5(\en_init_to_reg.init_to_r_2[0]_i_3_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \en_init_to_reg.init_to_r_2[0]_i_2 
       (.I0(\en_init_to_reg.init_to_r [3]),
        .I1(\en_init_to_reg.init_to_r_2[3]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r [2]),
        .O(\en_init_to_reg.init_to_r_2[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h936CC936)) 
    \en_init_to_reg.init_to_r_2[0]_i_3 
       (.I0(\en_init_to_reg.init_to_r [2]),
        .I1(\en_init_to_reg.init_to_r_2[4]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r [3]),
        .I3(\en_init_to_reg.init_to_r [4]),
        .I4(\en_init_to_reg.init_to_r_2[3]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h3CB63492)) 
    \en_init_to_reg.init_to_r_2[10]_i_1 
       (.I0(\en_init_to_reg.init_to_r [13]),
        .I1(\en_init_to_reg.init_to_r [12]),
        .I2(\en_init_to_reg.init_to_r [14]),
        .I3(\en_init_to_reg.init_to_r [11]),
        .I4(\en_init_to_reg.init_to_r [10]),
        .O(\en_init_to_reg.init_to_r_2[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h9C18)) 
    \en_init_to_reg.init_to_r_2[11]_i_1 
       (.I0(\en_init_to_reg.init_to_r [12]),
        .I1(\en_init_to_reg.init_to_r [13]),
        .I2(\en_init_to_reg.init_to_r [14]),
        .I3(\en_init_to_reg.init_to_r [11]),
        .O(\en_init_to_reg.init_to_r_2[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \en_init_to_reg.init_to_r_2[12]_i_1 
       (.I0(\en_init_to_reg.init_to_r [14]),
        .I1(\en_init_to_reg.init_to_r [12]),
        .I2(\en_init_to_reg.init_to_r [13]),
        .O(\en_init_to_reg.init_to_r_2[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6671EEFF00887199)) 
    \en_init_to_reg.init_to_r_2[1]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2[3]_i_1_n_0 ),
        .I1(\en_init_to_reg.init_to_r [3]),
        .I2(\en_init_to_reg.init_to_r [1]),
        .I3(\en_init_to_reg.init_to_r [2]),
        .I4(\en_init_to_reg.init_to_r_2[2]_i_2_n_0 ),
        .I5(\en_init_to_reg.init_to_r_2[1]_i_2_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \en_init_to_reg.init_to_r_2[1]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2[4]_i_1_n_0 ),
        .I1(\en_init_to_reg.init_to_r [3]),
        .I2(\en_init_to_reg.init_to_r [4]),
        .O(\en_init_to_reg.init_to_r_2[1]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \en_init_to_reg.init_to_r_2[2]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2[2]_i_2_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4E4E155715578D8D)) 
    \en_init_to_reg.init_to_r_2[2]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2[2]_i_3_n_0 ),
        .I1(\en_init_to_reg.init_to_r [3]),
        .I2(\en_init_to_reg.init_to_r_2[3]_i_1_n_0 ),
        .I3(\en_init_to_reg.init_to_r [2]),
        .I4(\en_init_to_reg.init_to_r [4]),
        .I5(\en_init_to_reg.init_to_r_2[4]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \en_init_to_reg.init_to_r_2[2]_i_3 
       (.I0(\en_init_to_reg.init_to_r [5]),
        .I1(\en_init_to_reg.init_to_r_2[5]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r [4]),
        .O(\en_init_to_reg.init_to_r_2[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF6BD56B0F2954290)) 
    \en_init_to_reg.init_to_r_2[3]_i_1 
       (.I0(\en_init_to_reg.init_to_r [5]),
        .I1(\en_init_to_reg.init_to_r [4]),
        .I2(\en_init_to_reg.init_to_r_2[3]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[5]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2[3]_i_3_n_0 ),
        .I5(\en_init_to_reg.init_to_r [3]),
        .O(\en_init_to_reg.init_to_r_2[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F0380FCC0FE3F01)) 
    \en_init_to_reg.init_to_r_2[3]_i_2 
       (.I0(\en_init_to_reg.init_to_r [7]),
        .I1(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2[5]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[5]_i_3_n_0 ),
        .I4(\en_init_to_reg.init_to_r [5]),
        .I5(\en_init_to_reg.init_to_r [6]),
        .O(\en_init_to_reg.init_to_r_2[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h29633C6969C3396B)) 
    \en_init_to_reg.init_to_r_2[3]_i_3 
       (.I0(\en_init_to_reg.init_to_r [5]),
        .I1(\en_init_to_reg.init_to_r [7]),
        .I2(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r [6]),
        .I4(\en_init_to_reg.init_to_r_2[5]_i_3_n_0 ),
        .I5(\en_init_to_reg.init_to_r_2[5]_i_2_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF6BD52B0F2B54290)) 
    \en_init_to_reg.init_to_r_2[4]_i_1 
       (.I0(\en_init_to_reg.init_to_r [6]),
        .I1(\en_init_to_reg.init_to_r [5]),
        .I2(\en_init_to_reg.init_to_r_2[4]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[6]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2[5]_i_1_n_0 ),
        .I5(\en_init_to_reg.init_to_r [4]),
        .O(\en_init_to_reg.init_to_r_2[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \en_init_to_reg.init_to_r_2[4]_i_2 
       (.I0(\en_init_to_reg.init_to_r [7]),
        .I1(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r [6]),
        .O(\en_init_to_reg.init_to_r_2[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFD6B5069F529402)) 
    \en_init_to_reg.init_to_r_2[5]_i_1 
       (.I0(\en_init_to_reg.init_to_r [7]),
        .I1(\en_init_to_reg.init_to_r [6]),
        .I2(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[5]_i_2_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2[5]_i_3_n_0 ),
        .I5(\en_init_to_reg.init_to_r [5]),
        .O(\en_init_to_reg.init_to_r_2[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFDC0023F03BFFC40)) 
    \en_init_to_reg.init_to_r_2[5]_i_2 
       (.I0(\en_init_to_reg.init_to_r [9]),
        .I1(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2[7]_i_4_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[7]_i_3_n_0 ),
        .I4(\en_init_to_reg.init_to_r [7]),
        .I5(\en_init_to_reg.init_to_r [8]),
        .O(\en_init_to_reg.init_to_r_2[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h963C93B69236C396)) 
    \en_init_to_reg.init_to_r_2[5]_i_3 
       (.I0(\en_init_to_reg.init_to_r [7]),
        .I1(\en_init_to_reg.init_to_r [9]),
        .I2(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ),
        .I3(\en_init_to_reg.init_to_r [8]),
        .I4(\en_init_to_reg.init_to_r_2[7]_i_3_n_0 ),
        .I5(\en_init_to_reg.init_to_r_2[7]_i_4_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h52B0F6BD4290F2B5)) 
    \en_init_to_reg.init_to_r_2[6]_i_1 
       (.I0(\en_init_to_reg.init_to_r [8]),
        .I1(\en_init_to_reg.init_to_r [7]),
        .I2(\en_init_to_reg.init_to_r_2[6]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[8]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ),
        .I5(\en_init_to_reg.init_to_r [6]),
        .O(\en_init_to_reg.init_to_r_2[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \en_init_to_reg.init_to_r_2[6]_i_2 
       (.I0(\en_init_to_reg.init_to_r [9]),
        .I1(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r [8]),
        .O(\en_init_to_reg.init_to_r_2[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \en_init_to_reg.init_to_r_2[7]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ),
        .O(\en_init_to_reg.init_to_r_2[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCC0F7F1177010FCC)) 
    \en_init_to_reg.init_to_r_2[7]_i_2 
       (.I0(\en_init_to_reg.init_to_r [7]),
        .I1(\en_init_to_reg.init_to_r [8]),
        .I2(\en_init_to_reg.init_to_r_2[7]_i_3_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[7]_i_4_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ),
        .I5(\en_init_to_reg.init_to_r [9]),
        .O(\en_init_to_reg.init_to_r_2[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hE718AE718AE718AE)) 
    \en_init_to_reg.init_to_r_2[7]_i_3 
       (.I0(\en_init_to_reg.init_to_r [9]),
        .I1(\en_init_to_reg.init_to_r [10]),
        .I2(\en_init_to_reg.init_to_r [12]),
        .I3(\en_init_to_reg.init_to_r [13]),
        .I4(\en_init_to_reg.init_to_r [14]),
        .I5(\en_init_to_reg.init_to_r [11]),
        .O(\en_init_to_reg.init_to_r_2[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA55A65965A659659)) 
    \en_init_to_reg.init_to_r_2[7]_i_4 
       (.I0(\en_init_to_reg.init_to_r [9]),
        .I1(\en_init_to_reg.init_to_r [13]),
        .I2(\en_init_to_reg.init_to_r [12]),
        .I3(\en_init_to_reg.init_to_r [14]),
        .I4(\en_init_to_reg.init_to_r [11]),
        .I5(\en_init_to_reg.init_to_r [10]),
        .O(\en_init_to_reg.init_to_r_2[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FDB250B2F5B2409)) 
    \en_init_to_reg.init_to_r_2[8]_i_1 
       (.I0(\en_init_to_reg.init_to_r [10]),
        .I1(\en_init_to_reg.init_to_r [9]),
        .I2(\en_init_to_reg.init_to_r_2[8]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_2[10]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ),
        .I5(\en_init_to_reg.init_to_r [8]),
        .O(\en_init_to_reg.init_to_r_2[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h695A5695)) 
    \en_init_to_reg.init_to_r_2[8]_i_2 
       (.I0(\en_init_to_reg.init_to_r [10]),
        .I1(\en_init_to_reg.init_to_r [12]),
        .I2(\en_init_to_reg.init_to_r [13]),
        .I3(\en_init_to_reg.init_to_r [14]),
        .I4(\en_init_to_reg.init_to_r [11]),
        .O(\en_init_to_reg.init_to_r_2[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5A9E795A581A6158)) 
    \en_init_to_reg.init_to_r_2[9]_i_1 
       (.I0(\en_init_to_reg.init_to_r [11]),
        .I1(\en_init_to_reg.init_to_r [14]),
        .I2(\en_init_to_reg.init_to_r [13]),
        .I3(\en_init_to_reg.init_to_r [12]),
        .I4(\en_init_to_reg.init_to_r [10]),
        .I5(\en_init_to_reg.init_to_r [9]),
        .O(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ));
  FDRE \en_init_to_reg.init_to_r_2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[0]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [0]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[10]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [10]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[11]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [11]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[12]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [12]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[1]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [1]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[2]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [2]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[3]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [3]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[4]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [4]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[5]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [5]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[6]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [6]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[7]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [7]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[8]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [8]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_2[9]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [9]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [8]),
        .Q(\en_init_to_reg.init_to_r [0]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [18]),
        .Q(\en_init_to_reg.init_to_r [10]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [19]),
        .Q(\en_init_to_reg.init_to_r [11]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [20]),
        .Q(\en_init_to_reg.init_to_r [12]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [21]),
        .Q(\en_init_to_reg.init_to_r [13]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [22]),
        .Q(\en_init_to_reg.init_to_r [14]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [9]),
        .Q(\en_init_to_reg.init_to_r [1]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [10]),
        .Q(\en_init_to_reg.init_to_r [2]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [11]),
        .Q(\en_init_to_reg.init_to_r [3]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [12]),
        .Q(\en_init_to_reg.init_to_r [4]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [13]),
        .Q(\en_init_to_reg.init_to_r [5]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [14]),
        .Q(\en_init_to_reg.init_to_r [6]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [15]),
        .Q(\en_init_to_reg.init_to_r [7]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [16]),
        .Q(\en_init_to_reg.init_to_r [8]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_reg_nxt [17]),
        .Q(\en_init_to_reg.init_to_r [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    lp_00_r_i_1
       (.I0(lp_st_cnt[3]),
        .I1(lp_st_cnt[4]),
        .I2(lp_st_cnt[2]),
        .I3(lp_st_cnt[1]),
        .I4(lp_st_cnt[0]),
        .O(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h1)) 
    lp_00_r_i_2
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_00_r_i_2_n_0));
  FDRE lp_00_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_00_r_i_2_n_0),
        .Q(lp_00_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_01_r_i_1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_01_r_i_1_n_0));
  FDRE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_01_r_i_1_n_0),
        .Q(lp_01_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_10_r_i_1
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_10_r_i_1_n_0));
  FDRE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_10_r_i_1_n_0),
        .Q(lp_10_r),
        .R(lp_11_r));
  FDRE lp_11_r_dly_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_nxt),
        .Q(lp_11_r_dly),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h8)) 
    lp_11_r_i_1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_11_r_i_1_n_0));
  FDRE lp_11_r_nxt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_reg_n_0),
        .Q(lp_11_r_nxt),
        .R(1'b0));
  FDRE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_i_1_n_0),
        .Q(lp_11_r_reg_n_0),
        .R(lp_11_r));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \lp_st_cnt[4]_i_3 
       (.I0(lp_00_r),
        .I1(lp_10_r),
        .I2(lp_01_r),
        .I3(lp_11_r_reg_n_0),
        .O(\lp_st_cnt[4]_i_3_n_0 ));
  FDRE \lp_st_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_8),
        .Q(lp_st_cnt[0]),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_7),
        .Q(lp_st_cnt[1]),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_6),
        .Q(lp_st_cnt[2]),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_5),
        .Q(lp_st_cnt[3]),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_4),
        .Q(lp_st_cnt[4]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[0]),
        .Q(lp_st_dup[0]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[1]),
        .Q(lp_st_dup[1]),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26 lp_state_sync0_i
       (.CO(cl_init_done_coreclk1),
        .D({lp_state_sync0_i_n_4,lp_state_sync0_i_n_5,lp_state_sync0_i_n_6,lp_state_sync0_i_n_7,lp_state_sync0_i_n_8}),
        .Q(lp_st_cnt),
        .SR(lp_state_sync0_i_n_10),
        .cl_rx_state(cl_rx_state),
        .\cl_rx_state_reg[0] (lp_state_sync0_i_n_11),
        .\cl_rx_state_reg[0]_0 (\cl_rx_state_reg_n_0_[0] ),
        .\cl_rx_state_reg[1] (lp_state_sync0_i_n_1),
        .\cl_rx_state_reg[1]_0 (\cl_rx_state_reg_n_0_[1] ),
        .\cl_rx_state_reg[2] (\cl_rx_state_reg_n_0_[2] ),
        .cl_status_reg_bit_0_reg(lp_state_sync0_i_n_9),
        .cl_status_reg_bit_0_reg_0(\s_level_out_bus_d1_cdc_to_reg[0] ),
        .cl_stopstate_reg(lp_state_sync0_i_n_3),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (lp_state_sync0_i_n_12),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\cl_rx_state_reg[1]_0 ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_1 (init_done),
        .lp_00_r_reg(\lp_st_cnt[4]_i_3_n_0 ),
        .lp_11_r_reg(lp_state_sync1_i_n_5),
        .lp_11_r_reg_0(lp_11_r_reg_n_0),
        .\lp_st_dup_reg[1] (lp_st_dup),
        .out(lp_state_sync[0]),
        .p_0_out(p_0_out),
        .rx_cl_lp_dn(rx_cl_lp_dn),
        .\s_level_out_bus_d3_reg[1] (\s_level_out_bus_d3_reg[1] ),
        .s_level_out_d2_reg_0(lp_state_sync[1]));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27 lp_state_sync1_i
       (.CO(cl_init_done_coreclk1),
        .D(cl_status_reg_bit_4),
        .cl_init_done_coreclk0(cl_init_done_coreclk0),
        .cl_rx_state(cl_rx_state),
        .\cl_rx_state_reg[0] (\cl_rx_state_reg_n_0_[0] ),
        .\cl_rx_state_reg[0]_0 (lp_state_sync0_i_n_3),
        .\cl_rx_state_reg[1] (lp_state_sync1_i_n_5),
        .\cl_rx_state_reg[1]_0 (\cl_rx_state_reg_n_0_[1] ),
        .\cl_rx_state_reg[1]_1 (cl_status_reg_bit_4_i_2_n_0),
        .\cl_rx_state_reg[2] (lp_state_sync1_i_n_7),
        .\cl_rx_state_reg[2]_0 (\cl_rx_state_reg_n_0_[2] ),
        .cl_status_reg_bit_4__0(cl_status_reg_bit_4__0),
        .cl_stopstate(cl_stopstate),
        .cl_stopstate_reg(lp_state_sync1_i_n_6),
        .core_clk(core_clk),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (init_done),
        .\en_cl_init_to_blk.init_to_cnt_level1_tc (\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .\en_cl_init_to_blk.init_to_cnt_level20 (\en_cl_init_to_blk.init_to_cnt_level20 ),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_11_r_reg_n_0),
        .out(lp_state_sync[1]),
        .p_0_out(p_0_out),
        .rx_cl_lp_dp(rx_cl_lp_dp),
        .s_level_out_d2_reg_0(lp_state_sync[0]));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_csi_rx_data_lane_sm" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm
   (dl_status_reg,
    dl_en_hs_lpn_i,
    Q,
    dl_en_hs_lpn_reg_0,
    \gen_hs_high_rates.stopstate_reg ,
    \gen_hs_high_rates.dl_state_reg[0] ,
    \gen_hs_high_rates.dl_state_reg[1] ,
    rx_dl1_lp_dn,
    rx_dl1_lp_dp,
    core_clk,
    \s_level_out_bus_d3_reg[4] ,
    \s_level_out_bus_d3_reg[4]_0 ,
    \s_level_out_bus_d3_reg[4]_1 ,
    core_rst,
    out,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    cl_rxclkactivehs_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    cl_rxclkactivehs_reg_0,
    active_sm_r__2,
    \gen_hs_high_rates.dl_state_reg[1]_0 ,
    \gen_hs_high_rates.dl_state_reg[0]_0 ,
    dl1_stopstate,
    \gen_hs_high_rates.active_sm_r_reg ,
    stop_state_extn_r,
    s_level_out_d2_reg,
    rxactivehs_coreclk_sync_r);
  output [2:0]dl_status_reg;
  output dl_en_hs_lpn_i;
  output [7:0]Q;
  output [0:0]dl_en_hs_lpn_reg_0;
  output \gen_hs_high_rates.stopstate_reg ;
  output \gen_hs_high_rates.dl_state_reg[0] ;
  output \gen_hs_high_rates.dl_state_reg[1] ;
  input rx_dl1_lp_dn;
  input rx_dl1_lp_dp;
  input core_clk;
  input [3:0]\s_level_out_bus_d3_reg[4] ;
  input [3:0]\s_level_out_bus_d3_reg[4]_0 ;
  input [2:0]\s_level_out_bus_d3_reg[4]_1 ;
  input core_rst;
  input out;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input cl_rxclkactivehs_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input cl_rxclkactivehs_reg_0;
  input active_sm_r__2;
  input \gen_hs_high_rates.dl_state_reg[1]_0 ;
  input \gen_hs_high_rates.dl_state_reg[0]_0 ;
  input dl1_stopstate;
  input \gen_hs_high_rates.active_sm_r_reg ;
  input stop_state_extn_r;
  input s_level_out_d2_reg;
  input rxactivehs_coreclk_sync_r;

  wire \FSM_sequential_dl_rx_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_6__0_n_0 ;
  wire [7:0]Q;
  wire active_sm_r__2;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire core_clk;
  wire core_rst;
  wire dl1_stopstate;
  wire dl_en_hs_lpn_i;
  wire dl_en_hs_lpn_i_2__0_n_0;
  wire dl_en_hs_lpn_i_5__0_n_0;
  (* RTL_KEEP = "yes" *) wire [0:0]dl_en_hs_lpn_reg_0;
  (* RTL_KEEP = "yes" *) wire [3:1]dl_rx_state;
  wire [2:0]dl_status_reg;
  wire dl_status_reg_bit_0_i_3__0_n_0;
  wire dl_stopstate;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire \gen_hs_high_rates.active_sm_r_reg ;
  wire \gen_hs_high_rates.dl_state[0]_i_2__0_n_0 ;
  wire \gen_hs_high_rates.dl_state_reg[0] ;
  wire \gen_hs_high_rates.dl_state_reg[0]_0 ;
  wire \gen_hs_high_rates.dl_state_reg[1] ;
  wire \gen_hs_high_rates.dl_state_reg[1]_0 ;
  wire \gen_hs_high_rates.stopstate_i_2_n_0 ;
  wire \gen_hs_high_rates.stopstate_i_4__0_n_0 ;
  wire \gen_hs_high_rates.stopstate_reg ;
  wire lp_00_r;
  wire lp_00_r_i_2__1_n_0;
  wire lp_01_r;
  wire lp_01_r_i_1__1_n_0;
  wire lp_10_r;
  wire lp_10_r_i_1__1_n_0;
  wire lp_11_r;
  wire lp_11_r_dly;
  wire lp_11_r_i_1__1_n_0;
  wire lp_11_r_nxt;
  wire lp_11_r_reg_n_0;
  wire [4:0]lp_st_cnt;
  wire \lp_st_cnt[0]_i_2__0_n_0 ;
  wire \lp_st_cnt[0]_i_4__0_n_0 ;
  wire \lp_st_cnt_reg_n_0_[0] ;
  wire \lp_st_cnt_reg_n_0_[1] ;
  wire \lp_st_cnt_reg_n_0_[2] ;
  wire \lp_st_cnt_reg_n_0_[3] ;
  wire \lp_st_cnt_reg_n_0_[4] ;
  wire [1:0]lp_st_dup;
  wire [1:0]lp_state_sync;
  wire lp_state_sync0_i_n_1;
  wire lp_state_sync0_i_n_2;
  wire lp_state_sync0_i_n_3;
  wire lp_state_sync0_i_n_4;
  wire lp_state_sync1_i_n_1;
  wire lp_state_sync1_i_n_10;
  wire lp_state_sync1_i_n_7;
  wire lp_state_sync1_i_n_8;
  wire lp_state_sync1_i_n_9;
  wire out;
  wire [7:0]p_0_in;
  wire rx_dl1_lp_dn;
  wire rx_dl1_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire [3:0]\s_level_out_bus_d3_reg[4] ;
  wire [3:0]\s_level_out_bus_d3_reg[4]_0 ;
  wire [2:0]\s_level_out_bus_d3_reg[4]_1 ;
  wire s_level_out_d2_reg;
  wire sel;
  wire \settle_cnt[7]_i_1__0_n_0 ;
  wire \settle_cnt[7]_i_3__0_n_0 ;
  wire stop_state_extn_r;
  wire stopstate12_out;
  wire stopstate14_out;
  wire time_out_settle0_carry__0_n_0;
  wire time_out_settle0_carry__0_n_1;
  wire time_out_settle0_carry__0_n_2;
  wire time_out_settle0_carry__0_n_3;
  wire time_out_settle0_carry__1_n_1;
  wire time_out_settle0_carry__1_n_2;
  wire time_out_settle0_carry__1_n_3;
  wire time_out_settle0_carry_n_0;
  wire time_out_settle0_carry_n_1;
  wire time_out_settle0_carry_n_2;
  wire time_out_settle0_carry_n_3;
  wire time_out_settle_i_1__0_n_0;
  wire time_out_settle_reg_n_0;
  wire [3:0]NLW_time_out_settle0_carry_O_UNCONNECTED;
  wire [3:0]NLW_time_out_settle0_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_time_out_settle0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_time_out_settle0_carry__1_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'hFFE2E2E2)) 
    \FSM_sequential_dl_rx_state[0]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[0]_i_2__0_n_0 ),
        .I1(dl_rx_state[1]),
        .I2(\FSM_sequential_dl_rx_state[1]_i_3__0_n_0 ),
        .I3(out),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(\FSM_sequential_dl_rx_state[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h03003737)) 
    \FSM_sequential_dl_rx_state[0]_i_2__0 
       (.I0(cl_rxclkactivehs_reg),
        .I1(dl_rx_state[3]),
        .I2(dl_rx_state[2]),
        .I3(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I4(dl_en_hs_lpn_reg_0),
        .O(\FSM_sequential_dl_rx_state[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_sequential_dl_rx_state[1]_i_3__0 
       (.I0(dl_rx_state[2]),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_en_hs_lpn_reg_0),
        .I3(dl_rx_state[3]),
        .O(\FSM_sequential_dl_rx_state[1]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'h00E6)) 
    \FSM_sequential_dl_rx_state[2]_i_3__0 
       (.I0(dl_en_hs_lpn_reg_0),
        .I1(dl_rx_state[2]),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state[3]),
        .O(\FSM_sequential_dl_rx_state[2]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_rx_state[3]_i_6__0 
       (.I0(dl_en_hs_lpn_reg_0),
        .I1(lp_11_r_reg_n_0),
        .O(\FSM_sequential_dl_rx_state[3]_i_6__0_n_0 ));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[0] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(\FSM_sequential_dl_rx_state[0]_i_1__0_n_0 ),
        .Q(dl_en_hs_lpn_reg_0));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[1] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(lp_state_sync0_i_n_4),
        .Q(dl_rx_state[1]));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[2] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(lp_state_sync0_i_n_3),
        .Q(dl_rx_state[2]));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[3] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_10),
        .Q(dl_rx_state[3]));
  LUT2 #(
    .INIT(4'hB)) 
    dl_en_hs_lpn_i_2__0
       (.I0(lp_11_r_reg_n_0),
        .I1(cl_rxclkactivehs_reg),
        .O(dl_en_hs_lpn_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAA8000)) 
    dl_en_hs_lpn_i_5__0
       (.I0(dl_rx_state[2]),
        .I1(time_out_settle_reg_n_0),
        .I2(cl_rxclkactivehs_reg),
        .I3(dl_en_hs_lpn_reg_0),
        .I4(lp_11_r_reg_n_0),
        .I5(dl_rx_state[3]),
        .O(dl_en_hs_lpn_i_5__0_n_0));
  FDCE dl_en_hs_lpn_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_7),
        .Q(dl_en_hs_lpn_i));
  LUT4 #(
    .INIT(16'h0045)) 
    dl_status_reg_bit_0_i_3__0
       (.I0(dl_en_hs_lpn_reg_0),
        .I1(lp_11_r_reg_n_0),
        .I2(cl_rxclkactivehs_reg),
        .I3(dl_rx_state[2]),
        .O(dl_status_reg_bit_0_i_3__0_n_0));
  FDCE dl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync0_i_n_1),
        .Q(dl_status_reg[0]));
  FDCE dl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_8),
        .Q(dl_status_reg[1]));
  FDRE dl_status_reg_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_stopstate),
        .Q(dl_status_reg[2]),
        .R(1'b0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_9),
        .Q(dl_stopstate));
  LUT6 #(
    .INIT(64'h333388B8000088B8)) 
    \gen_hs_high_rates.dl_state[0]_i_1__0 
       (.I0(\gen_hs_high_rates.dl_state[0]_i_2__0_n_0 ),
        .I1(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I2(dl_stopstate),
        .I3(stopstate14_out),
        .I4(\gen_hs_high_rates.dl_state_reg[1]_0 ),
        .I5(active_sm_r__2),
        .O(\gen_hs_high_rates.dl_state_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h002F)) 
    \gen_hs_high_rates.dl_state[0]_i_2__0 
       (.I0(dl_stopstate),
        .I1(\gen_hs_high_rates.active_sm_r_reg ),
        .I2(stop_state_extn_r),
        .I3(dl_en_hs_lpn_i),
        .O(\gen_hs_high_rates.dl_state[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00B833B8)) 
    \gen_hs_high_rates.dl_state[1]_i_1__0 
       (.I0(stopstate12_out),
        .I1(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I2(stopstate14_out),
        .I3(\gen_hs_high_rates.dl_state_reg[1]_0 ),
        .I4(active_sm_r__2),
        .O(\gen_hs_high_rates.dl_state_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \gen_hs_high_rates.dl_state[1]_i_2__0 
       (.I0(dl_en_hs_lpn_i),
        .I1(stop_state_extn_r),
        .I2(\gen_hs_high_rates.active_sm_r_reg ),
        .O(stopstate12_out));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \gen_hs_high_rates.dl_state[1]_i_3__0 
       (.I0(dl_en_hs_lpn_i),
        .I1(rxactivehs_coreclk_sync_r),
        .I2(s_level_out_d2_reg),
        .O(stopstate14_out));
  LUT6 #(
    .INIT(64'hFAFAFAFF0ACA0AC0)) 
    \gen_hs_high_rates.stopstate_i_1__0 
       (.I0(\gen_hs_high_rates.stopstate_i_2_n_0 ),
        .I1(active_sm_r__2),
        .I2(\gen_hs_high_rates.dl_state_reg[1]_0 ),
        .I3(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I4(\gen_hs_high_rates.stopstate_i_4__0_n_0 ),
        .I5(dl1_stopstate),
        .O(\gen_hs_high_rates.stopstate_reg ));
  LUT6 #(
    .INIT(64'h0700030007FF0300)) 
    \gen_hs_high_rates.stopstate_i_2 
       (.I0(\gen_hs_high_rates.active_sm_r_reg ),
        .I1(stop_state_extn_r),
        .I2(dl_en_hs_lpn_i),
        .I3(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I4(dl_stopstate),
        .I5(stopstate14_out),
        .O(\gen_hs_high_rates.stopstate_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hFFF2)) 
    \gen_hs_high_rates.stopstate_i_4__0 
       (.I0(s_level_out_d2_reg),
        .I1(rxactivehs_coreclk_sync_r),
        .I2(dl_en_hs_lpn_i),
        .I3(dl_stopstate),
        .O(\gen_hs_high_rates.stopstate_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    lp_00_r_i_1__1
       (.I0(\lp_st_cnt_reg_n_0_[0] ),
        .I1(\lp_st_cnt_reg_n_0_[1] ),
        .I2(\lp_st_cnt_reg_n_0_[2] ),
        .I3(\lp_st_cnt_reg_n_0_[4] ),
        .I4(\lp_st_cnt_reg_n_0_[3] ),
        .O(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h1)) 
    lp_00_r_i_2__1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_00_r_i_2__1_n_0));
  FDRE lp_00_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_00_r_i_2__1_n_0),
        .Q(lp_00_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_01_r_i_1__1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_01_r_i_1__1_n_0));
  FDRE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_01_r_i_1__1_n_0),
        .Q(lp_01_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_10_r_i_1__1
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_10_r_i_1__1_n_0));
  FDRE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_10_r_i_1__1_n_0),
        .Q(lp_10_r),
        .R(lp_11_r));
  FDRE lp_11_r_dly_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_nxt),
        .Q(lp_11_r_dly),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    lp_11_r_i_1__1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_11_r_i_1__1_n_0));
  FDRE lp_11_r_nxt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_reg_n_0),
        .Q(lp_11_r_nxt),
        .R(1'b0));
  FDRE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_i_1__1_n_0),
        .Q(lp_11_r_reg_n_0),
        .R(lp_11_r));
  LUT2 #(
    .INIT(4'h1)) 
    \lp_st_cnt[0]_i_2__0 
       (.I0(lp_10_r),
        .I1(lp_00_r),
        .O(\lp_st_cnt[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \lp_st_cnt[0]_i_4__0 
       (.I0(\lp_st_cnt_reg_n_0_[3] ),
        .I1(\lp_st_cnt_reg_n_0_[4] ),
        .I2(\lp_st_cnt_reg_n_0_[2] ),
        .I3(\lp_st_cnt_reg_n_0_[1] ),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(\lp_st_cnt[0]_i_4__0_n_0 ));
  FDRE \lp_st_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[0]),
        .Q(\lp_st_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[1]),
        .Q(\lp_st_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[2]),
        .Q(\lp_st_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[3]),
        .Q(\lp_st_cnt_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[4]),
        .Q(\lp_st_cnt_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \lp_st_dup_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[0]),
        .Q(lp_st_dup[0]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[1]),
        .Q(lp_st_dup[1]),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4 lp_state_sync0_i
       (.D({lp_state_sync0_i_n_3,lp_state_sync0_i_n_4}),
        .\FSM_sequential_dl_rx_state_reg[0] (dl_status_reg_bit_0_i_3__0_n_0),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (\FSM_sequential_dl_rx_state[2]_i_3__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2] (\FSM_sequential_dl_rx_state[1]_i_3__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[3] ({dl_rx_state,dl_en_hs_lpn_reg_0}),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_reg),
        .core_clk(core_clk),
        .dl_status_reg(dl_status_reg[0]),
        .dl_status_reg_bit_0_reg(lp_state_sync0_i_n_1),
        .dl_stopstate_reg(lp_state_sync0_i_n_2),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .lp_00_r(lp_00_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_11_r_reg_n_0),
        .out(lp_state_sync[0]),
        .rx_dl1_lp_dn(rx_dl1_lp_dn),
        .s_level_out_d2_reg_0(lp_state_sync[1]),
        .system_rst_reg(out));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5 lp_state_sync1_i
       (.D(lp_st_cnt),
        .E(lp_state_sync1_i_n_1),
        .\FSM_sequential_dl_rx_state_reg[0] (\FSM_sequential_dl_rx_state[3]_i_6__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[1] (lp_state_sync0_i_n_2),
        .\FSM_sequential_dl_rx_state_reg[2] (dl_en_hs_lpn_i_5__0_n_0),
        .\FSM_sequential_dl_rx_state_reg[3] (lp_state_sync1_i_n_10),
        .\FSM_sequential_dl_rx_state_reg[3]_0 ({dl_rx_state,dl_en_hs_lpn_reg_0}),
        .Q({\lp_st_cnt_reg_n_0_[4] ,\lp_st_cnt_reg_n_0_[3] ,\lp_st_cnt_reg_n_0_[2] ,\lp_st_cnt_reg_n_0_[1] ,\lp_st_cnt_reg_n_0_[0] }),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_reg_0),
        .cl_rxclkactivehs_reg_0(cl_rxclkactivehs_reg),
        .core_clk(core_clk),
        .dl_en_hs_lpn_reg(lp_state_sync1_i_n_7),
        .dl_en_hs_lpn_reg_0(dl_en_hs_lpn_i),
        .dl_status_reg(dl_status_reg[1]),
        .dl_status_reg_bit_4_reg(lp_state_sync1_i_n_8),
        .dl_stopstate(dl_stopstate),
        .dl_stopstate_reg(lp_state_sync1_i_n_9),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .lp_00_r(lp_00_r),
        .lp_01_r(lp_01_r),
        .lp_10_r(lp_10_r),
        .lp_10_r_reg(\lp_st_cnt[0]_i_2__0_n_0 ),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_11_r_reg_n_0),
        .lp_11_r_reg_0(dl_en_hs_lpn_i_2__0_n_0),
        .\lp_st_cnt_reg[3] (\lp_st_cnt[0]_i_4__0_n_0 ),
        .\lp_st_dup_reg[1] (lp_st_dup),
        .out(lp_state_sync[1]),
        .rx_dl1_lp_dp(rx_dl1_lp_dp),
        .s_level_out_d2_reg_0(lp_state_sync[0]),
        .system_rst_reg(out),
        .time_out_settle_reg(time_out_settle_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \settle_cnt[0]_i_1__0 
       (.I0(Q[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \settle_cnt[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \settle_cnt[2]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \settle_cnt[3]_i_1__0 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \settle_cnt[4]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \settle_cnt[5]_i_1__0 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \settle_cnt[6]_i_1__0 
       (.I0(Q[6]),
        .I1(\settle_cnt[7]_i_3__0_n_0 ),
        .O(p_0_in[6]));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \settle_cnt[7]_i_1__0 
       (.I0(dl_rx_state[3]),
        .I1(dl_rx_state[2]),
        .I2(dl_en_hs_lpn_reg_0),
        .I3(dl_rx_state[1]),
        .O(\settle_cnt[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \settle_cnt[7]_i_2__0 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(\settle_cnt[7]_i_3__0_n_0 ),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \settle_cnt[7]_i_3__0 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\settle_cnt[7]_i_3__0_n_0 ));
  FDRE \settle_cnt_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(Q[0]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(Q[1]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(Q[2]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[3]),
        .Q(Q[3]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(Q[4]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(Q[5]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(Q[6]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(Q[7]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  CARRY4 time_out_settle0_carry
       (.CI(1'b0),
        .CO({time_out_settle0_carry_n_0,time_out_settle0_carry_n_1,time_out_settle0_carry_n_2,time_out_settle0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry_O_UNCONNECTED[3:0]),
        .S(\s_level_out_bus_d3_reg[4] ));
  CARRY4 time_out_settle0_carry__0
       (.CI(time_out_settle0_carry_n_0),
        .CO({time_out_settle0_carry__0_n_0,time_out_settle0_carry__0_n_1,time_out_settle0_carry__0_n_2,time_out_settle0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry__0_O_UNCONNECTED[3:0]),
        .S(\s_level_out_bus_d3_reg[4]_0 ));
  CARRY4 time_out_settle0_carry__1
       (.CI(time_out_settle0_carry__0_n_0),
        .CO({NLW_time_out_settle0_carry__1_CO_UNCONNECTED[3],time_out_settle0_carry__1_n_1,time_out_settle0_carry__1_n_2,time_out_settle0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sel,NLW_time_out_settle0_carry__1_O_UNCONNECTED[2:0]}),
        .S({1'b1,\s_level_out_bus_d3_reg[4]_1 }));
  LUT6 #(
    .INIT(64'h0E00000000000000)) 
    time_out_settle_i_1__0
       (.I0(time_out_settle_reg_n_0),
        .I1(time_out_settle0_carry__1_n_1),
        .I2(dl_rx_state[3]),
        .I3(dl_en_hs_lpn_reg_0),
        .I4(dl_rx_state[2]),
        .I5(dl_rx_state[1]),
        .O(time_out_settle_i_1__0_n_0));
  FDRE time_out_settle_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_settle_i_1__0_n_0),
        .Q(time_out_settle_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_csi_rx_data_lane_sm" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7
   (dl_status_reg,
    dl_en_hs_lpn_i,
    Q,
    dl_en_hs_lpn_reg_0,
    \gen_hs_high_rates.stopstate_reg ,
    \gen_hs_high_rates.dl_state_reg[0] ,
    \gen_hs_high_rates.dl_state_reg[1] ,
    rx_dl0_lp_dn,
    rx_dl0_lp_dp,
    core_clk,
    S,
    \s_level_out_bus_d3_reg[4] ,
    \s_level_out_bus_d3_reg[4]_0 ,
    core_rst,
    out,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    cl_rxclkactivehs_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    cl_rxclkactivehs_reg_0,
    active_sm_r__2,
    \gen_hs_high_rates.dl_state_reg[1]_0 ,
    \gen_hs_high_rates.dl_state_reg[0]_0 ,
    dl0_stopstate,
    \gen_hs_high_rates.active_sm_r_reg ,
    stop_state_extn_r,
    s_level_out_d2_reg,
    rxactivehs_coreclk_sync_r);
  output [2:0]dl_status_reg;
  output dl_en_hs_lpn_i;
  output [7:0]Q;
  output [0:0]dl_en_hs_lpn_reg_0;
  output \gen_hs_high_rates.stopstate_reg ;
  output \gen_hs_high_rates.dl_state_reg[0] ;
  output \gen_hs_high_rates.dl_state_reg[1] ;
  input rx_dl0_lp_dn;
  input rx_dl0_lp_dp;
  input core_clk;
  input [3:0]S;
  input [3:0]\s_level_out_bus_d3_reg[4] ;
  input [2:0]\s_level_out_bus_d3_reg[4]_0 ;
  input core_rst;
  input out;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input cl_rxclkactivehs_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input cl_rxclkactivehs_reg_0;
  input active_sm_r__2;
  input \gen_hs_high_rates.dl_state_reg[1]_0 ;
  input \gen_hs_high_rates.dl_state_reg[0]_0 ;
  input dl0_stopstate;
  input \gen_hs_high_rates.active_sm_r_reg ;
  input stop_state_extn_r;
  input s_level_out_d2_reg;
  input rxactivehs_coreclk_sync_r;

  wire \FSM_sequential_dl_rx_state[0]_i_1_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_3_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_3_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_6_n_0 ;
  wire [7:0]Q;
  wire [3:0]S;
  wire active_sm_r__2;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire core_clk;
  wire core_rst;
  wire dl0_stopstate;
  wire dl_en_hs_lpn_i;
  wire dl_en_hs_lpn_i_2_n_0;
  wire dl_en_hs_lpn_i_5_n_0;
  (* RTL_KEEP = "yes" *) wire [0:0]dl_en_hs_lpn_reg_0;
  (* RTL_KEEP = "yes" *) wire [3:1]dl_rx_state;
  wire [2:0]dl_status_reg;
  wire dl_status_reg_bit_0_i_3_n_0;
  wire dl_stopstate;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire \gen_hs_high_rates.active_sm_r_reg ;
  wire \gen_hs_high_rates.dl_state[0]_i_2_n_0 ;
  wire \gen_hs_high_rates.dl_state_reg[0] ;
  wire \gen_hs_high_rates.dl_state_reg[0]_0 ;
  wire \gen_hs_high_rates.dl_state_reg[1] ;
  wire \gen_hs_high_rates.dl_state_reg[1]_0 ;
  wire \gen_hs_high_rates.stopstate_i_3_n_0 ;
  wire \gen_hs_high_rates.stopstate_i_5_n_0 ;
  wire \gen_hs_high_rates.stopstate_reg ;
  wire lp_00_r;
  wire lp_00_r_i_2__0_n_0;
  wire lp_01_r;
  wire lp_01_r_i_1__0_n_0;
  wire lp_10_r;
  wire lp_10_r_i_1__0_n_0;
  wire lp_11_r;
  wire lp_11_r_dly;
  wire lp_11_r_i_1__0_n_0;
  wire lp_11_r_nxt;
  wire lp_11_r_reg_n_0;
  wire [4:0]lp_st_cnt;
  wire \lp_st_cnt[0]_i_2_n_0 ;
  wire \lp_st_cnt[0]_i_4_n_0 ;
  wire \lp_st_cnt_reg_n_0_[0] ;
  wire \lp_st_cnt_reg_n_0_[1] ;
  wire \lp_st_cnt_reg_n_0_[2] ;
  wire \lp_st_cnt_reg_n_0_[3] ;
  wire \lp_st_cnt_reg_n_0_[4] ;
  wire [1:0]lp_st_dup;
  wire [1:0]lp_state_sync;
  wire lp_state_sync0_i_n_1;
  wire lp_state_sync0_i_n_2;
  wire lp_state_sync0_i_n_3;
  wire lp_state_sync0_i_n_4;
  wire lp_state_sync1_i_n_1;
  wire lp_state_sync1_i_n_10;
  wire lp_state_sync1_i_n_7;
  wire lp_state_sync1_i_n_8;
  wire lp_state_sync1_i_n_9;
  wire out;
  wire [7:0]p_0_in;
  wire rx_dl0_lp_dn;
  wire rx_dl0_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire [3:0]\s_level_out_bus_d3_reg[4] ;
  wire [2:0]\s_level_out_bus_d3_reg[4]_0 ;
  wire s_level_out_d2_reg;
  wire sel;
  wire \settle_cnt[7]_i_1_n_0 ;
  wire \settle_cnt[7]_i_3_n_0 ;
  wire stop_state_extn_r;
  wire stopstate12_out;
  wire stopstate14_out;
  wire time_out_settle0_carry__0_n_0;
  wire time_out_settle0_carry__0_n_1;
  wire time_out_settle0_carry__0_n_2;
  wire time_out_settle0_carry__0_n_3;
  wire time_out_settle0_carry__1_n_1;
  wire time_out_settle0_carry__1_n_2;
  wire time_out_settle0_carry__1_n_3;
  wire time_out_settle0_carry_n_0;
  wire time_out_settle0_carry_n_1;
  wire time_out_settle0_carry_n_2;
  wire time_out_settle0_carry_n_3;
  wire time_out_settle_i_1_n_0;
  wire time_out_settle_reg_n_0;
  wire [3:0]NLW_time_out_settle0_carry_O_UNCONNECTED;
  wire [3:0]NLW_time_out_settle0_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_time_out_settle0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_time_out_settle0_carry__1_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'hFFE2E2E2)) 
    \FSM_sequential_dl_rx_state[0]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[0]_i_2_n_0 ),
        .I1(dl_rx_state[1]),
        .I2(\FSM_sequential_dl_rx_state[1]_i_3_n_0 ),
        .I3(out),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(\FSM_sequential_dl_rx_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h03003737)) 
    \FSM_sequential_dl_rx_state[0]_i_2 
       (.I0(cl_rxclkactivehs_reg),
        .I1(dl_rx_state[3]),
        .I2(dl_rx_state[2]),
        .I3(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I4(dl_en_hs_lpn_reg_0),
        .O(\FSM_sequential_dl_rx_state[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_sequential_dl_rx_state[1]_i_3 
       (.I0(dl_rx_state[2]),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_en_hs_lpn_reg_0),
        .I3(dl_rx_state[3]),
        .O(\FSM_sequential_dl_rx_state[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E6)) 
    \FSM_sequential_dl_rx_state[2]_i_3 
       (.I0(dl_en_hs_lpn_reg_0),
        .I1(dl_rx_state[2]),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state[3]),
        .O(\FSM_sequential_dl_rx_state[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_rx_state[3]_i_6 
       (.I0(dl_en_hs_lpn_reg_0),
        .I1(lp_11_r_reg_n_0),
        .O(\FSM_sequential_dl_rx_state[3]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[0] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(\FSM_sequential_dl_rx_state[0]_i_1_n_0 ),
        .Q(dl_en_hs_lpn_reg_0));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[1] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(lp_state_sync0_i_n_4),
        .Q(dl_rx_state[1]));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[2] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(lp_state_sync0_i_n_3),
        .Q(dl_rx_state[2]));
  (* FSM_ENCODED_STATES = "DL_RX_BEGIN:0000,DL_WO_INIT_LP_11:0001,DL_RX_INIT_DONE:0011,DL_RX_STOP:0100,DL_RX_HS_RQST:0101,DL_RX_HS_TERM:0110,DL_RX_HS_SYNC:0111,DL_RX_HS_RUN:1000,DL_RX_HS_ABORT:1001,iSTATE:0010" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_dl_rx_state_reg[3] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_10),
        .Q(dl_rx_state[3]));
  LUT2 #(
    .INIT(4'hB)) 
    dl_en_hs_lpn_i_2
       (.I0(lp_11_r_reg_n_0),
        .I1(cl_rxclkactivehs_reg),
        .O(dl_en_hs_lpn_i_2_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAA8000)) 
    dl_en_hs_lpn_i_5
       (.I0(dl_rx_state[2]),
        .I1(time_out_settle_reg_n_0),
        .I2(cl_rxclkactivehs_reg),
        .I3(dl_en_hs_lpn_reg_0),
        .I4(lp_11_r_reg_n_0),
        .I5(dl_rx_state[3]),
        .O(dl_en_hs_lpn_i_5_n_0));
  FDCE dl_en_hs_lpn_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_7),
        .Q(dl_en_hs_lpn_i));
  LUT4 #(
    .INIT(16'h0045)) 
    dl_status_reg_bit_0_i_3
       (.I0(dl_en_hs_lpn_reg_0),
        .I1(lp_11_r_reg_n_0),
        .I2(cl_rxclkactivehs_reg),
        .I3(dl_rx_state[2]),
        .O(dl_status_reg_bit_0_i_3_n_0));
  FDCE dl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync0_i_n_1),
        .Q(dl_status_reg[0]));
  FDCE dl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_8),
        .Q(dl_status_reg[1]));
  FDRE dl_status_reg_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_stopstate),
        .Q(dl_status_reg[2]),
        .R(1'b0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_9),
        .Q(dl_stopstate));
  LUT6 #(
    .INIT(64'h333388B8000088B8)) 
    \gen_hs_high_rates.dl_state[0]_i_1 
       (.I0(\gen_hs_high_rates.dl_state[0]_i_2_n_0 ),
        .I1(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I2(dl_stopstate),
        .I3(stopstate14_out),
        .I4(\gen_hs_high_rates.dl_state_reg[1]_0 ),
        .I5(active_sm_r__2),
        .O(\gen_hs_high_rates.dl_state_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h002F)) 
    \gen_hs_high_rates.dl_state[0]_i_2 
       (.I0(dl_stopstate),
        .I1(\gen_hs_high_rates.active_sm_r_reg ),
        .I2(stop_state_extn_r),
        .I3(dl_en_hs_lpn_i),
        .O(\gen_hs_high_rates.dl_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00B833B8)) 
    \gen_hs_high_rates.dl_state[1]_i_1 
       (.I0(stopstate12_out),
        .I1(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I2(stopstate14_out),
        .I3(\gen_hs_high_rates.dl_state_reg[1]_0 ),
        .I4(active_sm_r__2),
        .O(\gen_hs_high_rates.dl_state_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \gen_hs_high_rates.dl_state[1]_i_2 
       (.I0(dl_en_hs_lpn_i),
        .I1(stop_state_extn_r),
        .I2(\gen_hs_high_rates.active_sm_r_reg ),
        .O(stopstate12_out));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \gen_hs_high_rates.dl_state[1]_i_3 
       (.I0(dl_en_hs_lpn_i),
        .I1(rxactivehs_coreclk_sync_r),
        .I2(s_level_out_d2_reg),
        .O(stopstate14_out));
  LUT6 #(
    .INIT(64'hFAFAFAFF0ACA0AC0)) 
    \gen_hs_high_rates.stopstate_i_2__0 
       (.I0(\gen_hs_high_rates.stopstate_i_3_n_0 ),
        .I1(active_sm_r__2),
        .I2(\gen_hs_high_rates.dl_state_reg[1]_0 ),
        .I3(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I4(\gen_hs_high_rates.stopstate_i_5_n_0 ),
        .I5(dl0_stopstate),
        .O(\gen_hs_high_rates.stopstate_reg ));
  LUT6 #(
    .INIT(64'h0700030007FF0300)) 
    \gen_hs_high_rates.stopstate_i_3 
       (.I0(\gen_hs_high_rates.active_sm_r_reg ),
        .I1(stop_state_extn_r),
        .I2(dl_en_hs_lpn_i),
        .I3(\gen_hs_high_rates.dl_state_reg[0]_0 ),
        .I4(dl_stopstate),
        .I5(stopstate14_out),
        .O(\gen_hs_high_rates.stopstate_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hFFF2)) 
    \gen_hs_high_rates.stopstate_i_5 
       (.I0(s_level_out_d2_reg),
        .I1(rxactivehs_coreclk_sync_r),
        .I2(dl_en_hs_lpn_i),
        .I3(dl_stopstate),
        .O(\gen_hs_high_rates.stopstate_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    lp_00_r_i_1__0
       (.I0(\lp_st_cnt_reg_n_0_[0] ),
        .I1(\lp_st_cnt_reg_n_0_[1] ),
        .I2(\lp_st_cnt_reg_n_0_[2] ),
        .I3(\lp_st_cnt_reg_n_0_[4] ),
        .I4(\lp_st_cnt_reg_n_0_[3] ),
        .O(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h1)) 
    lp_00_r_i_2__0
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_00_r_i_2__0_n_0));
  FDRE lp_00_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_00_r_i_2__0_n_0),
        .Q(lp_00_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_01_r_i_1__0
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_01_r_i_1__0_n_0));
  FDRE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_01_r_i_1__0_n_0),
        .Q(lp_01_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_10_r_i_1__0
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_10_r_i_1__0_n_0));
  FDRE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_10_r_i_1__0_n_0),
        .Q(lp_10_r),
        .R(lp_11_r));
  FDRE lp_11_r_dly_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_nxt),
        .Q(lp_11_r_dly),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h8)) 
    lp_11_r_i_1__0
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_11_r_i_1__0_n_0));
  FDRE lp_11_r_nxt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_reg_n_0),
        .Q(lp_11_r_nxt),
        .R(1'b0));
  FDRE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_i_1__0_n_0),
        .Q(lp_11_r_reg_n_0),
        .R(lp_11_r));
  LUT2 #(
    .INIT(4'h1)) 
    \lp_st_cnt[0]_i_2 
       (.I0(lp_10_r),
        .I1(lp_00_r),
        .O(\lp_st_cnt[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \lp_st_cnt[0]_i_4 
       (.I0(\lp_st_cnt_reg_n_0_[3] ),
        .I1(\lp_st_cnt_reg_n_0_[4] ),
        .I2(\lp_st_cnt_reg_n_0_[2] ),
        .I3(\lp_st_cnt_reg_n_0_[1] ),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(\lp_st_cnt[0]_i_4_n_0 ));
  FDRE \lp_st_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[0]),
        .Q(\lp_st_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[1]),
        .Q(\lp_st_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[2]),
        .Q(\lp_st_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[3]),
        .Q(\lp_st_cnt_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[4]),
        .Q(\lp_st_cnt_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \lp_st_dup_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[0]),
        .Q(lp_st_dup[0]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[1]),
        .Q(lp_st_dup[1]),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11 lp_state_sync0_i
       (.D({lp_state_sync0_i_n_3,lp_state_sync0_i_n_4}),
        .\FSM_sequential_dl_rx_state_reg[0] (dl_status_reg_bit_0_i_3_n_0),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (\FSM_sequential_dl_rx_state[2]_i_3_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2] (\FSM_sequential_dl_rx_state[1]_i_3_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[3] ({dl_rx_state,dl_en_hs_lpn_reg_0}),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_reg),
        .core_clk(core_clk),
        .dl_status_reg(dl_status_reg[0]),
        .dl_status_reg_bit_0_reg(lp_state_sync0_i_n_1),
        .dl_stopstate_reg(lp_state_sync0_i_n_2),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .lp_00_r(lp_00_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_11_r_reg_n_0),
        .out(lp_state_sync[0]),
        .rx_dl0_lp_dn(rx_dl0_lp_dn),
        .s_level_out_d2_reg_0(lp_state_sync[1]),
        .system_rst_reg(out));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12 lp_state_sync1_i
       (.D(lp_st_cnt),
        .E(lp_state_sync1_i_n_1),
        .\FSM_sequential_dl_rx_state_reg[0] (\FSM_sequential_dl_rx_state[3]_i_6_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[1] (lp_state_sync0_i_n_2),
        .\FSM_sequential_dl_rx_state_reg[2] (dl_en_hs_lpn_i_5_n_0),
        .\FSM_sequential_dl_rx_state_reg[3] (lp_state_sync1_i_n_10),
        .\FSM_sequential_dl_rx_state_reg[3]_0 ({dl_rx_state,dl_en_hs_lpn_reg_0}),
        .Q({\lp_st_cnt_reg_n_0_[4] ,\lp_st_cnt_reg_n_0_[3] ,\lp_st_cnt_reg_n_0_[2] ,\lp_st_cnt_reg_n_0_[1] ,\lp_st_cnt_reg_n_0_[0] }),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_reg_0),
        .cl_rxclkactivehs_reg_0(cl_rxclkactivehs_reg),
        .core_clk(core_clk),
        .dl_en_hs_lpn_reg(lp_state_sync1_i_n_7),
        .dl_en_hs_lpn_reg_0(dl_en_hs_lpn_i),
        .dl_status_reg(dl_status_reg[1]),
        .dl_status_reg_bit_4_reg(lp_state_sync1_i_n_8),
        .dl_stopstate(dl_stopstate),
        .dl_stopstate_reg(lp_state_sync1_i_n_9),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .lp_00_r(lp_00_r),
        .lp_01_r(lp_01_r),
        .lp_10_r(lp_10_r),
        .lp_10_r_reg(\lp_st_cnt[0]_i_2_n_0 ),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_11_r_reg_n_0),
        .lp_11_r_reg_0(dl_en_hs_lpn_i_2_n_0),
        .\lp_st_cnt_reg[3] (\lp_st_cnt[0]_i_4_n_0 ),
        .\lp_st_dup_reg[1] (lp_st_dup),
        .out(lp_state_sync[1]),
        .rx_dl0_lp_dp(rx_dl0_lp_dp),
        .s_level_out_d2_reg_0(lp_state_sync[0]),
        .system_rst_reg(out),
        .time_out_settle_reg(time_out_settle_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \settle_cnt[0]_i_1 
       (.I0(Q[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \settle_cnt[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \settle_cnt[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \settle_cnt[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \settle_cnt[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \settle_cnt[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \settle_cnt[6]_i_1 
       (.I0(Q[6]),
        .I1(\settle_cnt[7]_i_3_n_0 ),
        .O(p_0_in[6]));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \settle_cnt[7]_i_1 
       (.I0(dl_rx_state[3]),
        .I1(dl_rx_state[2]),
        .I2(dl_en_hs_lpn_reg_0),
        .I3(dl_rx_state[1]),
        .O(\settle_cnt[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \settle_cnt[7]_i_2 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(\settle_cnt[7]_i_3_n_0 ),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \settle_cnt[7]_i_3 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\settle_cnt[7]_i_3_n_0 ));
  FDRE \settle_cnt_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(Q[0]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(Q[1]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(Q[2]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[3]),
        .Q(Q[3]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(Q[4]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(Q[5]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(Q[6]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(Q[7]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  CARRY4 time_out_settle0_carry
       (.CI(1'b0),
        .CO({time_out_settle0_carry_n_0,time_out_settle0_carry_n_1,time_out_settle0_carry_n_2,time_out_settle0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry_O_UNCONNECTED[3:0]),
        .S(S));
  CARRY4 time_out_settle0_carry__0
       (.CI(time_out_settle0_carry_n_0),
        .CO({time_out_settle0_carry__0_n_0,time_out_settle0_carry__0_n_1,time_out_settle0_carry__0_n_2,time_out_settle0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry__0_O_UNCONNECTED[3:0]),
        .S(\s_level_out_bus_d3_reg[4] ));
  CARRY4 time_out_settle0_carry__1
       (.CI(time_out_settle0_carry__0_n_0),
        .CO({NLW_time_out_settle0_carry__1_CO_UNCONNECTED[3],time_out_settle0_carry__1_n_1,time_out_settle0_carry__1_n_2,time_out_settle0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({sel,NLW_time_out_settle0_carry__1_O_UNCONNECTED[2:0]}),
        .S({1'b1,\s_level_out_bus_d3_reg[4]_0 }));
  LUT6 #(
    .INIT(64'h0E00000000000000)) 
    time_out_settle_i_1
       (.I0(time_out_settle_reg_n_0),
        .I1(time_out_settle0_carry__1_n_1),
        .I2(dl_rx_state[3]),
        .I3(dl_en_hs_lpn_reg_0),
        .I4(dl_rx_state[2]),
        .I5(dl_rx_state[1]),
        .O(time_out_settle_i_1_n_0));
  FDRE time_out_settle_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_settle_i_1_n_0),
        .Q(time_out_settle_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_data_lane" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane
   (dl_status_reg,
    dl_pkt_cnt,
    dl0_rxactivehs,
    dl0_rxvalidhs,
    dl0_rxsynchs,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_stopstate,
    Q,
    SR,
    dl_en_hs_lpn_reg,
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ,
    dl0_rxdatahs,
    tap_comp_rst,
    rx_div4_clk,
    rx_dl0_lp_dn,
    rx_dl0_lp_dp,
    core_clk,
    stg3_reg,
    core_rst,
    S,
    \s_level_out_bus_d3_reg[4] ,
    \s_level_out_bus_d3_reg[4]_0 ,
    cal_done,
    stopstate0,
    out,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    cl_rxclkactivehs_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    cl_rxclkactivehs_reg_0,
    s_level_out_d3_reg,
    \two_lane_hs_rx_timeout.hs_wait_count_reg[14] ,
    prmry_in,
    rx_dl0_hs_dp);
  output [2:0]dl_status_reg;
  output [15:0]dl_pkt_cnt;
  output dl0_rxactivehs;
  output dl0_rxvalidhs;
  output dl0_rxsynchs;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_stopstate;
  output [7:0]Q;
  output [0:0]SR;
  output [0:0]dl_en_hs_lpn_reg;
  output \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  output [7:0]dl0_rxdatahs;
  input tap_comp_rst;
  input rx_div4_clk;
  input rx_dl0_lp_dn;
  input rx_dl0_lp_dp;
  input core_clk;
  input stg3_reg;
  input core_rst;
  input [3:0]S;
  input [3:0]\s_level_out_bus_d3_reg[4] ;
  input [2:0]\s_level_out_bus_d3_reg[4]_0 ;
  input cal_done;
  input stopstate0;
  input out;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input cl_rxclkactivehs_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input cl_rxclkactivehs_reg_0;
  input s_level_out_d3_reg;
  input \two_lane_hs_rx_timeout.hs_wait_count_reg[14] ;
  input prmry_in;
  input [7:0]rx_dl0_hs_dp;

  wire [7:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire active_sm_r__2;
  wire cal_done;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire core_clk;
  wire core_rst;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl_en_hs_lpn_i;
  wire [0:0]dl_en_hs_lpn_reg;
  wire [15:0]dl_pkt_cnt;
  wire [2:0]dl_status_reg;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1_nxt;
  (* DONT_TOUCH *) wire fifo_rd_rst_t2;
  wire \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13 ;
  wire \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14 ;
  wire \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15 ;
  wire \gen_hs_high_rates.active_sm_r_reg_n_0 ;
  wire \gen_hs_high_rates.dl_state_reg_n_0_[0] ;
  wire \gen_hs_high_rates.dl_state_reg_n_0_[1] ;
  wire \gen_hs_high_rates.stop_extn_cnt[0]_i_1_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[1]_i_1_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[2]_i_1_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[3]_i_1_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[4]_i_2_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0 ;
  wire \gen_hs_high_rates.stop_state_extn_r_i_1_n_0 ;
  wire \gen_hs_high_rates.stop_state_extn_r_i_2_n_0 ;
  wire out;
  wire pkt_cnt_r0;
  wire \pkt_cnt_r[0]_i_3_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_1 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_2 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_3 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_4 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_5 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_6 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_7 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_1 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_2 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_3 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_4 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_5 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_6 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_7 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_0 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_1 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_2 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_3 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_4 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_5 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_6 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_7 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_0 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_1 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_2 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_3 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_4 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_5 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_6 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_7 ;
  wire prmry_in;
  wire rx_div4_clk;
  wire [7:0]rx_dl0_hs_dp;
  wire rx_dl0_lp_dn;
  wire rx_dl0_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire rxactivehs_sync;
  wire rxactivehs_sync_i_n_1;
  wire [3:0]\s_level_out_bus_d3_reg[4] ;
  wire [2:0]\s_level_out_bus_d3_reg[4]_0 ;
  wire s_level_out_d3_reg;
  wire stg3_reg;
  wire [4:0]stop_extn_cnt;
  wire stop_state_extn_r;
  wire stopstate0;
  wire tap_comp_rst;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[14] ;
  wire \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  wire \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ;
  wire [3:3]\NLW_pkt_cnt_r_reg[12]_i_1_CO_UNCONNECTED ;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_nxt_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_rst_t1),
        .Q(fifo_rd_rst_t1_nxt),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg3_reg),
        .Q(fifo_rd_rst_t1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg3_reg),
        .Q(fifo_rd_rst_t2),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6 \gen_calib_result.cal_done_sync_i 
       (.cal_done(cal_done),
        .rx_div4_clk(rx_div4_clk));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1 \gen_calib_result.u_tap_comp_rst_byteclk_sync_i 
       (.prmry_in(tap_comp_rst),
        .scndry_aclk(rx_div4_clk),
        .scndry_out(\NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm_7 \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm 
       (.Q(Q),
        .S(S),
        .active_sm_r__2(active_sm_r__2),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_reg),
        .cl_rxclkactivehs_reg_0(cl_rxclkactivehs_reg_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_stopstate(dl0_stopstate),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .dl_en_hs_lpn_reg_0(dl_en_hs_lpn_reg),
        .dl_status_reg(dl_status_reg),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .\gen_hs_high_rates.active_sm_r_reg (\gen_hs_high_rates.active_sm_r_reg_n_0 ),
        .\gen_hs_high_rates.dl_state_reg[0] (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14 ),
        .\gen_hs_high_rates.dl_state_reg[0]_0 (\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .\gen_hs_high_rates.dl_state_reg[1] (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15 ),
        .\gen_hs_high_rates.dl_state_reg[1]_0 (\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .\gen_hs_high_rates.stopstate_reg (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13 ),
        .out(out),
        .rx_dl0_lp_dn(rx_dl0_lp_dn),
        .rx_dl0_lp_dp(rx_dl0_lp_dp),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .\s_level_out_bus_d3_reg[4] (\s_level_out_bus_d3_reg[4] ),
        .\s_level_out_bus_d3_reg[4]_0 (\s_level_out_bus_d3_reg[4]_0 ),
        .s_level_out_d2_reg(rxactivehs_sync),
        .stop_state_extn_r(stop_state_extn_r));
  FDRE \gen_hs_high_rates.active_sm_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(rxactivehs_sync_i_n_1),
        .Q(\gen_hs_high_rates.active_sm_r_reg_n_0 ),
        .R(stopstate0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_hs_high_rates.dl_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14 ),
        .Q(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .R(stopstate0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_hs_high_rates.dl_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15 ),
        .Q(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .R(stopstate0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8 \gen_hs_high_rates.rx_sot_det_align_i 
       (.E(dl0_rxactivehs),
        .SR(SR),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .pkt_cnt_r0(pkt_cnt_r0),
        .prmry_in(prmry_in),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl0_hs_dp(rx_dl0_hs_dp),
        .s_level_out_d3_reg(s_level_out_d3_reg),
        .\two_lane_hs_rx_timeout.hs_wait_count_reg[14] (\two_lane_hs_rx_timeout.hs_wait_count_reg[14] ),
        .\two_lane_hs_rx_timeout.maxfrm_wait_done_reg (\two_lane_hs_rx_timeout.maxfrm_wait_done_reg ));
  FDCE \gen_hs_high_rates.rxactivehs_coreclk_sync_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(rxactivehs_sync),
        .Q(rxactivehs_coreclk_sync_r));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_hs_high_rates.stop_extn_cnt[0]_i_1 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[0]),
        .O(\gen_hs_high_rates.stop_extn_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h0440)) 
    \gen_hs_high_rates.stop_extn_cnt[1]_i_1 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[0]),
        .I3(stop_extn_cnt[1]),
        .O(\gen_hs_high_rates.stop_extn_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h04444000)) 
    \gen_hs_high_rates.stop_extn_cnt[2]_i_1 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[0]),
        .I3(stop_extn_cnt[1]),
        .I4(stop_extn_cnt[2]),
        .O(\gen_hs_high_rates.stop_extn_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0444444440000000)) 
    \gen_hs_high_rates.stop_extn_cnt[3]_i_1 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[1]),
        .I3(stop_extn_cnt[0]),
        .I4(stop_extn_cnt[2]),
        .I5(stop_extn_cnt[3]),
        .O(\gen_hs_high_rates.stop_extn_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \gen_hs_high_rates.stop_extn_cnt[4]_i_1 
       (.I0(\gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0 ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I3(stop_extn_cnt[2]),
        .I4(stop_extn_cnt[3]),
        .I5(stop_extn_cnt[4]),
        .O(\gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0444444440000000)) 
    \gen_hs_high_rates.stop_extn_cnt[4]_i_2 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[2]),
        .I3(\gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0 ),
        .I4(stop_extn_cnt[3]),
        .I5(stop_extn_cnt[4]),
        .O(\gen_hs_high_rates.stop_extn_cnt[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_hs_high_rates.stop_extn_cnt[4]_i_3 
       (.I0(stop_extn_cnt[1]),
        .I1(stop_extn_cnt[0]),
        .O(\gen_hs_high_rates.stop_extn_cnt[4]_i_3_n_0 ));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[0] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[0]_i_1_n_0 ),
        .Q(stop_extn_cnt[0]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[1] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[1]_i_1_n_0 ),
        .Q(stop_extn_cnt[1]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[2] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[2]_i_1_n_0 ),
        .Q(stop_extn_cnt[2]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[3] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[3]_i_1_n_0 ),
        .Q(stop_extn_cnt[3]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[4] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[4]_i_2_n_0 ),
        .Q(stop_extn_cnt[4]));
  LUT4 #(
    .INIT(16'h2220)) 
    \gen_hs_high_rates.stop_state_extn_r_i_1 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I2(\gen_hs_high_rates.stop_state_extn_r_i_2_n_0 ),
        .I3(stop_state_extn_r),
        .O(\gen_hs_high_rates.stop_state_extn_r_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \gen_hs_high_rates.stop_state_extn_r_i_2 
       (.I0(stop_extn_cnt[0]),
        .I1(stop_extn_cnt[2]),
        .I2(stop_extn_cnt[1]),
        .I3(stop_extn_cnt[3]),
        .I4(stop_extn_cnt[4]),
        .O(\gen_hs_high_rates.stop_state_extn_r_i_2_n_0 ));
  FDCE \gen_hs_high_rates.stop_state_extn_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_state_extn_r_i_1_n_0 ),
        .Q(stop_state_extn_r));
  FDRE \gen_hs_high_rates.stopstate_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13 ),
        .Q(dl0_stopstate),
        .R(stopstate0));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt_r[0]_i_3 
       (.I0(dl_pkt_cnt[0]),
        .O(\pkt_cnt_r[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_7 ),
        .Q(dl_pkt_cnt[0]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\pkt_cnt_r_reg[0]_i_2_n_0 ,\pkt_cnt_r_reg[0]_i_2_n_1 ,\pkt_cnt_r_reg[0]_i_2_n_2 ,\pkt_cnt_r_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_r_reg[0]_i_2_n_4 ,\pkt_cnt_r_reg[0]_i_2_n_5 ,\pkt_cnt_r_reg[0]_i_2_n_6 ,\pkt_cnt_r_reg[0]_i_2_n_7 }),
        .S({dl_pkt_cnt[3:1],\pkt_cnt_r[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[10] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_5 ),
        .Q(dl_pkt_cnt[10]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[11] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_4 ),
        .Q(dl_pkt_cnt[11]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[12] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_7 ),
        .Q(dl_pkt_cnt[12]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[12]_i_1 
       (.CI(\pkt_cnt_r_reg[8]_i_1_n_0 ),
        .CO({\NLW_pkt_cnt_r_reg[12]_i_1_CO_UNCONNECTED [3],\pkt_cnt_r_reg[12]_i_1_n_1 ,\pkt_cnt_r_reg[12]_i_1_n_2 ,\pkt_cnt_r_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[12]_i_1_n_4 ,\pkt_cnt_r_reg[12]_i_1_n_5 ,\pkt_cnt_r_reg[12]_i_1_n_6 ,\pkt_cnt_r_reg[12]_i_1_n_7 }),
        .S(dl_pkt_cnt[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[13] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_6 ),
        .Q(dl_pkt_cnt[13]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[14] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_5 ),
        .Q(dl_pkt_cnt[14]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[15] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_4 ),
        .Q(dl_pkt_cnt[15]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_6 ),
        .Q(dl_pkt_cnt[1]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_5 ),
        .Q(dl_pkt_cnt[2]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_4 ),
        .Q(dl_pkt_cnt[3]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_7 ),
        .Q(dl_pkt_cnt[4]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[4]_i_1 
       (.CI(\pkt_cnt_r_reg[0]_i_2_n_0 ),
        .CO({\pkt_cnt_r_reg[4]_i_1_n_0 ,\pkt_cnt_r_reg[4]_i_1_n_1 ,\pkt_cnt_r_reg[4]_i_1_n_2 ,\pkt_cnt_r_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[4]_i_1_n_4 ,\pkt_cnt_r_reg[4]_i_1_n_5 ,\pkt_cnt_r_reg[4]_i_1_n_6 ,\pkt_cnt_r_reg[4]_i_1_n_7 }),
        .S(dl_pkt_cnt[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_6 ),
        .Q(dl_pkt_cnt[5]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_5 ),
        .Q(dl_pkt_cnt[6]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_4 ),
        .Q(dl_pkt_cnt[7]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[8] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_7 ),
        .Q(dl_pkt_cnt[8]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[8]_i_1 
       (.CI(\pkt_cnt_r_reg[4]_i_1_n_0 ),
        .CO({\pkt_cnt_r_reg[8]_i_1_n_0 ,\pkt_cnt_r_reg[8]_i_1_n_1 ,\pkt_cnt_r_reg[8]_i_1_n_2 ,\pkt_cnt_r_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[8]_i_1_n_4 ,\pkt_cnt_r_reg[8]_i_1_n_5 ,\pkt_cnt_r_reg[8]_i_1_n_6 ,\pkt_cnt_r_reg[8]_i_1_n_7 }),
        .S(dl_pkt_cnt[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[9] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_6 ),
        .Q(dl_pkt_cnt[9]),
        .R(fifo_rd_rst_t1));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9 rxactivehs_sync_i
       (.active_sm_r__2(active_sm_r__2),
        .core_clk(core_clk),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .\gen_hs_high_rates.active_sm_r_reg (rxactivehs_sync_i_n_1),
        .\gen_hs_high_rates.active_sm_r_reg_0 (\gen_hs_high_rates.active_sm_r_reg_n_0 ),
        .\gen_hs_high_rates.dl_state_reg[0] (\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .\gen_hs_high_rates.dl_state_reg[1] (\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .out(rxactivehs_sync),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .stop_state_extn_r(stop_state_extn_r));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_data_lane" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1
   (dl_status_reg,
    dl_pkt_cnt,
    dl1_rxactivehs,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_stopstate,
    Q,
    dl_en_hs_lpn_reg,
    dl1_rxdatahs,
    tap_comp_rst,
    rx_div4_clk,
    rx_dl1_lp_dn,
    rx_dl1_lp_dp,
    core_clk,
    stg3_reg,
    core_rst,
    \s_level_out_bus_d3_reg[4] ,
    \s_level_out_bus_d3_reg[4]_0 ,
    \s_level_out_bus_d3_reg[4]_1 ,
    cal_done,
    stopstate0,
    out,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    cl_rxclkactivehs_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    cl_rxclkactivehs_reg_0,
    rx_dl1_hs_dp);
  output [2:0]dl_status_reg;
  output [15:0]dl_pkt_cnt;
  output dl1_rxactivehs;
  output dl1_rxvalidhs;
  output dl1_rxsynchs;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_stopstate;
  output [7:0]Q;
  output [0:0]dl_en_hs_lpn_reg;
  output [7:0]dl1_rxdatahs;
  input tap_comp_rst;
  input rx_div4_clk;
  input rx_dl1_lp_dn;
  input rx_dl1_lp_dp;
  input core_clk;
  input stg3_reg;
  input core_rst;
  input [3:0]\s_level_out_bus_d3_reg[4] ;
  input [3:0]\s_level_out_bus_d3_reg[4]_0 ;
  input [2:0]\s_level_out_bus_d3_reg[4]_1 ;
  input cal_done;
  input stopstate0;
  input out;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input cl_rxclkactivehs_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input cl_rxclkactivehs_reg_0;
  input [7:0]rx_dl1_hs_dp;

  wire [7:0]Q;
  wire active_sm_r__2;
  wire cal_done;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire core_clk;
  wire core_rst;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl_en_hs_lpn_i;
  wire [0:0]dl_en_hs_lpn_reg;
  wire [15:0]dl_pkt_cnt;
  wire [2:0]dl_status_reg;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1_nxt;
  (* DONT_TOUCH *) wire fifo_rd_rst_t2;
  wire \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13 ;
  wire \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14 ;
  wire \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15 ;
  wire \gen_hs_high_rates.active_sm_r_reg_n_0 ;
  wire \gen_hs_high_rates.dl_state_reg_n_0_[0] ;
  wire \gen_hs_high_rates.dl_state_reg_n_0_[1] ;
  wire \gen_hs_high_rates.stop_extn_cnt[0]_i_1__0_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[1]_i_1__0_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[2]_i_1__0_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[3]_i_1__0_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[4]_i_2__0_n_0 ;
  wire \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0 ;
  wire \gen_hs_high_rates.stop_state_extn_r_i_1__0_n_0 ;
  wire \gen_hs_high_rates.stop_state_extn_r_i_2__0_n_0 ;
  wire out;
  wire pkt_cnt_r0;
  wire \pkt_cnt_r[0]_i_3__0_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_1 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_2 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_3 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_4 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_5 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_6 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_7 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_1 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_2 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_3 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_4 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_5 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_6 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_7 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_0 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_1 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_2 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_3 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_4 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_5 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_6 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_7 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_0 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_1 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_2 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_3 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_4 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_5 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_6 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_7 ;
  wire rx_div4_clk;
  wire [7:0]rx_dl1_hs_dp;
  wire rx_dl1_lp_dn;
  wire rx_dl1_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire rxactivehs_sync;
  wire rxactivehs_sync_i_n_1;
  wire [3:0]\s_level_out_bus_d3_reg[4] ;
  wire [3:0]\s_level_out_bus_d3_reg[4]_0 ;
  wire [2:0]\s_level_out_bus_d3_reg[4]_1 ;
  wire stg3_reg;
  wire [4:0]stop_extn_cnt;
  wire stop_state_extn_r;
  wire stopstate0;
  wire tap_comp_rst;
  wire \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ;
  wire [3:3]\NLW_pkt_cnt_r_reg[12]_i_1__0_CO_UNCONNECTED ;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_nxt_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_rst_t1),
        .Q(fifo_rd_rst_t1_nxt),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg3_reg),
        .Q(fifo_rd_rst_t1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg3_reg),
        .Q(fifo_rd_rst_t2),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2 \gen_calib_result.cal_done_sync_i 
       (.cal_done(cal_done),
        .rx_div4_clk(rx_div4_clk));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync \gen_calib_result.u_tap_comp_rst_byteclk_sync_i 
       (.prmry_in(tap_comp_rst),
        .scndry_aclk(rx_div4_clk),
        .scndry_out(\NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_data_lane_sm \gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm 
       (.Q(Q),
        .active_sm_r__2(active_sm_r__2),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_reg),
        .cl_rxclkactivehs_reg_0(cl_rxclkactivehs_reg_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_stopstate(dl1_stopstate),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .dl_en_hs_lpn_reg_0(dl_en_hs_lpn_reg),
        .dl_status_reg(dl_status_reg),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .\gen_hs_high_rates.active_sm_r_reg (\gen_hs_high_rates.active_sm_r_reg_n_0 ),
        .\gen_hs_high_rates.dl_state_reg[0] (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14 ),
        .\gen_hs_high_rates.dl_state_reg[0]_0 (\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .\gen_hs_high_rates.dl_state_reg[1] (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15 ),
        .\gen_hs_high_rates.dl_state_reg[1]_0 (\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .\gen_hs_high_rates.stopstate_reg (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13 ),
        .out(out),
        .rx_dl1_lp_dn(rx_dl1_lp_dn),
        .rx_dl1_lp_dp(rx_dl1_lp_dp),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .\s_level_out_bus_d3_reg[4] (\s_level_out_bus_d3_reg[4] ),
        .\s_level_out_bus_d3_reg[4]_0 (\s_level_out_bus_d3_reg[4]_0 ),
        .\s_level_out_bus_d3_reg[4]_1 (\s_level_out_bus_d3_reg[4]_1 ),
        .s_level_out_d2_reg(rxactivehs_sync),
        .stop_state_extn_r(stop_state_extn_r));
  FDRE \gen_hs_high_rates.active_sm_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(rxactivehs_sync_i_n_1),
        .Q(\gen_hs_high_rates.active_sm_r_reg_n_0 ),
        .R(stopstate0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_hs_high_rates.dl_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_14 ),
        .Q(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .R(stopstate0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_hs_high_rates.dl_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_15 ),
        .Q(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .R(stopstate0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align \gen_hs_high_rates.rx_sot_det_align_i 
       (.E(dl1_rxactivehs),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .pkt_cnt_r0(pkt_cnt_r0),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl1_hs_dp(rx_dl1_hs_dp));
  FDCE \gen_hs_high_rates.rxactivehs_coreclk_sync_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(rxactivehs_sync),
        .Q(rxactivehs_coreclk_sync_r));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_hs_high_rates.stop_extn_cnt[0]_i_1__0 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[0]),
        .O(\gen_hs_high_rates.stop_extn_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h0440)) 
    \gen_hs_high_rates.stop_extn_cnt[1]_i_1__0 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[0]),
        .I3(stop_extn_cnt[1]),
        .O(\gen_hs_high_rates.stop_extn_cnt[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h04444000)) 
    \gen_hs_high_rates.stop_extn_cnt[2]_i_1__0 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[0]),
        .I3(stop_extn_cnt[1]),
        .I4(stop_extn_cnt[2]),
        .O(\gen_hs_high_rates.stop_extn_cnt[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0444444440000000)) 
    \gen_hs_high_rates.stop_extn_cnt[3]_i_1__0 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[1]),
        .I3(stop_extn_cnt[0]),
        .I4(stop_extn_cnt[2]),
        .I5(stop_extn_cnt[3]),
        .O(\gen_hs_high_rates.stop_extn_cnt[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \gen_hs_high_rates.stop_extn_cnt[4]_i_1__0 
       (.I0(\gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0 ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I3(stop_extn_cnt[2]),
        .I4(stop_extn_cnt[3]),
        .I5(stop_extn_cnt[4]),
        .O(\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0444444440000000)) 
    \gen_hs_high_rates.stop_extn_cnt[4]_i_2__0 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I2(stop_extn_cnt[2]),
        .I3(\gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0 ),
        .I4(stop_extn_cnt[3]),
        .I5(stop_extn_cnt[4]),
        .O(\gen_hs_high_rates.stop_extn_cnt[4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_hs_high_rates.stop_extn_cnt[4]_i_3__0 
       (.I0(stop_extn_cnt[1]),
        .I1(stop_extn_cnt[0]),
        .O(\gen_hs_high_rates.stop_extn_cnt[4]_i_3__0_n_0 ));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[0] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[0]_i_1__0_n_0 ),
        .Q(stop_extn_cnt[0]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[1] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[1]_i_1__0_n_0 ),
        .Q(stop_extn_cnt[1]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[2] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[2]_i_1__0_n_0 ),
        .Q(stop_extn_cnt[2]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[3] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[3]_i_1__0_n_0 ),
        .Q(stop_extn_cnt[3]));
  FDCE \gen_hs_high_rates.stop_extn_cnt_reg[4] 
       (.C(core_clk),
        .CE(\gen_hs_high_rates.stop_extn_cnt[4]_i_1__0_n_0 ),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_extn_cnt[4]_i_2__0_n_0 ),
        .Q(stop_extn_cnt[4]));
  LUT4 #(
    .INIT(16'h2220)) 
    \gen_hs_high_rates.stop_state_extn_r_i_1__0 
       (.I0(\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .I1(\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .I2(\gen_hs_high_rates.stop_state_extn_r_i_2__0_n_0 ),
        .I3(stop_state_extn_r),
        .O(\gen_hs_high_rates.stop_state_extn_r_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \gen_hs_high_rates.stop_state_extn_r_i_2__0 
       (.I0(stop_extn_cnt[0]),
        .I1(stop_extn_cnt[2]),
        .I2(stop_extn_cnt[1]),
        .I3(stop_extn_cnt[3]),
        .I4(stop_extn_cnt[4]),
        .O(\gen_hs_high_rates.stop_state_extn_r_i_2__0_n_0 ));
  FDCE \gen_hs_high_rates.stop_state_extn_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(\gen_hs_high_rates.stop_state_extn_r_i_1__0_n_0 ),
        .Q(stop_state_extn_r));
  FDRE \gen_hs_high_rates.stopstate_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm_n_13 ),
        .Q(dl1_stopstate),
        .R(stopstate0));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt_r[0]_i_3__0 
       (.I0(dl_pkt_cnt[0]),
        .O(\pkt_cnt_r[0]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_7 ),
        .Q(dl_pkt_cnt[0]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\pkt_cnt_r_reg[0]_i_2__0_n_0 ,\pkt_cnt_r_reg[0]_i_2__0_n_1 ,\pkt_cnt_r_reg[0]_i_2__0_n_2 ,\pkt_cnt_r_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_r_reg[0]_i_2__0_n_4 ,\pkt_cnt_r_reg[0]_i_2__0_n_5 ,\pkt_cnt_r_reg[0]_i_2__0_n_6 ,\pkt_cnt_r_reg[0]_i_2__0_n_7 }),
        .S({dl_pkt_cnt[3:1],\pkt_cnt_r[0]_i_3__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[10] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_5 ),
        .Q(dl_pkt_cnt[10]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[11] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_4 ),
        .Q(dl_pkt_cnt[11]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[12] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_7 ),
        .Q(dl_pkt_cnt[12]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[12]_i_1__0 
       (.CI(\pkt_cnt_r_reg[8]_i_1__0_n_0 ),
        .CO({\NLW_pkt_cnt_r_reg[12]_i_1__0_CO_UNCONNECTED [3],\pkt_cnt_r_reg[12]_i_1__0_n_1 ,\pkt_cnt_r_reg[12]_i_1__0_n_2 ,\pkt_cnt_r_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[12]_i_1__0_n_4 ,\pkt_cnt_r_reg[12]_i_1__0_n_5 ,\pkt_cnt_r_reg[12]_i_1__0_n_6 ,\pkt_cnt_r_reg[12]_i_1__0_n_7 }),
        .S(dl_pkt_cnt[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[13] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_6 ),
        .Q(dl_pkt_cnt[13]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[14] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_5 ),
        .Q(dl_pkt_cnt[14]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[15] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_4 ),
        .Q(dl_pkt_cnt[15]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_6 ),
        .Q(dl_pkt_cnt[1]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_5 ),
        .Q(dl_pkt_cnt[2]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_4 ),
        .Q(dl_pkt_cnt[3]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_7 ),
        .Q(dl_pkt_cnt[4]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[4]_i_1__0 
       (.CI(\pkt_cnt_r_reg[0]_i_2__0_n_0 ),
        .CO({\pkt_cnt_r_reg[4]_i_1__0_n_0 ,\pkt_cnt_r_reg[4]_i_1__0_n_1 ,\pkt_cnt_r_reg[4]_i_1__0_n_2 ,\pkt_cnt_r_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[4]_i_1__0_n_4 ,\pkt_cnt_r_reg[4]_i_1__0_n_5 ,\pkt_cnt_r_reg[4]_i_1__0_n_6 ,\pkt_cnt_r_reg[4]_i_1__0_n_7 }),
        .S(dl_pkt_cnt[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_6 ),
        .Q(dl_pkt_cnt[5]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_5 ),
        .Q(dl_pkt_cnt[6]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_4 ),
        .Q(dl_pkt_cnt[7]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[8] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_7 ),
        .Q(dl_pkt_cnt[8]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[8]_i_1__0 
       (.CI(\pkt_cnt_r_reg[4]_i_1__0_n_0 ),
        .CO({\pkt_cnt_r_reg[8]_i_1__0_n_0 ,\pkt_cnt_r_reg[8]_i_1__0_n_1 ,\pkt_cnt_r_reg[8]_i_1__0_n_2 ,\pkt_cnt_r_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[8]_i_1__0_n_4 ,\pkt_cnt_r_reg[8]_i_1__0_n_5 ,\pkt_cnt_r_reg[8]_i_1__0_n_6 ,\pkt_cnt_r_reg[8]_i_1__0_n_7 }),
        .S(dl_pkt_cnt[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[9] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_6 ),
        .Q(dl_pkt_cnt[9]),
        .R(fifo_rd_rst_t1));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3 rxactivehs_sync_i
       (.active_sm_r__2(active_sm_r__2),
        .core_clk(core_clk),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .\gen_hs_high_rates.active_sm_r_reg (rxactivehs_sync_i_n_1),
        .\gen_hs_high_rates.active_sm_r_reg_0 (\gen_hs_high_rates.active_sm_r_reg_n_0 ),
        .\gen_hs_high_rates.dl_state_reg[0] (\gen_hs_high_rates.dl_state_reg_n_0_[0] ),
        .\gen_hs_high_rates.dl_state_reg[1] (\gen_hs_high_rates.dl_state_reg_n_0_[1] ),
        .out(rxactivehs_sync),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .stop_state_extn_r(stop_state_extn_r));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_dphy_reg" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg
   (out,
    \s_level_out_bus_d4_reg[22] ,
    s_axi_rvalid,
    p_5_in,
    S,
    \settle_cnt_reg[0] ,
    \settle_cnt_reg[0]_0 ,
    \settle_cnt_reg[0]_1 ,
    \settle_cnt_reg[0]_2 ,
    \settle_cnt_reg[0]_3 ,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_awready,
    s_axi_arready,
    s_axi_wready,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    s_axi_aclk,
    s_axi_aresetn,
    cl_enable,
    Q,
    \settle_cnt_reg[7] ,
    s_axi_wdata,
    dl_pkt_cnt,
    dl_status_reg,
    D,
    cl_status_reg_bit_0_reg,
    core_clk,
    system_rst_reg,
    rx_div4_clk,
    s_axi_bready,
    s_axi_wvalid,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_araddr,
    s_axi_awvalid,
    s_axi_awaddr);
  output [1:0]out;
  output [14:0]\s_level_out_bus_d4_reg[22] ;
  output s_axi_rvalid;
  output p_5_in;
  output [3:0]S;
  output [3:0]\settle_cnt_reg[0] ;
  output [2:0]\settle_cnt_reg[0]_0 ;
  output [3:0]\settle_cnt_reg[0]_1 ;
  output [2:0]\settle_cnt_reg[0]_2 ;
  output [3:0]\settle_cnt_reg[0]_3 ;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_wready;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input s_axi_aclk;
  input s_axi_aresetn;
  input cl_enable;
  input [7:0]Q;
  input [7:0]\settle_cnt_reg[7] ;
  input [31:0]s_axi_wdata;
  input [31:0]dl_pkt_cnt;
  input [5:0]dl_status_reg;
  input [0:0]D;
  input [0:0]cl_status_reg_bit_0_reg;
  input core_clk;
  input system_rst_reg;
  input rx_div4_clk;
  input s_axi_bready;
  input s_axi_wvalid;
  input s_axi_arvalid;
  input s_axi_rready;
  input [4:0]s_axi_araddr;
  input s_axi_awvalid;
  input [4:0]s_axi_awaddr;

  wire [0:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire axi_bvalid_i_1_n_0;
  wire axi_rvalid4_out;
  wire cl_enable;
  wire cl_errcontrol_axi;
  wire cl_errcontrol_r_axi_i_1_n_0;
  wire cl_errcontrol_r_axi_reg_n_0;
  wire cl_init_done_axi;
  wire [0:0]cl_status_reg_bit_0_reg;
  wire core_clk;
  wire [1:1]data0;
  wire [15:0]dl1_pkt_cnt_axi;
  wire [15:0]dl2_pkt_cnt_axi;
  wire [15:0]dl3_pkt_cnt_axi;
  wire dl3_pkt_cnt_sync_n_16;
  wire [31:0]dl_pkt_cnt;
  wire [5:0]dl_status_reg;
  wire dphy_en_axi;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ;
  wire hs_settle_reg_axi;
  wire init_value_axi;
  wire [1:0]out;
  wire [4:0]p_0_in;
  wire [31:0]p_1_in__0;
  wire p_5_in;
  wire [0:0]p_5_in_0;
  wire rd_req;
  wire rd_req0;
  wire rd_req_i_1_n_0;
  wire reset_released;
  wire reset_released_r;
  wire rx_div4_clk;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [14:0]\s_level_out_bus_d4_reg[22] ;
  wire [4:0]sel0;
  wire [3:0]\settle_cnt_reg[0] ;
  wire [2:0]\settle_cnt_reg[0]_0 ;
  wire [3:0]\settle_cnt_reg[0]_1 ;
  wire [2:0]\settle_cnt_reg[0]_2 ;
  wire [3:0]\settle_cnt_reg[0]_3 ;
  wire [7:0]\settle_cnt_reg[7] ;
  wire system_rst_reg;
  wire \wr_addr[2]_i_1_n_0 ;
  wire \wr_addr[3]_i_1_n_0 ;
  wire \wr_addr[4]_i_1_n_0 ;
  wire \wr_addr[5]_i_1_n_0 ;
  wire \wr_addr[6]_i_1_n_0 ;
  wire wr_req;
  wire wr_req07_out;
  wire wr_req_i_1_n_0;
  wire NLW_cl_errcontrol_sync_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_cl_errcontrol_sync_scndry_vect_out_UNCONNECTED;
  wire NLW_init_done_sync_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_init_done_sync_scndry_vect_out_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h5C50)) 
    axi_bvalid_i_1
       (.I0(s_axi_bready),
        .I1(s_axi_wvalid),
        .I2(s_axi_bvalid),
        .I3(wr_req),
        .O(axi_bvalid_i_1_n_0));
  FDCE axi_bvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(axi_bvalid_i_1_n_0),
        .Q(s_axi_bvalid));
  LUT4 #(
    .INIT(16'h1110)) 
    cl_errcontrol_r_axi_i_1
       (.I0(p_5_in_0),
        .I1(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ),
        .I2(cl_errcontrol_axi),
        .I3(cl_errcontrol_r_axi_reg_n_0),
        .O(cl_errcontrol_r_axi_i_1_n_0));
  FDCE cl_errcontrol_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(cl_errcontrol_r_axi_i_1_n_0),
        .Q(cl_errcontrol_r_axi_reg_n_0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4 cl_errcontrol_sync
       (.prmry_ack(NLW_cl_errcontrol_sync_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(1'b0),
        .prmry_rst_n(1'b0),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(s_axi_aclk),
        .scndry_out(cl_errcontrol_axi),
        .scndry_rst_n(s_axi_aresetn),
        .scndry_vect_out(NLW_cl_errcontrol_sync_scndry_vect_out_UNCONNECTED[1:0]));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7 clk_prepare_reg_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13 clk_settle_reg_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14 clk_termen_reg_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15 clk_zero_reg_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6 control_sync
       (.cl_enable(cl_enable),
        .core_clk(core_clk),
        .data0(data0),
        .out(out),
        .p_5_in(p_5_in),
        .p_5_in_0(p_5_in_0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16 d_termen_reg_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2 dl0_pkt_cnt_sync
       (.D(p_1_in__0[31:16]),
        .Q({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] }),
        .SR(dl3_pkt_cnt_sync_n_16),
        .dl_pkt_cnt(dl_pkt_cnt[15:0]),
        .\rd_addr_reg[3] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0 ),
        .\rd_addr_reg[3]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .\rd_addr_reg[5] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ),
        .\rd_addr_reg[5]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .\rd_addr_reg[6] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d3_reg[15]_0 (dl2_pkt_cnt_axi),
        .\s_level_out_bus_d3_reg[15]_1 (dl3_pkt_cnt_axi),
        .\s_level_out_bus_d3_reg[15]_2 (dl1_pkt_cnt_axi));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17 dl1_pkt_cnt_sync
       (.D(dl1_pkt_cnt_axi),
        .SR(dl3_pkt_cnt_sync_n_16),
        .dl_pkt_cnt(dl_pkt_cnt[31:16]),
        .s_axi_aclk(s_axi_aclk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18 dl2_pkt_cnt_sync
       (.D(dl2_pkt_cnt_axi),
        .SR(dl3_pkt_cnt_sync_n_16),
        .s_axi_aclk(s_axi_aclk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19 dl3_pkt_cnt_sync
       (.D(dl3_pkt_cnt_axi),
        .SR(dl3_pkt_cnt_sync_n_16),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3 esc_abort_sync
       (.SR(dl3_pkt_cnt_sync_n_16),
        .s_axi_aclk(s_axi_aclk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20 esc_timeout_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  LUT5 #(
    .INIT(32'h08080C00)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ),
        .I2(sel0[3]),
        .I3(p_5_in_0),
        .I4(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[10]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ),
        .O(p_1_in__0[10]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[11]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ),
        .O(p_1_in__0[11]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[12]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ),
        .O(p_1_in__0[12]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[13]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ),
        .O(p_1_in__0[13]));
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[14]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ),
        .O(p_1_in__0[14]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ),
        .O(p_1_in__0[15]));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2 
       (.I0(sel0[3]),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[4]),
        .I4(rd_req),
        .I5(sel0[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h08080C00)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ),
        .I2(sel0[3]),
        .I3(data0),
        .I4(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5 
       (.I0(sel0[2]),
        .I1(rd_req),
        .I2(sel0[4]),
        .I3(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1 
       (.I0(rd_req),
        .I1(s_axi_rvalid),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5 
       (.I0(sel0[4]),
        .I1(rd_req),
        .I2(sel0[2]),
        .I3(sel0[3]),
        .I4(sel0[1]),
        .I5(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .I2(rd_req),
        .I3(sel0[4]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(sel0[4]),
        .I3(rd_req),
        .I4(sel0[2]),
        .I5(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(sel0[0]),
        .I3(sel0[4]),
        .I4(rd_req),
        .I5(sel0[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0 ),
        .O(p_1_in__0[3]));
  LUT6 #(
    .INIT(64'hFFFFFEEEF000F000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0 ),
        .I5(cl_init_done_axi),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(sel0[2]),
        .I3(rd_req),
        .I4(sel0[4]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4 
       (.I0(sel0[0]),
        .I1(sel0[4]),
        .I2(rd_req),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5 
       (.I0(sel0[2]),
        .I1(rd_req),
        .I2(sel0[4]),
        .I3(sel0[3]),
        .I4(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ),
        .I3(cl_errcontrol_r_axi_reg_n_0),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .O(p_1_in__0[5]));
  LUT6 #(
    .INIT(64'h0000000002000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(sel0[4]),
        .I3(rd_req),
        .I4(sel0[2]),
        .I5(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .O(p_1_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .O(p_1_in__0[8]));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2 
       (.I0(sel0[0]),
        .I1(sel0[3]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(rd_req),
        .I5(sel0[4]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[9]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ),
        .O(p_1_in__0[9]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[0]),
        .Q(s_axi_rdata[0]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[10] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[10]),
        .Q(s_axi_rdata[10]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[11] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[11]),
        .Q(s_axi_rdata[11]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[12] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[12]),
        .Q(s_axi_rdata[12]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[13] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[13]),
        .Q(s_axi_rdata[13]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[14] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[14]),
        .Q(s_axi_rdata[14]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[15] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[15]),
        .Q(s_axi_rdata[15]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[16]),
        .Q(s_axi_rdata[16]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[17]),
        .Q(s_axi_rdata[17]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[18]),
        .Q(s_axi_rdata[18]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[19]),
        .Q(s_axi_rdata[19]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[1]),
        .Q(s_axi_rdata[1]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[20]),
        .Q(s_axi_rdata[20]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[21]),
        .Q(s_axi_rdata[21]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[22]),
        .Q(s_axi_rdata[22]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[23]),
        .Q(s_axi_rdata[23]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[24]),
        .Q(s_axi_rdata[24]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[25]),
        .Q(s_axi_rdata[25]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[26]),
        .Q(s_axi_rdata[26]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[27]),
        .Q(s_axi_rdata[27]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[28]),
        .Q(s_axi_rdata[28]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[29]),
        .Q(s_axi_rdata[29]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[2]),
        .Q(s_axi_rdata[2]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[30]),
        .Q(s_axi_rdata[30]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[31]),
        .Q(s_axi_rdata[31]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[3] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[3]),
        .Q(s_axi_rdata[3]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[4]),
        .Q(s_axi_rdata[4]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[5] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[5]),
        .Q(s_axi_rdata[5]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[6]),
        .Q(s_axi_rdata[6]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[7] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[7]),
        .Q(s_axi_rdata[7]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[8] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[8]),
        .Q(s_axi_rdata[8]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[9] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(p_1_in__0[9]),
        .Q(s_axi_rdata[9]));
  LUT3 #(
    .INIT(8'h70)) 
    \gen_regs_wo_debug_wo_timeout.axi_rvalid_i_1 
       (.I0(s_axi_rvalid),
        .I1(s_axi_rready),
        .I2(rd_req),
        .O(axi_rvalid4_out));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rvalid_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(axi_rvalid4_out),
        .Q(s_axi_rvalid));
  LUT6 #(
    .INIT(64'h00B0000000800000)) 
    \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0 ),
        .I2(s_axi_wvalid),
        .I3(s_axi_bvalid),
        .I4(wr_req),
        .I5(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2 
       (.I0(p_0_in[1]),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[4]),
        .I4(p_0_in[0]),
        .O(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0 ));
  FDCE \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0 ),
        .Q(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(dphy_en_axi),
        .I2(data0),
        .O(\gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0 ));
  FDPE \gen_regs_wo_debug_wo_timeout.dphy_en_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0 ),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(data0));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(dphy_en_axi),
        .I2(p_5_in_0),
        .O(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2 
       (.I0(p_0_in[0]),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0 ),
        .O(dphy_en_axi));
  FDCE \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0 ),
        .Q(p_5_in_0));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi[8]_i_1 
       (.I0(p_0_in[0]),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0 ),
        .O(hs_settle_reg_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[0]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[1]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[4]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[7]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_1 
       (.I0(p_0_in[0]),
        .I1(p_0_in[4]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0 ),
        .O(init_value_axi));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2 
       (.I0(wr_req),
        .I1(s_axi_bvalid),
        .I2(s_axi_wvalid),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2_n_0 ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[0]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[10]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[11]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[12]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[13]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[14]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[15]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[16]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[17]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[18]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[19]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[20]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[21]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[22]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[23]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[24]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[25]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[26]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[27]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[28]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[29]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[30]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[31]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[4]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[5]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[7]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[9]),
        .PRE(dl3_pkt_cnt_sync_n_16),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21 hs_abort_sync
       (.SR(dl3_pkt_cnt_sync_n_16),
        .dl_status_reg({dl_status_reg[4],dl_status_reg[1]}),
        .s_axi_aclk(s_axi_aclk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22 hs_rx_timeout_div4clk_sync
       (.rx_div4_clk(rx_div4_clk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8 hs_settle_reg_sync
       (.Q(Q),
        .S(S),
        .core_clk(core_clk),
        .\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] ({\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] }),
        .\settle_cnt_reg[0] (\settle_cnt_reg[0] ),
        .\settle_cnt_reg[0]_0 (\settle_cnt_reg[0]_0 ),
        .\settle_cnt_reg[0]_1 (\settle_cnt_reg[0]_1 ),
        .\settle_cnt_reg[0]_2 (\settle_cnt_reg[0]_2 ),
        .\settle_cnt_reg[0]_3 (\settle_cnt_reg[0]_3 ),
        .\settle_cnt_reg[7] (\settle_cnt_reg[7] ),
        .system_rst_reg(system_rst_reg));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23 hs_skip_reg_sync
       (.core_clk(core_clk),
        .system_rst_reg(system_rst_reg));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3 init_done_sync
       (.prmry_ack(NLW_init_done_sync_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .prmry_rst_n(1'b0),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(s_axi_aclk),
        .scndry_out(cl_init_done_axi),
        .scndry_rst_n(s_axi_aresetn),
        .scndry_vect_out(NLW_init_done_sync_scndry_vect_out_UNCONNECTED[1:0]));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24 init_reg_sync
       (.Q({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] }),
        .core_clk(core_clk),
        .\s_level_out_bus_d4_reg[22]_0 (\s_level_out_bus_d4_reg[22] ));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5 mode_sync
       (.D(p_1_in__0[1:0]),
        .Q({\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] }),
        .SR(dl3_pkt_cnt_sync_n_16),
        .dl_status_reg_bit_0_reg({dl_status_reg[0],dl_status_reg[3],cl_status_reg_bit_0_reg}),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] (\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] (\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0 ),
        .\rd_addr_reg[2] (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .\rd_addr_reg[3] (\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ),
        .\rd_addr_reg[3]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0 ),
        .\rd_addr_reg[3]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .\rd_addr_reg[5] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ),
        .\rd_addr_reg[6] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .s_axi_aclk(s_axi_aclk));
  LUT4 #(
    .INIT(16'h0400)) 
    \rd_addr[6]_i_1 
       (.I0(rd_req),
        .I1(reset_released_r),
        .I2(wr_req),
        .I3(s_axi_arvalid),
        .O(rd_req0));
  FDCE \rd_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_araddr[0]),
        .Q(sel0[0]));
  FDCE \rd_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_araddr[1]),
        .Q(sel0[1]));
  FDCE \rd_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_araddr[2]),
        .Q(sel0[2]));
  FDCE \rd_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_araddr[3]),
        .Q(sel0[3]));
  FDCE \rd_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(s_axi_araddr[4]),
        .Q(sel0[4]));
  LUT6 #(
    .INIT(64'h0020FF20FF20FF20)) 
    rd_req_i_1
       (.I0(s_axi_arvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_rvalid),
        .I5(s_axi_rready),
        .O(rd_req_i_1_n_0));
  FDCE rd_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(rd_req_i_1_n_0),
        .Q(rd_req));
  FDCE reset_released_r_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(reset_released),
        .Q(reset_released_r));
  FDCE reset_released_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(1'b1),
        .Q(reset_released));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h04)) 
    s_axi_arready_INST_0
       (.I0(wr_req),
        .I1(reset_released_r),
        .I2(rd_req),
        .O(s_axi_arready));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    s_axi_awready_INST_0
       (.I0(rd_req),
        .I1(reset_released_r),
        .I2(wr_req),
        .I3(s_axi_arvalid),
        .O(s_axi_awready));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(wr_req),
        .I1(s_axi_bvalid),
        .O(s_axi_wready));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4 stopstate_sync
       (.D({p_1_in__0[6],p_1_in__0[4]}),
        .Q({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] }),
        .SR(dl3_pkt_cnt_sync_n_16),
        .dl_status_reg_bit_6_reg({dl_status_reg[2],dl_status_reg[5],D}),
        .\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] ({\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] }),
        .\rd_addr_reg[2] (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .\rd_addr_reg[3] (\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ),
        .\rd_addr_reg[3]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0 ),
        .\rd_addr_reg[3]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .\rd_addr_reg[5] (\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .\rd_addr_reg[5]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ),
        .\rd_addr_reg[6] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .s_axi_aclk(s_axi_aclk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25 ulps_sync
       (.D(p_1_in__0[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ),
        .SR(dl3_pkt_cnt_sync_n_16),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] (\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ),
        .\rd_addr_reg[2] (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .\rd_addr_reg[3] (\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ),
        .\rd_addr_reg[3]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_n_0 ),
        .\rd_addr_reg[3]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .\rd_addr_reg[5] (\gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_2_n_0 ),
        .\rd_addr_reg[5]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ),
        .\rd_addr_reg[6] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .s_axi_aclk(s_axi_aclk));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[2]_i_1 
       (.I0(s_axi_awvalid),
        .I1(rd_req),
        .I2(reset_released_r),
        .I3(wr_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awaddr[0]),
        .O(\wr_addr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[3]_i_1 
       (.I0(s_axi_awvalid),
        .I1(rd_req),
        .I2(reset_released_r),
        .I3(wr_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awaddr[1]),
        .O(\wr_addr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[4]_i_1 
       (.I0(s_axi_awvalid),
        .I1(rd_req),
        .I2(reset_released_r),
        .I3(wr_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awaddr[2]),
        .O(\wr_addr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[5]_i_1 
       (.I0(s_axi_awvalid),
        .I1(rd_req),
        .I2(reset_released_r),
        .I3(wr_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awaddr[3]),
        .O(\wr_addr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[6]_i_1 
       (.I0(s_axi_awvalid),
        .I1(rd_req),
        .I2(reset_released_r),
        .I3(wr_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awaddr[4]),
        .O(\wr_addr[6]_i_1_n_0 ));
  FDCE \wr_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\wr_addr[2]_i_1_n_0 ),
        .Q(p_0_in[0]));
  FDCE \wr_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\wr_addr[3]_i_1_n_0 ),
        .Q(p_0_in[1]));
  FDCE \wr_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\wr_addr[4]_i_1_n_0 ),
        .Q(p_0_in[2]));
  FDCE \wr_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\wr_addr[5]_i_1_n_0 ),
        .Q(p_0_in[3]));
  FDCE \wr_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(\wr_addr[6]_i_1_n_0 ),
        .Q(p_0_in[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    wr_req_i_1
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid),
        .I2(wr_req07_out),
        .O(wr_req_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    wr_req_i_2
       (.I0(s_axi_arvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_awvalid),
        .O(wr_req07_out));
  FDCE wr_req_reg
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(dl3_pkt_cnt_sync_n_16),
        .D(wr_req07_out),
        .Q(wr_req));
endmodule

(* BYTE_UI = "10" *) (* CL_ACTIVE_BYTE_UI = "1" *) (* C_CLK_PREPARE_VAL = "40" *) 
(* C_CLK_SETTLE_VAL = "95" *) (* C_CLK_TERMEN_VAL = "38" *) (* C_CLK_ZERO_VAL = "205" *) 
(* C_DPHY_LANES = "2" *) (* C_DPHY_MODE = "SLAVE" *) (* C_D_TERMEN_VAL = "35" *) 
(* C_EN_DEBUG_REGS = "0" *) (* C_EN_REGISTER = "1" *) (* C_EN_TIMEOUT_REGS = "0" *) 
(* C_EN_ULPS_WAKEUP_CNT = "FALSE" *) (* C_ESC_TIMEOUT = "25600" *) (* C_HS_LINE_RATE = "800" *) 
(* C_HS_RX_TIMEOUT = "65541" *) (* C_HS_SETTLE_VAL = "147" *) (* C_HS_SKIP_VAL = "40" *) 
(* C_INIT = "100000" *) (* C_IS_7SERIES = "TRUE" *) (* C_LPX_PERIOD = "50" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_WAKEUP = "1000000" *) (* DPHY_PRESET = "CSI2RX_XLNX" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* LPX_PERIOD_MIN = "25" *) (* LP_STATE_CNT = "2" *) 
(* MTBF_SYNC_STAGES = "3" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_fab_top" *) (* SUPPORT_LEVEL = "1" *) 
(* UI10_VAL = "12" *) (* UI_VAL = "1250" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_fab_top
   (rx_div4_clk,
    clk_200m,
    core_clk,
    core_rst,
    core_ref_clk,
    system_rst_in,
    dphy_srst_out,
    dphy_en_out,
    system_rst_phybyteclk_in,
    system_rst_byteclk_in,
    phy_rst,
    phy_ready,
    sys_rst_byteclk_out,
    init_done,
    idelay_tap_value,
    idelay_load,
    idelay_ready,
    tap_comp_res,
    tap_comp_rst,
    cal_pass,
    cal_done,
    dly_ctrl_rdy,
    idly_tap_val,
    reg_cal_start,
    rx_dl0_en_hs_lpn,
    rx_dl0_disable_ibuf,
    rx_dl0_lp_dp,
    rx_dl0_lp_dn,
    rx_dl0_hs_dp,
    rx_dl0_fifo_empty,
    rx_dl0_fifo_rd_en,
    rx_dl0_fifo_rd_clk,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_forcerxmode,
    dl0_stopstate,
    dl0_enable,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    rx_dl1_en_hs_lpn,
    rx_dl1_disable_ibuf,
    rx_dl1_lp_dp,
    rx_dl1_lp_dn,
    rx_dl1_hs_dp,
    rx_dl1_fifo_empty,
    rx_dl1_fifo_rd_en,
    rx_dl1_fifo_rd_clk,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_forcerxmode,
    dl1_stopstate,
    dl1_enable,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    rx_dl2_en_hs_lpn,
    rx_dl2_disable_ibuf,
    rx_dl2_lp_dp,
    rx_dl2_lp_dn,
    rx_dl2_hs_dp,
    rx_dl2_fifo_empty,
    rx_dl2_fifo_rd_en,
    rx_dl2_fifo_rd_clk,
    dl2_rxdatahs,
    dl2_rxvalidhs,
    dl2_rxactivehs,
    dl2_rxsynchs,
    dl2_forcerxmode,
    dl2_stopstate,
    dl2_enable,
    dl2_ulpsactivenot,
    dl2_rxclkesc,
    dl2_rxlpdtesc,
    dl2_rxulpsesc,
    dl2_rxtriggeresc,
    dl2_rxdataesc,
    dl2_rxvalidesc,
    dl2_errsoths,
    dl2_errsotsynchs,
    dl2_erresc,
    dl2_errsyncesc,
    dl2_errcontrol,
    rx_dl3_en_hs_lpn,
    rx_dl3_disable_ibuf,
    rx_dl3_lp_dp,
    rx_dl3_lp_dn,
    rx_dl3_hs_dp,
    rx_dl3_fifo_empty,
    rx_dl3_fifo_rd_en,
    rx_dl3_fifo_rd_clk,
    dl3_rxdatahs,
    dl3_rxvalidhs,
    dl3_rxactivehs,
    dl3_rxsynchs,
    dl3_forcerxmode,
    dl3_stopstate,
    dl3_enable,
    dl3_ulpsactivenot,
    dl3_rxclkesc,
    dl3_rxlpdtesc,
    dl3_rxulpsesc,
    dl3_rxtriggeresc,
    dl3_rxdataesc,
    dl3_rxvalidesc,
    dl3_errsoths,
    dl3_errsotsynchs,
    dl3_erresc,
    dl3_errsyncesc,
    dl3_errcontrol,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    rx_cl_en_hs_lpn,
    rx_cl_disable_ibuf,
    rx_cl_lp_dp,
    rx_cl_lp_dn,
    rx_cl_hs_dp,
    rx_cl_fifo_empty,
    rx_cl_fifo_rd_en,
    rx_cl_fifo_rd_clk,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid);
  input rx_div4_clk;
  input clk_200m;
  input core_clk;
  input core_rst;
  output core_ref_clk;
  input system_rst_in;
  output dphy_srst_out;
  output dphy_en_out;
  input system_rst_phybyteclk_in;
  input system_rst_byteclk_in;
  output phy_rst;
  input phy_ready;
  output sys_rst_byteclk_out;
  output init_done;
  output [8:0]idelay_tap_value;
  output idelay_load;
  input idelay_ready;
  output [3:0]tap_comp_res;
  input tap_comp_rst;
  input cal_pass;
  input cal_done;
  input dly_ctrl_rdy;
  input [4:0]idly_tap_val;
  output reg_cal_start;
  output rx_dl0_en_hs_lpn;
  output rx_dl0_disable_ibuf;
  input rx_dl0_lp_dp;
  input rx_dl0_lp_dn;
  input [7:0]rx_dl0_hs_dp;
  input rx_dl0_fifo_empty;
  output rx_dl0_fifo_rd_en;
  output rx_dl0_fifo_rd_clk;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  input dl0_forcerxmode;
  output dl0_stopstate;
  input dl0_enable;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output rx_dl1_en_hs_lpn;
  output rx_dl1_disable_ibuf;
  input rx_dl1_lp_dp;
  input rx_dl1_lp_dn;
  input [7:0]rx_dl1_hs_dp;
  input rx_dl1_fifo_empty;
  output rx_dl1_fifo_rd_en;
  output rx_dl1_fifo_rd_clk;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  input dl1_forcerxmode;
  output dl1_stopstate;
  input dl1_enable;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  output rx_dl2_en_hs_lpn;
  output rx_dl2_disable_ibuf;
  input rx_dl2_lp_dp;
  input rx_dl2_lp_dn;
  input [7:0]rx_dl2_hs_dp;
  input rx_dl2_fifo_empty;
  output rx_dl2_fifo_rd_en;
  output rx_dl2_fifo_rd_clk;
  output [7:0]dl2_rxdatahs;
  output dl2_rxvalidhs;
  output dl2_rxactivehs;
  output dl2_rxsynchs;
  input dl2_forcerxmode;
  output dl2_stopstate;
  input dl2_enable;
  output dl2_ulpsactivenot;
  output dl2_rxclkesc;
  output dl2_rxlpdtesc;
  output dl2_rxulpsesc;
  output [3:0]dl2_rxtriggeresc;
  output [7:0]dl2_rxdataesc;
  output dl2_rxvalidesc;
  output dl2_errsoths;
  output dl2_errsotsynchs;
  output dl2_erresc;
  output dl2_errsyncesc;
  output dl2_errcontrol;
  output rx_dl3_en_hs_lpn;
  output rx_dl3_disable_ibuf;
  input rx_dl3_lp_dp;
  input rx_dl3_lp_dn;
  input [7:0]rx_dl3_hs_dp;
  input rx_dl3_fifo_empty;
  output rx_dl3_fifo_rd_en;
  output rx_dl3_fifo_rd_clk;
  output [7:0]dl3_rxdatahs;
  output dl3_rxvalidhs;
  output dl3_rxactivehs;
  output dl3_rxsynchs;
  input dl3_forcerxmode;
  output dl3_stopstate;
  input dl3_enable;
  output dl3_ulpsactivenot;
  output dl3_rxclkesc;
  output dl3_rxlpdtesc;
  output dl3_rxulpsesc;
  output [3:0]dl3_rxtriggeresc;
  output [7:0]dl3_rxdataesc;
  output dl3_rxvalidesc;
  output dl3_errsoths;
  output dl3_errsotsynchs;
  output dl3_erresc;
  output dl3_errsyncesc;
  output dl3_errcontrol;
  output cl_rxclkactivehs;
  output cl_stopstate;
  input cl_enable;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output rx_cl_en_hs_lpn;
  output rx_cl_disable_ibuf;
  input rx_cl_lp_dp;
  input rx_cl_lp_dn;
  input [7:0]rx_cl_hs_dp;
  input rx_cl_fifo_empty;
  output rx_cl_fifo_rd_en;
  output rx_cl_fifo_rd_clk;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;

  wire \<const0> ;
  wire cal_done;
  wire cl_enable;
  wire cl_init_done_div4clk_i;
  wire cl_rxclkactivehs;
  wire cl_status_reg_bit_0;
  wire cl_stop_state;
  wire cl_stopstate;
  wire clk_active_r;
  wire core_clk;
  wire core_rst;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire [31:0]dl_pkt_cnt;
  wire [13:0]dl_status_reg;
  wire dphy_en_out;
  wire dphy_srst_out;
  wire \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ;
  wire \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_3 ;
  wire \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5 ;
  wire \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_7 ;
  wire \gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_8 ;
  wire [7:0]\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg ;
  wire [7:0]\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg_0 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_19 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_20 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_21 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_22 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_23 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_24 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_25 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_26 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_27 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_28 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_29 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_30 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_31 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_32 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_33 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_34 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_35 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_36 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_37 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_38 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_39 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_40 ;
  wire \gen_rx_data_lane[0].rx_data_lane_inst_n_34 ;
  wire \gen_rx_data_lane[0].rx_data_lane_inst_n_35 ;
  wire \gen_rx_data_lane[1].rx_data_lane_inst_n_33 ;
  wire init_done;
  wire init_done_div4clk_sync;
  wire [22:8]init_value;
  wire maxfrm_wait_done;
  wire maxfrm_wait_done_sync_i_i_1_n_0;
  wire [15:0]p_2_in;
  wire p_5_in;
  wire rx_cl_lp_dn;
  wire rx_cl_lp_dp;
  wire rx_div4_clk;
  wire [7:0]rx_dl0_hs_dp;
  wire rx_dl0_lp_dn;
  wire rx_dl0_lp_dp;
  wire [7:0]rx_dl1_hs_dp;
  wire rx_dl1_lp_dn;
  wire rx_dl1_lp_dp;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire stopstate0;
  wire system_rst_byteclk_w;
  wire system_rst_in;
  wire system_rst_w;
  wire tap_comp_rst;
  wire [0:0]\two_lane_hs_rx_timeout.hs_wait_count ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ;
  wire NLW_maxfrm_wait_done_sync_i_prmry_ack_UNCONNECTED;
  wire NLW_maxfrm_wait_done_sync_i_scndry_out_UNCONNECTED;
  wire [1:0]NLW_maxfrm_wait_done_sync_i_scndry_vect_out_UNCONNECTED;
  wire [3:3]\NLW_two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_CO_UNCONNECTED ;

  assign cl_rxulpsclknot = \<const0> ;
  assign cl_ulpsactivenot = \<const0> ;
  assign core_ref_clk = \<const0> ;
  assign dl0_errcontrol = \<const0> ;
  assign dl0_erresc = \<const0> ;
  assign dl0_errsyncesc = \<const0> ;
  assign dl0_rxclkesc = \<const0> ;
  assign dl0_rxdataesc[7] = \<const0> ;
  assign dl0_rxdataesc[6] = \<const0> ;
  assign dl0_rxdataesc[5] = \<const0> ;
  assign dl0_rxdataesc[4] = \<const0> ;
  assign dl0_rxdataesc[3] = \<const0> ;
  assign dl0_rxdataesc[2] = \<const0> ;
  assign dl0_rxdataesc[1] = \<const0> ;
  assign dl0_rxdataesc[0] = \<const0> ;
  assign dl0_rxlpdtesc = \<const0> ;
  assign dl0_rxtriggeresc[3] = \<const0> ;
  assign dl0_rxtriggeresc[2] = \<const0> ;
  assign dl0_rxtriggeresc[1] = \<const0> ;
  assign dl0_rxtriggeresc[0] = \<const0> ;
  assign dl0_rxulpsesc = \<const0> ;
  assign dl0_rxvalidesc = \<const0> ;
  assign dl0_ulpsactivenot = \<const0> ;
  assign dl1_errcontrol = \<const0> ;
  assign dl1_erresc = \<const0> ;
  assign dl1_errsyncesc = \<const0> ;
  assign dl1_rxclkesc = \<const0> ;
  assign dl1_rxdataesc[7] = \<const0> ;
  assign dl1_rxdataesc[6] = \<const0> ;
  assign dl1_rxdataesc[5] = \<const0> ;
  assign dl1_rxdataesc[4] = \<const0> ;
  assign dl1_rxdataesc[3] = \<const0> ;
  assign dl1_rxdataesc[2] = \<const0> ;
  assign dl1_rxdataesc[1] = \<const0> ;
  assign dl1_rxdataesc[0] = \<const0> ;
  assign dl1_rxlpdtesc = \<const0> ;
  assign dl1_rxtriggeresc[3] = \<const0> ;
  assign dl1_rxtriggeresc[2] = \<const0> ;
  assign dl1_rxtriggeresc[1] = \<const0> ;
  assign dl1_rxtriggeresc[0] = \<const0> ;
  assign dl1_rxulpsesc = \<const0> ;
  assign dl1_rxvalidesc = \<const0> ;
  assign dl1_ulpsactivenot = \<const0> ;
  assign dl2_errcontrol = \<const0> ;
  assign dl2_erresc = \<const0> ;
  assign dl2_errsoths = \<const0> ;
  assign dl2_errsotsynchs = \<const0> ;
  assign dl2_errsyncesc = \<const0> ;
  assign dl2_rxactivehs = \<const0> ;
  assign dl2_rxclkesc = \<const0> ;
  assign dl2_rxdataesc[7] = \<const0> ;
  assign dl2_rxdataesc[6] = \<const0> ;
  assign dl2_rxdataesc[5] = \<const0> ;
  assign dl2_rxdataesc[4] = \<const0> ;
  assign dl2_rxdataesc[3] = \<const0> ;
  assign dl2_rxdataesc[2] = \<const0> ;
  assign dl2_rxdataesc[1] = \<const0> ;
  assign dl2_rxdataesc[0] = \<const0> ;
  assign dl2_rxdatahs[7] = \<const0> ;
  assign dl2_rxdatahs[6] = \<const0> ;
  assign dl2_rxdatahs[5] = \<const0> ;
  assign dl2_rxdatahs[4] = \<const0> ;
  assign dl2_rxdatahs[3] = \<const0> ;
  assign dl2_rxdatahs[2] = \<const0> ;
  assign dl2_rxdatahs[1] = \<const0> ;
  assign dl2_rxdatahs[0] = \<const0> ;
  assign dl2_rxlpdtesc = \<const0> ;
  assign dl2_rxsynchs = \<const0> ;
  assign dl2_rxtriggeresc[3] = \<const0> ;
  assign dl2_rxtriggeresc[2] = \<const0> ;
  assign dl2_rxtriggeresc[1] = \<const0> ;
  assign dl2_rxtriggeresc[0] = \<const0> ;
  assign dl2_rxulpsesc = \<const0> ;
  assign dl2_rxvalidesc = \<const0> ;
  assign dl2_rxvalidhs = \<const0> ;
  assign dl2_stopstate = \<const0> ;
  assign dl2_ulpsactivenot = \<const0> ;
  assign dl3_errcontrol = \<const0> ;
  assign dl3_erresc = \<const0> ;
  assign dl3_errsoths = \<const0> ;
  assign dl3_errsotsynchs = \<const0> ;
  assign dl3_errsyncesc = \<const0> ;
  assign dl3_rxactivehs = \<const0> ;
  assign dl3_rxclkesc = \<const0> ;
  assign dl3_rxdataesc[7] = \<const0> ;
  assign dl3_rxdataesc[6] = \<const0> ;
  assign dl3_rxdataesc[5] = \<const0> ;
  assign dl3_rxdataesc[4] = \<const0> ;
  assign dl3_rxdataesc[3] = \<const0> ;
  assign dl3_rxdataesc[2] = \<const0> ;
  assign dl3_rxdataesc[1] = \<const0> ;
  assign dl3_rxdataesc[0] = \<const0> ;
  assign dl3_rxdatahs[7] = \<const0> ;
  assign dl3_rxdatahs[6] = \<const0> ;
  assign dl3_rxdatahs[5] = \<const0> ;
  assign dl3_rxdatahs[4] = \<const0> ;
  assign dl3_rxdatahs[3] = \<const0> ;
  assign dl3_rxdatahs[2] = \<const0> ;
  assign dl3_rxdatahs[1] = \<const0> ;
  assign dl3_rxdatahs[0] = \<const0> ;
  assign dl3_rxlpdtesc = \<const0> ;
  assign dl3_rxsynchs = \<const0> ;
  assign dl3_rxtriggeresc[3] = \<const0> ;
  assign dl3_rxtriggeresc[2] = \<const0> ;
  assign dl3_rxtriggeresc[1] = \<const0> ;
  assign dl3_rxtriggeresc[0] = \<const0> ;
  assign dl3_rxulpsesc = \<const0> ;
  assign dl3_rxvalidesc = \<const0> ;
  assign dl3_rxvalidhs = \<const0> ;
  assign dl3_stopstate = \<const0> ;
  assign dl3_ulpsactivenot = \<const0> ;
  assign idelay_load = \<const0> ;
  assign idelay_tap_value[8] = \<const0> ;
  assign idelay_tap_value[7] = \<const0> ;
  assign idelay_tap_value[6] = \<const0> ;
  assign idelay_tap_value[5] = \<const0> ;
  assign idelay_tap_value[4] = \<const0> ;
  assign idelay_tap_value[3] = \<const0> ;
  assign idelay_tap_value[2] = \<const0> ;
  assign idelay_tap_value[1] = \<const0> ;
  assign idelay_tap_value[0] = \<const0> ;
  assign phy_rst = \<const0> ;
  assign reg_cal_start = \<const0> ;
  assign rx_cl_disable_ibuf = \<const0> ;
  assign rx_cl_en_hs_lpn = \<const0> ;
  assign rx_cl_fifo_rd_clk = \<const0> ;
  assign rx_cl_fifo_rd_en = \<const0> ;
  assign rx_dl0_disable_ibuf = \<const0> ;
  assign rx_dl0_en_hs_lpn = \<const0> ;
  assign rx_dl0_fifo_rd_clk = \<const0> ;
  assign rx_dl0_fifo_rd_en = \<const0> ;
  assign rx_dl1_disable_ibuf = \<const0> ;
  assign rx_dl1_en_hs_lpn = \<const0> ;
  assign rx_dl1_fifo_rd_clk = \<const0> ;
  assign rx_dl1_fifo_rd_en = \<const0> ;
  assign rx_dl2_disable_ibuf = \<const0> ;
  assign rx_dl2_en_hs_lpn = \<const0> ;
  assign rx_dl2_fifo_rd_clk = \<const0> ;
  assign rx_dl2_fifo_rd_en = \<const0> ;
  assign rx_dl3_disable_ibuf = \<const0> ;
  assign rx_dl3_en_hs_lpn = \<const0> ;
  assign rx_dl3_fifo_rd_clk = \<const0> ;
  assign rx_dl3_fifo_rd_en = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign sys_rst_byteclk_out = \<const0> ;
  assign tap_comp_res[3] = \<const0> ;
  assign tap_comp_res[2] = \<const0> ;
  assign tap_comp_res[1] = \<const0> ;
  assign tap_comp_res[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1 cl_enable_sync_fab_top_i
       (.cl_enable(cl_enable),
        .core_clk(core_clk));
  FDCE clk_active_r_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .CLR(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .D(1'b1),
        .Q(clk_active_r));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0 clk_active_r_sync
       (.clk_active_r(clk_active_r),
        .core_clk(core_clk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0 \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i 
       (.fifo_rd_rst_t2_reg(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .out(system_rst_byteclk_w),
        .rx_div4_clk(rx_div4_clk));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_csi_rx_clk_lane \gen_csi_rx_clk_lane.dphy_rx_clk_lane 
       (.D(cl_stop_state),
        .\FSM_sequential_dl_rx_state_reg[0] (\gen_rx_data_lane[1].rx_data_lane_inst_n_33 ),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (\gen_rx_data_lane[0].rx_data_lane_inst_n_34 ),
        .\cl_rx_state_reg[1]_0 (\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5 ),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_status_reg_bit_0(cl_status_reg_bit_0),
        .cl_stopstate(cl_stopstate),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_reg_bit_4_reg(\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_7 ),
        .dl_status_reg_bit_4_reg_0(\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_8 ),
        .init_done(init_done),
        .out(cl_init_done_div4clk_i),
        .rx_cl_lp_dn(rx_cl_lp_dn),
        .rx_cl_lp_dp(rx_cl_lp_dp),
        .\s_level_out_bus_d1_cdc_to_reg[0] (\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_3 ),
        .\s_level_out_bus_d3_reg[1] (dphy_en_out),
        .\s_level_out_bus_d3_reg[22] (init_value),
        .system_rst_reg(system_rst_w));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_dphy_reg \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst 
       (.D(cl_stop_state),
        .Q(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg ),
        .S({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_19 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_20 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_21 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_22 }),
        .cl_enable(cl_enable),
        .cl_status_reg_bit_0_reg(\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_3 ),
        .core_clk(core_clk),
        .dl_pkt_cnt(dl_pkt_cnt),
        .dl_status_reg({dl_status_reg[13],dl_status_reg[11],dl_status_reg[7:6],dl_status_reg[4],dl_status_reg[0]}),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (init_done),
        .out({dphy_en_out,dphy_srst_out}),
        .p_5_in(p_5_in),
        .rx_div4_clk(rx_div4_clk),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[6:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[6:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .\s_level_out_bus_d4_reg[22] (init_value),
        .\settle_cnt_reg[0] ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_23 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_24 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_25 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_26 }),
        .\settle_cnt_reg[0]_0 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_27 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_28 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_29 }),
        .\settle_cnt_reg[0]_1 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_30 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_31 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_32 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_33 }),
        .\settle_cnt_reg[0]_2 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_34 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_35 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_36 }),
        .\settle_cnt_reg[0]_3 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_37 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_38 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_39 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_40 }),
        .\settle_cnt_reg[7] (\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg_0 ),
        .system_rst_reg(system_rst_w));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane \gen_rx_data_lane[0].rx_data_lane_inst 
       (.Q(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg ),
        .S({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_19 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_20 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_21 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_22 }),
        .SR(\two_lane_hs_rx_timeout.hs_wait_count ),
        .cal_done(cal_done),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs),
        .cl_rxclkactivehs_reg_0(\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_8 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl_en_hs_lpn_reg(\gen_rx_data_lane[0].rx_data_lane_inst_n_34 ),
        .dl_pkt_cnt(dl_pkt_cnt[15:0]),
        .dl_status_reg({dl_status_reg[6],dl_status_reg[4],dl_status_reg[0]}),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (init_done),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5 ),
        .out(system_rst_w),
        .prmry_in(maxfrm_wait_done),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl0_hs_dp(rx_dl0_hs_dp),
        .rx_dl0_lp_dn(rx_dl0_lp_dn),
        .rx_dl0_lp_dp(rx_dl0_lp_dp),
        .\s_level_out_bus_d3_reg[4] ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_30 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_31 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_32 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_33 }),
        .\s_level_out_bus_d3_reg[4]_0 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_34 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_35 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_36 }),
        .s_level_out_d3_reg(init_done_div4clk_sync),
        .stg3_reg(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .stopstate0(stopstate0),
        .tap_comp_rst(tap_comp_rst),
        .\two_lane_hs_rx_timeout.hs_wait_count_reg[14] (\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ),
        .\two_lane_hs_rx_timeout.maxfrm_wait_done_reg (\gen_rx_data_lane[0].rx_data_lane_inst_n_35 ));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_data_lane_1 \gen_rx_data_lane[1].rx_data_lane_inst 
       (.Q(\gen_csi_rx_data_lane_sm.csi_rx_data_lane_sm/settle_cnt_reg_0 ),
        .cal_done(cal_done),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs),
        .cl_rxclkactivehs_reg_0(\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_7 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl_en_hs_lpn_reg(\gen_rx_data_lane[1].rx_data_lane_inst_n_33 ),
        .dl_pkt_cnt(dl_pkt_cnt[31:16]),
        .dl_status_reg({dl_status_reg[13],dl_status_reg[11],dl_status_reg[7]}),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (init_done),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\gen_csi_rx_clk_lane.dphy_rx_clk_lane_n_5 ),
        .out(system_rst_w),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl1_hs_dp(rx_dl1_hs_dp),
        .rx_dl1_lp_dn(rx_dl1_lp_dn),
        .rx_dl1_lp_dp(rx_dl1_lp_dp),
        .\s_level_out_bus_d3_reg[4] ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_23 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_24 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_25 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_26 }),
        .\s_level_out_bus_d3_reg[4]_0 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_37 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_38 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_39 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_40 }),
        .\s_level_out_bus_d3_reg[4]_1 ({\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_27 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_28 ,\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_29 }),
        .stg3_reg(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .stopstate0(stopstate0),
        .tap_comp_rst(tap_comp_rst));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9 init_done_div4clk_sync_i
       (.out(cl_init_done_div4clk_i),
        .rx_div4_clk(rx_div4_clk),
        .s_level_out_d4_reg_0(init_done_div4clk_sync));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell maxfrm_wait_done_sync_i
       (.prmry_ack(NLW_maxfrm_wait_done_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(maxfrm_wait_done),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(NLW_maxfrm_wait_done_sync_i_scndry_out_UNCONNECTED),
        .scndry_rst_n(maxfrm_wait_done_sync_i_i_1_n_0),
        .scndry_vect_out(NLW_maxfrm_wait_done_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  LUT1 #(
    .INIT(2'h1)) 
    maxfrm_wait_done_sync_i_i_1
       (.I0(core_rst),
        .O(maxfrm_wait_done_sync_i_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0 ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ),
        .I4(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ),
        .I5(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0 ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ),
        .I4(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0 ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0 ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[0] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[0]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[10] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[10]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[11] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[11]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1 
       (.CI(\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0 ),
        .CO({\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_2_in[11:8]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[12] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[12]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[13] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[13]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[14] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[14]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[15] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[15]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3 
       (.CI(\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0 ),
        .CO({\NLW_two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_CO_UNCONNECTED [3],\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_2_in[15:12]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[1] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[1]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[2] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[2]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[3] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[3]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] }),
        .O(p_2_in[3:0]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ,\two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0 }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[4] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[4]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[5] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[5]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[6] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[6]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[7] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[7]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1 
       (.CI(\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0 ),
        .CO({\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_2_in[7:4]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[8] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[8]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[9] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[9]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.maxfrm_wait_done_reg 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane[0].rx_data_lane_inst_n_35 ),
        .Q(maxfrm_wait_done),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic u_rx_support_rst_logic
       (.cl_status_reg_bit_0(cl_status_reg_bit_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (init_done),
        .out(system_rst_byteclk_w),
        .p_5_in(p_5_in),
        .\s_level_out_bus_d3_reg[1] (dphy_en_out),
        .\s_level_out_bus_d6_reg[0] (system_rst_w),
        .stopstate0(stopstate0),
        .system_rst_in(system_rst_in));
endmodule

(* CAL_CHECK_TAP_MAX = "5'b11111" *) (* CAL_CHECK_TAP_MIN = "5'b00001" *) (* CAL_CHECK_TAP_MIN_INT = "5'b00000" *) 
(* C_CAL_MODE = "FIXED" *) (* C_DPHY_LANES = "2" *) (* C_IDLY_GRP_NAME = "mipi_csi2rx_idly_group" *) 
(* C_IDLY_TAP = "1" *) (* C_SHARE_IDLYCTRL = "true" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* GEN_LD = "2'b01" *) (* GEN_PASS_RST = "2'b10" *) (* IDLE = "2'b00" *) 
(* ISERDES_IOBDELAY = "BOTH" *) (* MTBF_SYNC_STAGES = "3" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_ioi_7series" *) 
(* PASS_IN_WAIT_TIME = "32'b00000000000000010000000000000000" *) (* PASS_RST_WAIT_TIME = "6'b101000" *) (* PASS_WAIT = "2'b11" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_ioi_7series
   (core_clk,
    div4_clk_out,
    system_reset,
    clk_reset,
    io_reset,
    data_in_to_device,
    data_hs_rxp,
    data_hs_rxn,
    clk_hs_rxp,
    clk_hs_rxn,
    rx_clk_active,
    cal_start,
    tap_val_pass_in,
    idelay_tap_val_out,
    pass_in_rst,
    dlyctrl_rdy,
    cal_pass,
    cal_done);
  input core_clk;
  output div4_clk_out;
  input system_reset;
  input clk_reset;
  input io_reset;
  output [15:0]data_in_to_device;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_hs_rxp;
  input clk_hs_rxn;
  input rx_clk_active;
  input cal_start;
  input [3:0]tap_val_pass_in;
  output [4:0]idelay_tap_val_out;
  output pass_in_rst;
  output dlyctrl_rdy;
  output cal_pass;
  output cal_done;

  wire \<const0> ;
  wire clk_active_r1;
  wire clk_active_r1_i_1_n_0;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire clk_in_int;
  wire clk_in_int_buf;
  wire core_clk;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire data_in_from_pins_delay_0;
  wire data_in_from_pins_delay_1;
  wire data_in_from_pins_int_0;
  wire data_in_from_pins_int_1;
  wire [15:0]data_in_to_device;
  wire div4_clk_out;
  wire dlyctrl_rdy;
  wire io_rst_2clks_r;
  wire io_rst_2clks_r_i_1_n_0;
  wire system_reset;
  wire tap_load;
  wire [4:0]tap_val;
  wire NLW_dl0_iserdese2_master_O_UNCONNECTED;
  wire NLW_dl0_iserdese2_master_SHIFTOUT1_UNCONNECTED;
  wire NLW_dl0_iserdese2_master_SHIFTOUT2_UNCONNECTED;
  wire [4:0]\NLW_dl0_with_delay.idelaye2_bus_0_CNTVALUEOUT_UNCONNECTED ;
  wire \NLW_dl1_ibufds_inst.dl1_iserdese2_master_O_UNCONNECTED ;
  wire \NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT2_UNCONNECTED ;
  wire [4:0]\NLW_dl1_ibufds_inst.idelaye2_bus_1_CNTVALUEOUT_UNCONNECTED ;

  assign cal_done = \<const0> ;
  assign cal_pass = \<const0> ;
  assign idelay_tap_val_out[4] = \<const0> ;
  assign idelay_tap_val_out[3] = \<const0> ;
  assign idelay_tap_val_out[2] = \<const0> ;
  assign idelay_tap_val_out[1] = \<const0> ;
  assign idelay_tap_val_out[0] = \<const0> ;
  assign pass_in_rst = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFIO bufio_inst
       (.I(clk_in_int),
        .O(clk_in_int_buf));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'hE)) 
    clk_active_r1_i_1
       (.I0(clk_active_r1),
        .I1(io_rst_2clks_r),
        .O(clk_active_r1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    clk_active_r1_reg
       (.C(div4_clk_out),
        .CE(1'b1),
        .D(clk_active_r1_i_1_n_0),
        .Q(clk_active_r1),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFR #(
    .BUFR_DIVIDE("4"),
    .SIM_DEVICE("7SERIES")) 
    clkout_buf_inst
       (.CE(1'b1),
        .CLR(1'b0),
        .I(clk_in_int),
        .O(div4_clk_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("BOTH"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(2),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    dl0_iserdese2_master
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(clk_in_int_buf),
        .CLKB(clk_in_int_buf),
        .CLKDIV(div4_clk_out),
        .CLKDIVP(1'b0),
        .D(1'b0),
        .DDLY(data_in_from_pins_delay_0),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(NLW_dl0_iserdese2_master_O_UNCONNECTED),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(1'b0),
        .Q1(data_in_to_device[7]),
        .Q2(data_in_to_device[6]),
        .Q3(data_in_to_device[5]),
        .Q4(data_in_to_device[4]),
        .Q5(data_in_to_device[3]),
        .Q6(data_in_to_device[2]),
        .Q7(data_in_to_device[1]),
        .Q8(data_in_to_device[0]),
        .RST(io_rst_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_dl0_iserdese2_master_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_dl0_iserdese2_master_SHIFTOUT2_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_csi2rx_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("FALSE"),
    .IDELAY_TYPE("FIXED"),
    .IDELAY_VALUE(1),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \dl0_with_delay.idelaye2_bus_0 
       (.C(core_clk),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(tap_val),
        .CNTVALUEOUT(\NLW_dl0_with_delay.idelaye2_bus_0_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b0),
        .DATAOUT(data_in_from_pins_delay_0),
        .IDATAIN(data_in_from_pins_int_0),
        .INC(1'b0),
        .LD(tap_load),
        .LDPIPEEN(1'b0),
        .REGRST(system_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("BOTH"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(2),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    \dl1_ibufds_inst.dl1_iserdese2_master 
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(clk_in_int_buf),
        .CLKB(clk_in_int_buf),
        .CLKDIV(div4_clk_out),
        .CLKDIVP(1'b0),
        .D(1'b0),
        .DDLY(data_in_from_pins_delay_1),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(\NLW_dl1_ibufds_inst.dl1_iserdese2_master_O_UNCONNECTED ),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(1'b0),
        .Q1(data_in_to_device[15]),
        .Q2(data_in_to_device[14]),
        .Q3(data_in_to_device[13]),
        .Q4(data_in_to_device[12]),
        .Q5(data_in_to_device[11]),
        .Q6(data_in_to_device[10]),
        .Q7(data_in_to_device[9]),
        .Q8(data_in_to_device[8]),
        .RST(io_rst_2clks_r),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_dl1_ibufds_inst.dl1_iserdese2_master_SHIFTOUT2_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    \dl1_ibufds_inst.ibufds_dl1_inst 
       (.I(data_hs_rxp[1]),
        .IB(data_hs_rxn[1]),
        .O(data_in_from_pins_int_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_csi2rx_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("FALSE"),
    .IDELAY_TYPE("FIXED"),
    .IDELAY_VALUE(1),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \dl1_ibufds_inst.idelaye2_bus_1 
       (.C(core_clk),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(tap_val),
        .CNTVALUEOUT(\NLW_dl1_ibufds_inst.idelaye2_bus_1_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b0),
        .DATAOUT(data_in_from_pins_delay_1),
        .IDATAIN(data_in_from_pins_int_1),
        .INC(1'b0),
        .LD(tap_load),
        .LDPIPEEN(1'b0),
        .REGRST(system_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    ibufds_clk_inst
       (.I(clk_hs_rxp),
        .IB(clk_hs_rxn),
        .O(clk_in_int));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    ibufds_dl0_inst
       (.I(data_hs_rxp[0]),
        .IB(data_hs_rxn[0]),
        .O(data_in_from_pins_int_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_csi2rx_idly_group" *) 
  IDELAYCTRL #(
    .SIM_DEVICE("7SERIES")) 
    \idly_ctrl.delayctrl 
       (.RDY(dlyctrl_rdy),
        .REFCLK(core_clk),
        .RST(system_reset));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT1 #(
    .INIT(2'h1)) 
    io_rst_2clks_r_i_1
       (.I0(clk_active_r1),
        .O(io_rst_2clks_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    io_rst_2clks_r_reg
       (.C(div4_clk_out),
        .CE(1'b1),
        .D(io_rst_2clks_r_i_1_n_0),
        .Q(io_rst_2clks_r),
        .R(1'b0));
endmodule

(* DPHY_PRESET = "CSI2RX_XLNX" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) 
(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_rst_logic_7series" *) (* RESET_FSM_DONE = "2'b10" *) (* RST_BEGIN = "2'b00" *) 
(* STABLE_CLK_PERIOD = "5.000000" *) (* WAIT_FOR_ENABLE = "2'b01" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_logic_7series
   (core_clk,
    core_rst,
    cl_enable,
    srst,
    dphyen,
    system_rst_byteclk,
    system_rst);
  input core_clk;
  input core_rst;
  input cl_enable;
  input srst;
  input dphyen;
  (* keep = "true" *) output system_rst_byteclk;
  (* keep = "true" *) output system_rst;

  wire \<const0> ;
  wire cl_enable;
  wire core_clk;
  wire core_rst;
  wire core_rst_sync;
  wire dphyen;
  wire [1:0]rst_blk_state;
  wire \rst_blk_state[0]_i_1_n_0 ;
  wire \rst_blk_state[1]_i_1_n_0 ;
  wire srst;
  (* RTL_KEEP = "true" *) wire system_rst;
  wire system_rst_byteclk_i_1_n_0;
  wire system_rst_byteclk_i_2_n_0;
  (* RTL_KEEP = "true" *) wire system_rst_byteclk_orig;
  wire system_rst_i_1_n_0;
  wire NLW_core_rst_sync_i_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED;

  assign system_rst_byteclk = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2 core_rst_sync_i
       (.prmry_ack(NLW_core_rst_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(core_rst),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_sync),
        .scndry_rst_n(1'b0),
        .scndry_vect_out(NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h70777777)) 
    \rst_blk_state[0]_i_1 
       (.I0(rst_blk_state[0]),
        .I1(rst_blk_state[1]),
        .I2(srst),
        .I3(dphyen),
        .I4(cl_enable),
        .O(\rst_blk_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h07000000)) 
    \rst_blk_state[1]_i_1 
       (.I0(rst_blk_state[0]),
        .I1(rst_blk_state[1]),
        .I2(srst),
        .I3(dphyen),
        .I4(cl_enable),
        .O(\rst_blk_state[1]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\rst_blk_state[0]_i_1_n_0 ),
        .Q(rst_blk_state[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\rst_blk_state[1]_i_1_n_0 ),
        .Q(rst_blk_state[1]));
  LUT5 #(
    .INIT(32'hFC8C0C8C)) 
    system_rst_byteclk_i_1
       (.I0(system_rst_byteclk_orig),
        .I1(system_rst_byteclk_i_2_n_0),
        .I2(rst_blk_state[0]),
        .I3(rst_blk_state[1]),
        .I4(system_rst_byteclk_orig),
        .O(system_rst_byteclk_i_1_n_0));
  LUT3 #(
    .INIT(8'hBF)) 
    system_rst_byteclk_i_2
       (.I0(srst),
        .I1(dphyen),
        .I2(cl_enable),
        .O(system_rst_byteclk_i_2_n_0));
  (* KEEP = "yes" *) 
  FDPE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_byteclk_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst_byteclk_orig));
  LUT5 #(
    .INIT(32'hFC8C0C8C)) 
    system_rst_i_1
       (.I0(system_rst),
        .I1(system_rst_byteclk_i_2_n_0),
        .I2(rst_blk_state[0]),
        .I3(rst_blk_state[1]),
        .I4(system_rst),
        .O(system_rst_i_1_n_0));
  (* KEEP = "yes" *) 
  FDPE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_rst_sync" *) (* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire \<const0> ;
  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_rst_sync" *) (* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__1
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire \<const0> ;
  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_rst_sync" *) (* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__2
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_rst_sync" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_rst_sync__parameterized0
   (fifo_rd_rst_t2_reg,
    out,
    rx_div4_clk);
  output fifo_rd_rst_t2_reg;
  input out;
  input rx_div4_clk;

  wire out;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign fifo_rd_rst_t2_reg = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(out),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sot_det_align" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align
   (E,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_errsoths,
    dl1_errsotsynchs,
    pkt_cnt_r0,
    dl1_rxdatahs,
    dl_en_hs_lpn_i,
    rx_div4_clk,
    rx_dl1_hs_dp);
  output [0:0]E;
  output dl1_rxvalidhs;
  output dl1_rxsynchs;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output pkt_cnt_r0;
  output [7:0]dl1_rxdatahs;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;
  input [7:0]rx_dl1_hs_dp;

  wire [0:0]E;
  wire align_done_i_10__0_n_0;
  wire align_done_i_11__0_n_0;
  wire align_done_i_12__0_n_0;
  wire align_done_i_13__0_n_0;
  wire align_done_i_14__0_n_0;
  wire align_done_i_15__0_n_0;
  wire align_done_i_16__0_n_0;
  wire align_done_i_17__0_n_0;
  wire align_done_i_18__0_n_0;
  wire align_done_i_19__0_n_0;
  wire align_done_i_1__0_n_0;
  wire align_done_i_20__0_n_0;
  wire align_done_i_21__0_n_0;
  wire align_done_i_22_n_0;
  wire align_done_i_2_n_0;
  wire align_done_i_3__0_n_0;
  wire align_done_i_4__0_n_0;
  wire align_done_i_5__0_n_0;
  wire align_done_i_6__0_n_0;
  wire align_done_i_7__0_n_0;
  wire align_done_i_8__0_n_0;
  wire align_done_i_9__0_n_0;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire dl_en_hs_lpn_i;
  wire en_hs_lpn_sync;
  wire en_hs_lpn_sync_r;
  wire errsoths_i_10__0_n_0;
  wire errsoths_i_11__0_n_0;
  wire errsoths_i_12__0_n_0;
  wire errsoths_i_13__0_n_0;
  wire errsoths_i_1__0_n_0;
  wire errsoths_i_2__0_n_0;
  wire errsoths_i_3__0_n_0;
  wire errsoths_i_4_n_0;
  wire errsoths_i_5__0_n_0;
  wire errsoths_i_6__0_n_0;
  wire errsoths_i_7__0_n_0;
  wire errsoths_i_8__0_n_0;
  wire errsoths_i_9__0_n_0;
  wire errsotsynchs_i_1__0_n_0;
  wire errsotsynchs_i_2__0_n_0;
  wire errsotsynchs_i_3__0_n_0;
  wire errsotsynchs_i_4__0_n_0;
  wire errsotsynchs_i_5__0_n_0;
  (* DONT_TOUCH *) wire [15:0]h_reg;
  wire [7:0]hs_data;
  wire \hs_data[0]_i_2__0_n_0 ;
  wire \hs_data[1]_i_2__0_n_0 ;
  wire \hs_data[2]_i_2__0_n_0 ;
  wire \hs_data[3]_i_2__0_n_0 ;
  wire \hs_data[4]_i_2__0_n_0 ;
  wire \hs_data[4]_i_3__0_n_0 ;
  wire \hs_data[5]_i_2__0_n_0 ;
  wire \hs_data[5]_i_3__0_n_0 ;
  wire \hs_data[6]_i_2__0_n_0 ;
  wire \hs_data[6]_i_3__0_n_0 ;
  wire \hs_data[7]_i_1__0_n_0 ;
  wire \hs_data[7]_i_3__0_n_0 ;
  wire \hs_data[7]_i_4__0_n_0 ;
  wire hs_dvalid_i_1__0_n_0;
  wire pkt_cnt_r0;
  wire rx_div4_clk;
  wire [7:0]rx_dl1_hs_dp;
  wire [7:0]rx_hs_dp_r;
  wire rxsynchs_i_10__0_n_0;
  wire rxsynchs_i_11__0_n_0;
  wire rxsynchs_i_12__0_n_0;
  wire rxsynchs_i_13__0_n_0;
  wire rxsynchs_i_14__0_n_0;
  wire rxsynchs_i_15_n_0;
  wire rxsynchs_i_16_n_0;
  wire rxsynchs_i_1__0_n_0;
  wire rxsynchs_i_2__0_n_0;
  wire rxsynchs_i_3__0_n_0;
  wire rxsynchs_i_4__0_n_0;
  wire rxsynchs_i_5__0_n_0;
  wire rxsynchs_i_6__0_n_0;
  wire rxsynchs_i_7__0_n_0;
  wire rxsynchs_i_8__0_n_0;
  wire rxsynchs_i_9__0_n_0;
  wire \start_bit[0]_i_1__0_n_0 ;
  wire \start_bit[0]_i_2__0_n_0 ;
  wire \start_bit[0]_i_3__0_n_0 ;
  wire \start_bit[0]_i_4__0_n_0 ;
  wire \start_bit[0]_i_5__0_n_0 ;
  wire \start_bit[0]_i_6_n_0 ;
  wire \start_bit[0]_i_7__0_n_0 ;
  wire \start_bit[0]_i_8__0_n_0 ;
  wire \start_bit[1]_i_1__0_n_0 ;
  wire \start_bit[1]_i_2__0_n_0 ;
  wire \start_bit[1]_i_3_n_0 ;
  wire \start_bit[1]_i_4_n_0 ;
  wire \start_bit[1]_i_5_n_0 ;
  wire \start_bit[1]_i_6_n_0 ;
  wire \start_bit[2]_i_10__0_n_0 ;
  wire \start_bit[2]_i_11__0_n_0 ;
  wire \start_bit[2]_i_12__0_n_0 ;
  wire \start_bit[2]_i_13_n_0 ;
  wire \start_bit[2]_i_14_n_0 ;
  wire \start_bit[2]_i_15_n_0 ;
  wire \start_bit[2]_i_1__0_n_0 ;
  wire \start_bit[2]_i_2_n_0 ;
  wire \start_bit[2]_i_3__0_n_0 ;
  wire \start_bit[2]_i_4__0_n_0 ;
  wire \start_bit[2]_i_5__0_n_0 ;
  wire \start_bit[2]_i_6__0_n_0 ;
  wire \start_bit[2]_i_7__0_n_0 ;
  wire \start_bit[2]_i_8__0_n_0 ;
  wire \start_bit[2]_i_9__0_n_0 ;
  wire \start_bit_reg_n_0_[0] ;
  wire \start_bit_reg_n_0_[1] ;
  wire \start_bit_reg_n_0_[2] ;

  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    align_done_i_10__0
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[6]),
        .I4(h_reg[7]),
        .I5(h_reg[5]),
        .O(align_done_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h0080000080E80080)) 
    align_done_i_11__0
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[14]),
        .I3(h_reg[13]),
        .I4(h_reg[12]),
        .I5(h_reg[9]),
        .O(align_done_i_11__0_n_0));
  LUT4 #(
    .INIT(16'h00A2)) 
    align_done_i_12__0
       (.I0(align_done_i_8__0_n_0),
        .I1(align_done_i_17__0_n_0),
        .I2(align_done_i_18__0_n_0),
        .I3(align_done_i_19__0_n_0),
        .O(align_done_i_12__0_n_0));
  LUT6 #(
    .INIT(64'h40D4004000400000)) 
    align_done_i_13__0
       (.I0(h_reg[8]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[11]),
        .O(align_done_i_13__0_n_0));
  LUT6 #(
    .INIT(64'h7FFF00007FFF7FFF)) 
    align_done_i_14__0
       (.I0(align_done_i_20__0_n_0),
        .I1(h_reg[11]),
        .I2(h_reg[10]),
        .I3(h_reg[9]),
        .I4(align_done_i_21__0_n_0),
        .I5(align_done_i_22_n_0),
        .O(align_done_i_14__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAAAAAAA)) 
    align_done_i_15__0
       (.I0(\start_bit[1]_i_6_n_0 ),
        .I1(h_reg[13]),
        .I2(h_reg[14]),
        .I3(h_reg[15]),
        .I4(h_reg[12]),
        .I5(h_reg[10]),
        .O(align_done_i_15__0_n_0));
  LUT5 #(
    .INIT(32'hAAAAAAFE)) 
    align_done_i_16__0
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(h_reg[2]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(align_done_i_16__0_n_0));
  LUT6 #(
    .INIT(64'hFFABFFABFFABAAAB)) 
    align_done_i_17__0
       (.I0(h_reg[10]),
        .I1(h_reg[7]),
        .I2(h_reg[8]),
        .I3(h_reg[11]),
        .I4(h_reg[13]),
        .I5(h_reg[12]),
        .O(align_done_i_17__0_n_0));
  LUT6 #(
    .INIT(64'hBBBAFAFAAABABAFA)) 
    align_done_i_18__0
       (.I0(h_reg[9]),
        .I1(h_reg[12]),
        .I2(h_reg[10]),
        .I3(h_reg[14]),
        .I4(h_reg[11]),
        .I5(h_reg[13]),
        .O(align_done_i_18__0_n_0));
  LUT5 #(
    .INIT(32'h00800000)) 
    align_done_i_19__0
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[14]),
        .I3(h_reg[13]),
        .I4(h_reg[12]),
        .O(align_done_i_19__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'hF0E0)) 
    align_done_i_1__0
       (.I0(align_done_i_2_n_0),
        .I1(align_done_i_3__0_n_0),
        .I2(en_hs_lpn_sync_r),
        .I3(E),
        .O(align_done_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    align_done_i_2
       (.I0(align_done_i_4__0_n_0),
        .I1(\start_bit[0]_i_3__0_n_0 ),
        .I2(\start_bit[0]_i_2__0_n_0 ),
        .O(align_done_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    align_done_i_20__0
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .O(align_done_i_20__0_n_0));
  LUT6 #(
    .INIT(64'hBAAABABAFEBAFAFA)) 
    align_done_i_21__0
       (.I0(h_reg[8]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[11]),
        .O(align_done_i_21__0_n_0));
  LUT6 #(
    .INIT(64'hFFABFFABFFABAAAB)) 
    align_done_i_22
       (.I0(h_reg[9]),
        .I1(h_reg[6]),
        .I2(h_reg[7]),
        .I3(h_reg[10]),
        .I4(h_reg[12]),
        .I5(h_reg[11]),
        .O(align_done_i_22_n_0));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    align_done_i_3__0
       (.I0(align_done_i_5__0_n_0),
        .I1(align_done_i_6__0_n_0),
        .I2(align_done_i_7__0_n_0),
        .I3(align_done_i_8__0_n_0),
        .O(align_done_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    align_done_i_4__0
       (.I0(rxsynchs_i_7__0_n_0),
        .I1(align_done_i_9__0_n_0),
        .I2(align_done_i_10__0_n_0),
        .O(align_done_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'hE)) 
    align_done_i_5__0
       (.I0(align_done_i_11__0_n_0),
        .I1(align_done_i_12__0_n_0),
        .O(align_done_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    align_done_i_6__0
       (.I0(align_done_i_13__0_n_0),
        .I1(align_done_i_11__0_n_0),
        .I2(align_done_i_14__0_n_0),
        .O(align_done_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hA2AAFBAABBAAFFAA)) 
    align_done_i_7__0
       (.I0(align_done_i_15__0_n_0),
        .I1(h_reg[13]),
        .I2(h_reg[14]),
        .I3(h_reg[11]),
        .I4(h_reg[12]),
        .I5(h_reg[15]),
        .O(align_done_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hF7FF71F7FFFFF7FF)) 
    align_done_i_8__0
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[14]),
        .I3(h_reg[15]),
        .I4(h_reg[10]),
        .I5(h_reg[11]),
        .O(align_done_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h5101D54151115101)) 
    align_done_i_9__0
       (.I0(align_done_i_16__0_n_0),
        .I1(h_reg[5]),
        .I2(h_reg[6]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(align_done_i_9__0_n_0));
  FDRE align_done_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(align_done_i_1__0_n_0),
        .Q(E),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0 en_hs_lpn_sync_i
       (.dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .out(en_hs_lpn_sync),
        .rx_div4_clk(rx_div4_clk));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    en_hs_lpn_sync_r_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(en_hs_lpn_sync),
        .Q(en_hs_lpn_sync_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4904040004000000)) 
    errsoths_i_10__0
       (.I0(h_reg[5]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[8]),
        .I4(h_reg[7]),
        .I5(h_reg[6]),
        .O(errsoths_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h4000944000004000)) 
    errsoths_i_11__0
       (.I0(h_reg[7]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[12]),
        .I4(h_reg[11]),
        .I5(h_reg[10]),
        .O(errsoths_i_11__0_n_0));
  LUT4 #(
    .INIT(16'hF7FF)) 
    errsoths_i_12__0
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[14]),
        .I3(h_reg[15]),
        .O(errsoths_i_12__0_n_0));
  LUT6 #(
    .INIT(64'h4904040004000000)) 
    errsoths_i_13__0
       (.I0(h_reg[9]),
        .I1(h_reg[12]),
        .I2(h_reg[13]),
        .I3(h_reg[14]),
        .I4(h_reg[10]),
        .I5(h_reg[11]),
        .O(errsoths_i_13__0_n_0));
  LUT6 #(
    .INIT(64'hAA8AFFFFAA8A0000)) 
    errsoths_i_1__0
       (.I0(errsoths_i_2__0_n_0),
        .I1(errsoths_i_3__0_n_0),
        .I2(errsoths_i_4_n_0),
        .I3(errsoths_i_5__0_n_0),
        .I4(rxsynchs_i_3__0_n_0),
        .I5(dl1_errsoths),
        .O(errsoths_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    errsoths_i_2__0
       (.I0(en_hs_lpn_sync_r),
        .I1(E),
        .O(errsoths_i_2__0_n_0));
  LUT5 #(
    .INIT(32'h000055F3)) 
    errsoths_i_3__0
       (.I0(errsoths_i_6__0_n_0),
        .I1(errsoths_i_7__0_n_0),
        .I2(errsoths_i_8__0_n_0),
        .I3(rxsynchs_i_5__0_n_0),
        .I4(align_done_i_2_n_0),
        .O(errsoths_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hB6FBFBFFFBFFFFFF)) 
    errsoths_i_4
       (.I0(h_reg[3]),
        .I1(h_reg[6]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[5]),
        .I5(h_reg[4]),
        .O(errsoths_i_4_n_0));
  LUT6 #(
    .INIT(64'h4000000094404000)) 
    errsoths_i_5__0
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(h_reg[9]),
        .I3(h_reg[5]),
        .I4(h_reg[6]),
        .I5(h_reg[4]),
        .O(errsoths_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h1011)) 
    errsoths_i_6__0
       (.I0(errsoths_i_9__0_n_0),
        .I1(errsoths_i_10__0_n_0),
        .I2(\start_bit[2]_i_4__0_n_0 ),
        .I3(errsoths_i_11__0_n_0),
        .O(errsoths_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFFABAA)) 
    errsoths_i_7__0
       (.I0(align_done_i_8__0_n_0),
        .I1(errsoths_i_12__0_n_0),
        .I2(h_reg[10]),
        .I3(h_reg[11]),
        .I4(align_done_i_6__0_n_0),
        .I5(errsoths_i_13__0_n_0),
        .O(errsoths_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h6110100010000000)) 
    errsoths_i_8__0
       (.I0(h_reg[8]),
        .I1(h_reg[12]),
        .I2(h_reg[13]),
        .I3(h_reg[11]),
        .I4(h_reg[10]),
        .I5(h_reg[9]),
        .O(errsoths_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h4000000094404000)) 
    errsoths_i_9__0
       (.I0(h_reg[6]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[9]),
        .I4(h_reg[11]),
        .I5(h_reg[10]),
        .O(errsoths_i_9__0_n_0));
  FDRE errsoths_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsoths_i_1__0_n_0),
        .Q(dl1_errsoths),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    errsotsynchs_i_1__0
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(errsotsynchs_i_2__0_n_0),
        .I3(rxsynchs_i_3__0_n_0),
        .I4(dl1_errsotsynchs),
        .O(errsotsynchs_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFFABAA)) 
    errsotsynchs_i_2__0
       (.I0(align_done_i_2_n_0),
        .I1(rxsynchs_i_5__0_n_0),
        .I2(errsotsynchs_i_3__0_n_0),
        .I3(errsotsynchs_i_4__0_n_0),
        .I4(rxsynchs_i_4__0_n_0),
        .I5(errsotsynchs_i_5__0_n_0),
        .O(errsotsynchs_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    errsotsynchs_i_3__0
       (.I0(align_done_i_14__0_n_0),
        .I1(align_done_i_11__0_n_0),
        .O(errsotsynchs_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'hF0FD)) 
    errsotsynchs_i_4__0
       (.I0(align_done_i_7__0_n_0),
        .I1(align_done_i_11__0_n_0),
        .I2(align_done_i_6__0_n_0),
        .I3(align_done_i_12__0_n_0),
        .O(errsotsynchs_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hFF01)) 
    errsotsynchs_i_5__0
       (.I0(align_done_i_10__0_n_0),
        .I1(align_done_i_9__0_n_0),
        .I2(\start_bit[0]_i_2__0_n_0 ),
        .I3(\start_bit[0]_i_3__0_n_0 ),
        .O(errsotsynchs_i_5__0_n_0));
  FDRE errsotsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsotsynchs_i_1__0_n_0),
        .Q(dl1_errsotsynchs),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[8]),
        .Q(h_reg[0]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[2]),
        .Q(h_reg[10]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[3]),
        .Q(h_reg[11]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[4]),
        .Q(h_reg[12]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[5]),
        .Q(h_reg[13]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[6]),
        .Q(h_reg[14]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[7]),
        .Q(h_reg[15]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[9]),
        .Q(h_reg[1]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[10]),
        .Q(h_reg[2]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[11]),
        .Q(h_reg[3]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[12]),
        .Q(h_reg[4]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[13]),
        .Q(h_reg[5]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[14]),
        .Q(h_reg[6]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[15]),
        .Q(h_reg[7]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[0]),
        .Q(h_reg[8]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[1]),
        .Q(h_reg[9]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[0]_i_1__0 
       (.I0(\hs_data[4]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[0]_i_2__0_n_0 ),
        .O(hs_data[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[0]_i_2__0 
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[2]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[1]),
        .O(\hs_data[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[1]_i_1__0 
       (.I0(\hs_data[5]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[1]_i_2__0_n_0 ),
        .O(hs_data[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[1]_i_2__0 
       (.I0(h_reg[5]),
        .I1(h_reg[4]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[3]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[2]),
        .O(\hs_data[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[2]_i_1__0 
       (.I0(\hs_data[6]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[2]_i_2__0_n_0 ),
        .O(hs_data[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[2]_i_2__0 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[4]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[3]),
        .O(\hs_data[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[3]_i_1__0 
       (.I0(\hs_data[7]_i_4__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[3]_i_2__0_n_0 ),
        .O(hs_data[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[3]_i_2__0 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[5]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[4]),
        .O(\hs_data[3]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[4]_i_1__0 
       (.I0(\hs_data[4]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[4]_i_3__0_n_0 ),
        .O(hs_data[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_2__0 
       (.I0(h_reg[12]),
        .I1(h_reg[11]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[10]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[9]),
        .O(\hs_data[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_3__0 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[6]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[5]),
        .O(\hs_data[4]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[5]_i_1__0 
       (.I0(\hs_data[5]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[5]_i_3__0_n_0 ),
        .O(hs_data[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_2__0 
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[11]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[10]),
        .O(\hs_data[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_3__0 
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[7]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[6]),
        .O(\hs_data[5]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[6]_i_1__0 
       (.I0(\hs_data[6]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[6]_i_3__0_n_0 ),
        .O(hs_data[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_2__0 
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[12]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[11]),
        .O(\hs_data[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_3__0 
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[8]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[7]),
        .O(\hs_data[6]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_data[7]_i_1__0 
       (.I0(en_hs_lpn_sync_r),
        .O(\hs_data[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[7]_i_2__0 
       (.I0(\hs_data[7]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[7]_i_4__0_n_0 ),
        .O(hs_data[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_3__0 
       (.I0(h_reg[15]),
        .I1(h_reg[14]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[13]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[12]),
        .O(\hs_data[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_4__0 
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[9]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[8]),
        .O(\hs_data[7]_i_4__0_n_0 ));
  FDRE \hs_data_reg[0] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[0]),
        .Q(dl1_rxdatahs[0]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[1] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[1]),
        .Q(dl1_rxdatahs[1]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[2] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[2]),
        .Q(dl1_rxdatahs[2]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[3] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[3]),
        .Q(dl1_rxdatahs[3]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[4] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[4]),
        .Q(dl1_rxdatahs[4]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[5] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[5]),
        .Q(dl1_rxdatahs[5]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[6] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[6]),
        .Q(dl1_rxdatahs[6]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[7] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[7]),
        .Q(dl1_rxdatahs[7]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    hs_dvalid_i_1__0
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(dl1_rxvalidhs),
        .O(hs_dvalid_i_1__0_n_0));
  FDRE hs_dvalid_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(hs_dvalid_i_1__0_n_0),
        .Q(dl1_rxvalidhs),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \pkt_cnt_r[0]_i_1__0 
       (.I0(E),
        .I1(dl1_errsotsynchs),
        .I2(dl1_rxsynchs),
        .I3(dl1_errsoths),
        .O(pkt_cnt_r0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[0]),
        .Q(rx_hs_dp_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[1]),
        .Q(rx_hs_dp_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[2]),
        .Q(rx_hs_dp_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[3]),
        .Q(rx_hs_dp_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[4]),
        .Q(rx_hs_dp_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[5]),
        .Q(rx_hs_dp_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[6]),
        .Q(rx_hs_dp_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[7]),
        .Q(rx_hs_dp_r[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h40000000D4404000)) 
    rxsynchs_i_10__0
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[11]),
        .I5(h_reg[6]),
        .O(rxsynchs_i_10__0_n_0));
  LUT5 #(
    .INIT(32'hDCFFC0FF)) 
    rxsynchs_i_11__0
       (.I0(h_reg[11]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[8]),
        .I4(h_reg[12]),
        .O(rxsynchs_i_11__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0100)) 
    rxsynchs_i_12__0
       (.I0(h_reg[8]),
        .I1(h_reg[10]),
        .I2(h_reg[11]),
        .I3(h_reg[9]),
        .I4(h_reg[7]),
        .I5(rxsynchs_i_15_n_0),
        .O(rxsynchs_i_12__0_n_0));
  LUT5 #(
    .INIT(32'hFF7FFFFF)) 
    rxsynchs_i_13__0
       (.I0(h_reg[12]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[11]),
        .I4(h_reg[8]),
        .O(rxsynchs_i_13__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0080)) 
    rxsynchs_i_14__0
       (.I0(h_reg[9]),
        .I1(h_reg[10]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[5]),
        .I5(\start_bit[2]_i_10__0_n_0 ),
        .O(rxsynchs_i_14__0_n_0));
  LUT6 #(
    .INIT(64'h444400004444FFF0)) 
    rxsynchs_i_15
       (.I0(rxsynchs_i_16_n_0),
        .I1(h_reg[12]),
        .I2(h_reg[6]),
        .I3(h_reg[5]),
        .I4(h_reg[9]),
        .I5(h_reg[8]),
        .O(rxsynchs_i_15_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    rxsynchs_i_16
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .O(rxsynchs_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    rxsynchs_i_1__0
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(rxsynchs_i_2__0_n_0),
        .I3(rxsynchs_i_3__0_n_0),
        .I4(dl1_rxsynchs),
        .O(rxsynchs_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h000000000000BABF)) 
    rxsynchs_i_2__0
       (.I0(align_done_i_2_n_0),
        .I1(rxsynchs_i_4__0_n_0),
        .I2(rxsynchs_i_5__0_n_0),
        .I3(rxsynchs_i_6__0_n_0),
        .I4(rxsynchs_i_7__0_n_0),
        .I5(\start_bit[0]_i_2__0_n_0 ),
        .O(rxsynchs_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    rxsynchs_i_3__0
       (.I0(align_done_i_3__0_n_0),
        .I1(align_done_i_2_n_0),
        .I2(E),
        .I3(en_hs_lpn_sync_r),
        .O(rxsynchs_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFFF1)) 
    rxsynchs_i_4__0
       (.I0(rxsynchs_i_8__0_n_0),
        .I1(rxsynchs_i_9__0_n_0),
        .I2(rxsynchs_i_10__0_n_0),
        .I3(align_done_i_10__0_n_0),
        .O(rxsynchs_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555F755)) 
    rxsynchs_i_5__0
       (.I0(rxsynchs_i_9__0_n_0),
        .I1(rxsynchs_i_11__0_n_0),
        .I2(rxsynchs_i_12__0_n_0),
        .I3(rxsynchs_i_13__0_n_0),
        .I4(align_done_i_13__0_n_0),
        .I5(\start_bit[2]_i_2_n_0 ),
        .O(rxsynchs_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    rxsynchs_i_6__0
       (.I0(align_done_i_8__0_n_0),
        .I1(align_done_i_14__0_n_0),
        .I2(align_done_i_11__0_n_0),
        .I3(align_done_i_13__0_n_0),
        .O(rxsynchs_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    rxsynchs_i_7__0
       (.I0(h_reg[7]),
        .I1(h_reg[8]),
        .I2(h_reg[5]),
        .I3(h_reg[6]),
        .I4(h_reg[9]),
        .I5(h_reg[4]),
        .O(rxsynchs_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hAABBAAAAFBFFAAAA)) 
    rxsynchs_i_8__0
       (.I0(rxsynchs_i_14__0_n_0),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[8]),
        .I4(h_reg[6]),
        .I5(h_reg[7]),
        .O(rxsynchs_i_8__0_n_0));
  LUT6 #(
    .INIT(64'hDF4DFFDFFFDFFFFF)) 
    rxsynchs_i_9__0
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[12]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(rxsynchs_i_9__0_n_0));
  FDRE rxsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rxsynchs_i_1__0_n_0),
        .Q(dl1_rxsynchs),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFF00000001010000)) 
    \start_bit[0]_i_1__0 
       (.I0(\start_bit[0]_i_2__0_n_0 ),
        .I1(\start_bit[0]_i_3__0_n_0 ),
        .I2(\start_bit[0]_i_4__0_n_0 ),
        .I3(\start_bit_reg_n_0_[0] ),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(\start_bit[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0080000080E80080)) 
    \start_bit[0]_i_2__0 
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(\start_bit[0]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \start_bit[0]_i_3__0 
       (.I0(\start_bit[0]_i_5__0_n_0 ),
        .I1(rxsynchs_i_7__0_n_0),
        .O(\start_bit[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00F100F1000000F1)) 
    \start_bit[0]_i_4__0 
       (.I0(align_done_i_6__0_n_0),
        .I1(\start_bit[0]_i_6_n_0 ),
        .I2(rxsynchs_i_5__0_n_0),
        .I3(align_done_i_4__0_n_0),
        .I4(\start_bit[2]_i_5__0_n_0 ),
        .I5(\start_bit[2]_i_4__0_n_0 ),
        .O(\start_bit[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0AAAEEFEEEFEFEFE)) 
    \start_bit[0]_i_5__0 
       (.I0(h_reg[3]),
        .I1(\start_bit[0]_i_7__0_n_0 ),
        .I2(h_reg[4]),
        .I3(\start_bit[0]_i_8__0_n_0 ),
        .I4(h_reg[5]),
        .I5(h_reg[6]),
        .O(\start_bit[0]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h000B)) 
    \start_bit[0]_i_6 
       (.I0(align_done_i_7__0_n_0),
        .I1(align_done_i_8__0_n_0),
        .I2(align_done_i_5__0_n_0),
        .I3(align_done_i_6__0_n_0),
        .O(\start_bit[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E000E0F0E0F0E)) 
    \start_bit[0]_i_7__0 
       (.I0(h_reg[2]),
        .I1(h_reg[1]),
        .I2(h_reg[4]),
        .I3(h_reg[5]),
        .I4(h_reg[8]),
        .I5(h_reg[7]),
        .O(\start_bit[0]_i_7__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \start_bit[0]_i_8__0 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .O(\start_bit[0]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hCA0ACAAA)) 
    \start_bit[1]_i_1__0 
       (.I0(\start_bit[1]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[1] ),
        .I2(en_hs_lpn_sync_r),
        .I3(E),
        .I4(align_done_i_2_n_0),
        .O(\start_bit[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00FF00000045)) 
    \start_bit[1]_i_2__0 
       (.I0(align_done_i_6__0_n_0),
        .I1(align_done_i_5__0_n_0),
        .I2(\start_bit[1]_i_3_n_0 ),
        .I3(\start_bit[2]_i_7__0_n_0 ),
        .I4(\start_bit[2]_i_6__0_n_0 ),
        .I5(\start_bit[2]_i_2_n_0 ),
        .O(\start_bit[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0008AAAA00080008)) 
    \start_bit[1]_i_3 
       (.I0(align_done_i_8__0_n_0),
        .I1(\start_bit[1]_i_4_n_0 ),
        .I2(\start_bit[1]_i_5_n_0 ),
        .I3(\start_bit[1]_i_6_n_0 ),
        .I4(errsoths_i_12__0_n_0),
        .I5(h_reg[11]),
        .O(\start_bit[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF2FAF0F)) 
    \start_bit[1]_i_4 
       (.I0(h_reg[13]),
        .I1(h_reg[14]),
        .I2(h_reg[11]),
        .I3(h_reg[12]),
        .I4(h_reg[15]),
        .O(\start_bit[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    \start_bit[1]_i_5 
       (.I0(h_reg[10]),
        .I1(h_reg[12]),
        .I2(h_reg[15]),
        .I3(h_reg[14]),
        .I4(h_reg[13]),
        .O(\start_bit[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0054005400545554)) 
    \start_bit[1]_i_6 
       (.I0(h_reg[11]),
        .I1(h_reg[8]),
        .I2(h_reg[9]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[14]),
        .O(\start_bit[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000E000E000E0F0E)) 
    \start_bit[2]_i_10__0 
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(h_reg[6]),
        .I3(h_reg[7]),
        .I4(h_reg[9]),
        .I5(h_reg[8]),
        .O(\start_bit[2]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'h20000000)) 
    \start_bit[2]_i_11__0 
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[6]),
        .I4(h_reg[7]),
        .O(\start_bit[2]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000FF54545454)) 
    \start_bit[2]_i_12__0 
       (.I0(h_reg[8]),
        .I1(h_reg[5]),
        .I2(h_reg[4]),
        .I3(h_reg[11]),
        .I4(h_reg[9]),
        .I5(h_reg[7]),
        .O(\start_bit[2]_i_12__0_n_0 ));
  LUT5 #(
    .INIT(32'h55555455)) 
    \start_bit[2]_i_13 
       (.I0(h_reg[6]),
        .I1(h_reg[10]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[9]),
        .O(\start_bit[2]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h4404E444)) 
    \start_bit[2]_i_14 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(h_reg[11]),
        .I3(h_reg[10]),
        .I4(h_reg[9]),
        .O(\start_bit[2]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \start_bit[2]_i_15 
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[12]),
        .O(\start_bit[2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hCCF000F0CCF050F0)) 
    \start_bit[2]_i_1__0 
       (.I0(\start_bit[2]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\start_bit[2]_i_3__0_n_0 ),
        .I3(en_hs_lpn_sync_r),
        .I4(E),
        .I5(align_done_i_2_n_0),
        .O(\start_bit[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \start_bit[2]_i_2 
       (.I0(\start_bit[2]_i_4__0_n_0 ),
        .I1(\start_bit[2]_i_5__0_n_0 ),
        .O(\start_bit[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h000E)) 
    \start_bit[2]_i_3__0 
       (.I0(align_done_i_3__0_n_0),
        .I1(\start_bit[2]_i_6__0_n_0 ),
        .I2(\start_bit[2]_i_7__0_n_0 ),
        .I3(\start_bit[2]_i_2_n_0 ),
        .O(\start_bit[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBBBBAB)) 
    \start_bit[2]_i_4__0 
       (.I0(align_done_i_10__0_n_0),
        .I1(rxsynchs_i_10__0_n_0),
        .I2(\start_bit[2]_i_8__0_n_0 ),
        .I3(\start_bit[2]_i_9__0_n_0 ),
        .I4(\start_bit[2]_i_10__0_n_0 ),
        .I5(\start_bit[2]_i_11__0_n_0 ),
        .O(\start_bit[2]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEFAAAA)) 
    \start_bit[2]_i_5__0 
       (.I0(rxsynchs_i_10__0_n_0),
        .I1(\start_bit[2]_i_12__0_n_0 ),
        .I2(\start_bit[2]_i_13_n_0 ),
        .I3(\start_bit[2]_i_14_n_0 ),
        .I4(rxsynchs_i_9__0_n_0),
        .O(\start_bit[2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h51005151FFFFFFFF)) 
    \start_bit[2]_i_6__0 
       (.I0(align_done_i_13__0_n_0),
        .I1(h_reg[8]),
        .I2(\start_bit[2]_i_15_n_0 ),
        .I3(rxsynchs_i_12__0_n_0),
        .I4(rxsynchs_i_11__0_n_0),
        .I5(rxsynchs_i_9__0_n_0),
        .O(\start_bit[2]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \start_bit[2]_i_7__0 
       (.I0(align_done_i_4__0_n_0),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .O(\start_bit[2]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'hBBFBB3B3)) 
    \start_bit[2]_i_8__0 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(h_reg[10]),
        .O(\start_bit[2]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hBAAAAAAA)) 
    \start_bit[2]_i_9__0 
       (.I0(h_reg[5]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[10]),
        .I4(h_reg[9]),
        .O(\start_bit[2]_i_9__0_n_0 ));
  FDRE \start_bit_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[0]_i_1__0_n_0 ),
        .Q(\start_bit_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \start_bit_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[1]_i_1__0_n_0 ),
        .Q(\start_bit_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \start_bit_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[2]_i_1__0_n_0 ),
        .Q(\start_bit_reg_n_0_[2] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sot_det_align" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sot_det_align_8
   (E,
    dl0_rxvalidhs,
    dl0_rxsynchs,
    dl0_errsoths,
    dl0_errsotsynchs,
    SR,
    pkt_cnt_r0,
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ,
    dl0_rxdatahs,
    dl_en_hs_lpn_i,
    rx_div4_clk,
    s_level_out_d3_reg,
    \two_lane_hs_rx_timeout.hs_wait_count_reg[14] ,
    prmry_in,
    rx_dl0_hs_dp);
  output [0:0]E;
  output dl0_rxvalidhs;
  output dl0_rxsynchs;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output [0:0]SR;
  output pkt_cnt_r0;
  output \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  output [7:0]dl0_rxdatahs;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;
  input s_level_out_d3_reg;
  input \two_lane_hs_rx_timeout.hs_wait_count_reg[14] ;
  input prmry_in;
  input [7:0]rx_dl0_hs_dp;

  wire [0:0]E;
  wire [0:0]SR;
  wire align_done_i_10_n_0;
  wire align_done_i_11_n_0;
  wire align_done_i_12_n_0;
  wire align_done_i_13_n_0;
  wire align_done_i_14_n_0;
  wire align_done_i_15_n_0;
  wire align_done_i_16_n_0;
  wire align_done_i_17_n_0;
  wire align_done_i_18_n_0;
  wire align_done_i_19_n_0;
  wire align_done_i_1_n_0;
  wire align_done_i_20_n_0;
  wire align_done_i_21_n_0;
  wire align_done_i_22__0_n_0;
  wire align_done_i_23_n_0;
  wire align_done_i_24_n_0;
  wire align_done_i_25_n_0;
  wire align_done_i_2__0_n_0;
  wire align_done_i_3_n_0;
  wire align_done_i_4_n_0;
  wire align_done_i_5_n_0;
  wire align_done_i_6_n_0;
  wire align_done_i_7_n_0;
  wire align_done_i_8_n_0;
  wire align_done_i_9_n_0;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxvalidhs;
  wire dl_en_hs_lpn_i;
  wire en_hs_lpn_sync;
  wire en_hs_lpn_sync_r;
  wire errsoths_i_10_n_0;
  wire errsoths_i_11_n_0;
  wire errsoths_i_12_n_0;
  wire errsoths_i_13_n_0;
  wire errsoths_i_14_n_0;
  wire errsoths_i_15_n_0;
  wire errsoths_i_16_n_0;
  wire errsoths_i_1_n_0;
  wire errsoths_i_2_n_0;
  wire errsoths_i_3_n_0;
  wire errsoths_i_4__0_n_0;
  wire errsoths_i_5_n_0;
  wire errsoths_i_6_n_0;
  wire errsoths_i_7_n_0;
  wire errsoths_i_8_n_0;
  wire errsoths_i_9_n_0;
  wire errsotsynchs_i_1_n_0;
  wire errsotsynchs_i_2_n_0;
  wire errsotsynchs_i_3_n_0;
  wire errsotsynchs_i_4_n_0;
  wire errsotsynchs_i_5_n_0;
  (* DONT_TOUCH *) wire [15:0]h_reg;
  wire [7:0]hs_data;
  wire \hs_data[0]_i_2_n_0 ;
  wire \hs_data[1]_i_2_n_0 ;
  wire \hs_data[2]_i_2_n_0 ;
  wire \hs_data[3]_i_2_n_0 ;
  wire \hs_data[4]_i_2_n_0 ;
  wire \hs_data[4]_i_3_n_0 ;
  wire \hs_data[5]_i_2_n_0 ;
  wire \hs_data[5]_i_3_n_0 ;
  wire \hs_data[6]_i_2_n_0 ;
  wire \hs_data[6]_i_3_n_0 ;
  wire \hs_data[7]_i_1_n_0 ;
  wire \hs_data[7]_i_3_n_0 ;
  wire \hs_data[7]_i_4_n_0 ;
  wire hs_dvalid_i_1_n_0;
  wire pkt_cnt_r0;
  wire prmry_in;
  wire rx_div4_clk;
  wire [7:0]rx_dl0_hs_dp;
  wire [7:0]rx_hs_dp_r;
  wire rxsynchs_i_10_n_0;
  wire rxsynchs_i_11_n_0;
  wire rxsynchs_i_12_n_0;
  wire rxsynchs_i_13_n_0;
  wire rxsynchs_i_14_n_0;
  wire rxsynchs_i_1_n_0;
  wire rxsynchs_i_2_n_0;
  wire rxsynchs_i_3_n_0;
  wire rxsynchs_i_4_n_0;
  wire rxsynchs_i_5_n_0;
  wire rxsynchs_i_6_n_0;
  wire rxsynchs_i_7_n_0;
  wire rxsynchs_i_8_n_0;
  wire rxsynchs_i_9_n_0;
  wire s_level_out_d3_reg;
  wire \start_bit[0]_i_10_n_0 ;
  wire \start_bit[0]_i_11_n_0 ;
  wire \start_bit[0]_i_1_n_0 ;
  wire \start_bit[0]_i_2_n_0 ;
  wire \start_bit[0]_i_3_n_0 ;
  wire \start_bit[0]_i_4_n_0 ;
  wire \start_bit[0]_i_5_n_0 ;
  wire \start_bit[0]_i_6__0_n_0 ;
  wire \start_bit[0]_i_7_n_0 ;
  wire \start_bit[0]_i_8_n_0 ;
  wire \start_bit[0]_i_9_n_0 ;
  wire \start_bit[1]_i_1_n_0 ;
  wire \start_bit[1]_i_2_n_0 ;
  wire \start_bit[1]_i_3__0_n_0 ;
  wire \start_bit[1]_i_4__0_n_0 ;
  wire \start_bit[2]_i_10_n_0 ;
  wire \start_bit[2]_i_11_n_0 ;
  wire \start_bit[2]_i_12_n_0 ;
  wire \start_bit[2]_i_1_n_0 ;
  wire \start_bit[2]_i_2__0_n_0 ;
  wire \start_bit[2]_i_3_n_0 ;
  wire \start_bit[2]_i_4_n_0 ;
  wire \start_bit[2]_i_5_n_0 ;
  wire \start_bit[2]_i_6_n_0 ;
  wire \start_bit[2]_i_7_n_0 ;
  wire \start_bit[2]_i_8_n_0 ;
  wire \start_bit[2]_i_9_n_0 ;
  wire \start_bit_reg_n_0_[0] ;
  wire \start_bit_reg_n_0_[1] ;
  wire \start_bit_reg_n_0_[2] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[14] ;
  wire \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;

  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hF0B0)) 
    align_done_i_1
       (.I0(align_done_i_2__0_n_0),
        .I1(align_done_i_3_n_0),
        .I2(en_hs_lpn_sync_r),
        .I3(E),
        .O(align_done_i_1_n_0));
  LUT6 #(
    .INIT(64'h080000008E080800)) 
    align_done_i_10
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .I2(h_reg[4]),
        .I3(h_reg[9]),
        .I4(h_reg[7]),
        .I5(h_reg[8]),
        .O(align_done_i_10_n_0));
  LUT6 #(
    .INIT(64'hFFABFFABFFABAAAB)) 
    align_done_i_11
       (.I0(h_reg[10]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[11]),
        .I4(h_reg[13]),
        .I5(h_reg[12]),
        .O(align_done_i_11_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF74107070)) 
    align_done_i_12
       (.I0(h_reg[12]),
        .I1(h_reg[11]),
        .I2(h_reg[10]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .I5(h_reg[9]),
        .O(align_done_i_12_n_0));
  LUT5 #(
    .INIT(32'h00800000)) 
    align_done_i_13
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .O(align_done_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAEAAAAA)) 
    align_done_i_14
       (.I0(align_done_i_22__0_n_0),
        .I1(h_reg[15]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .I5(h_reg[10]),
        .O(align_done_i_14_n_0));
  LUT6 #(
    .INIT(64'h20B2002000200000)) 
    align_done_i_15
       (.I0(h_reg[10]),
        .I1(h_reg[8]),
        .I2(h_reg[9]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[11]),
        .O(align_done_i_15_n_0));
  LUT6 #(
    .INIT(64'h7FFF00007FFF7FFF)) 
    align_done_i_16
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(align_done_i_23_n_0),
        .I3(h_reg[11]),
        .I4(align_done_i_24_n_0),
        .I5(align_done_i_25_n_0),
        .O(align_done_i_16_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    align_done_i_17
       (.I0(h_reg[8]),
        .I1(h_reg[9]),
        .I2(h_reg[6]),
        .I3(h_reg[7]),
        .I4(h_reg[10]),
        .I5(h_reg[5]),
        .O(align_done_i_17_n_0));
  LUT5 #(
    .INIT(32'hDCFFC0FF)) 
    align_done_i_18
       (.I0(h_reg[8]),
        .I1(h_reg[6]),
        .I2(h_reg[9]),
        .I3(h_reg[5]),
        .I4(h_reg[7]),
        .O(align_done_i_18_n_0));
  LUT6 #(
    .INIT(64'h888800008888FFF0)) 
    align_done_i_19
       (.I0(h_reg[9]),
        .I1(\start_bit[0]_i_9_n_0 ),
        .I2(h_reg[3]),
        .I3(h_reg[2]),
        .I4(h_reg[6]),
        .I5(h_reg[5]),
        .O(align_done_i_19_n_0));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    align_done_i_20
       (.I0(h_reg[4]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(align_done_i_20_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    align_done_i_21
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .O(align_done_i_21_n_0));
  LUT6 #(
    .INIT(64'h0054005400545554)) 
    align_done_i_22__0
       (.I0(h_reg[11]),
        .I1(h_reg[8]),
        .I2(h_reg[9]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[14]),
        .O(align_done_i_22__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    align_done_i_23
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .O(align_done_i_23_n_0));
  LUT6 #(
    .INIT(64'hBAAABABAFEBAFAFA)) 
    align_done_i_24
       (.I0(h_reg[8]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[11]),
        .O(align_done_i_24_n_0));
  LUT6 #(
    .INIT(64'hFFABFFABFFABAAAB)) 
    align_done_i_25
       (.I0(h_reg[9]),
        .I1(h_reg[6]),
        .I2(h_reg[7]),
        .I3(h_reg[10]),
        .I4(h_reg[12]),
        .I5(h_reg[11]),
        .O(align_done_i_25_n_0));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'hFFEFFFFF)) 
    align_done_i_2__0
       (.I0(align_done_i_4_n_0),
        .I1(align_done_i_5_n_0),
        .I2(align_done_i_6_n_0),
        .I3(align_done_i_7_n_0),
        .I4(align_done_i_8_n_0),
        .O(align_done_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    align_done_i_3
       (.I0(\start_bit[0]_i_3_n_0 ),
        .I1(\start_bit[0]_i_2_n_0 ),
        .I2(align_done_i_9_n_0),
        .I3(align_done_i_10_n_0),
        .O(align_done_i_3_n_0));
  LUT6 #(
    .INIT(64'h0080000080E80080)) 
    align_done_i_4
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .I5(h_reg[9]),
        .O(align_done_i_4_n_0));
  LUT4 #(
    .INIT(16'h00A2)) 
    align_done_i_5
       (.I0(align_done_i_6_n_0),
        .I1(align_done_i_11_n_0),
        .I2(align_done_i_12_n_0),
        .I3(align_done_i_13_n_0),
        .O(align_done_i_5_n_0));
  LUT6 #(
    .INIT(64'hBFFF2BBFFFFFBFFF)) 
    align_done_i_6
       (.I0(h_reg[14]),
        .I1(h_reg[15]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[10]),
        .I5(h_reg[11]),
        .O(align_done_i_6_n_0));
  LUT6 #(
    .INIT(64'hAAEEAEEE2AAEAEEE)) 
    align_done_i_7
       (.I0(align_done_i_14_n_0),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[12]),
        .I4(h_reg[15]),
        .I5(h_reg[14]),
        .O(align_done_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h45)) 
    align_done_i_8
       (.I0(align_done_i_15_n_0),
        .I1(align_done_i_4_n_0),
        .I2(align_done_i_16_n_0),
        .O(align_done_i_8_n_0));
  LUT6 #(
    .INIT(64'h5551555100005551)) 
    align_done_i_9
       (.I0(align_done_i_17_n_0),
        .I1(align_done_i_18_n_0),
        .I2(align_done_i_19_n_0),
        .I3(align_done_i_20_n_0),
        .I4(errsoths_i_14_n_0),
        .I5(align_done_i_21_n_0),
        .O(align_done_i_9_n_0));
  FDRE align_done_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(align_done_i_1_n_0),
        .Q(E),
        .R(1'b0));
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10 en_hs_lpn_sync_i
       (.dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .out(en_hs_lpn_sync),
        .rx_div4_clk(rx_div4_clk));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    en_hs_lpn_sync_r_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(en_hs_lpn_sync),
        .Q(en_hs_lpn_sync_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h08AAFFFF08AA0000)) 
    errsoths_i_1
       (.I0(errsoths_i_2_n_0),
        .I1(errsoths_i_3_n_0),
        .I2(errsoths_i_4__0_n_0),
        .I3(errsoths_i_5_n_0),
        .I4(rxsynchs_i_3_n_0),
        .I5(dl0_errsoths),
        .O(errsoths_i_1_n_0));
  LUT6 #(
    .INIT(64'h6110100010000000)) 
    errsoths_i_10
       (.I0(h_reg[8]),
        .I1(h_reg[12]),
        .I2(h_reg[13]),
        .I3(h_reg[11]),
        .I4(h_reg[10]),
        .I5(h_reg[9]),
        .O(errsoths_i_10_n_0));
  LUT6 #(
    .INIT(64'hD6FDFDFFFDFFFFFF)) 
    errsoths_i_11
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[14]),
        .I3(h_reg[15]),
        .I4(h_reg[12]),
        .I5(h_reg[13]),
        .O(errsoths_i_11_n_0));
  LUT6 #(
    .INIT(64'h4904040004000000)) 
    errsoths_i_12
       (.I0(h_reg[9]),
        .I1(h_reg[14]),
        .I2(h_reg[13]),
        .I3(h_reg[12]),
        .I4(h_reg[11]),
        .I5(h_reg[10]),
        .O(errsoths_i_12_n_0));
  LUT5 #(
    .INIT(32'h80C00080)) 
    errsoths_i_13
       (.I0(h_reg[9]),
        .I1(h_reg[6]),
        .I2(h_reg[5]),
        .I3(h_reg[8]),
        .I4(h_reg[7]),
        .O(errsoths_i_13_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    errsoths_i_14
       (.I0(h_reg[9]),
        .I1(h_reg[7]),
        .I2(h_reg[8]),
        .O(errsoths_i_14_n_0));
  LUT6 #(
    .INIT(64'h0080000080680080)) 
    errsoths_i_15
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(errsoths_i_15_n_0));
  LUT4 #(
    .INIT(16'hF7FF)) 
    errsoths_i_16
       (.I0(h_reg[7]),
        .I1(h_reg[8]),
        .I2(h_reg[9]),
        .I3(h_reg[10]),
        .O(errsoths_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h2)) 
    errsoths_i_2
       (.I0(en_hs_lpn_sync_r),
        .I1(E),
        .O(errsoths_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFF4FFFF)) 
    errsoths_i_3
       (.I0(errsoths_i_6_n_0),
        .I1(errsoths_i_7_n_0),
        .I2(errsoths_i_8_n_0),
        .I3(errsoths_i_9_n_0),
        .I4(rxsynchs_i_5_n_0),
        .O(errsoths_i_3_n_0));
  LUT6 #(
    .INIT(64'h00001101FFFFFFFF)) 
    errsoths_i_4__0
       (.I0(rxsynchs_i_5_n_0),
        .I1(errsoths_i_10_n_0),
        .I2(align_done_i_8_n_0),
        .I3(errsoths_i_11_n_0),
        .I4(errsoths_i_12_n_0),
        .I5(align_done_i_3_n_0),
        .O(errsoths_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h000000003FFFD11D)) 
    errsoths_i_5
       (.I0(errsoths_i_13_n_0),
        .I1(errsoths_i_14_n_0),
        .I2(h_reg[5]),
        .I3(h_reg[6]),
        .I4(h_reg[4]),
        .I5(errsoths_i_15_n_0),
        .O(errsoths_i_5_n_0));
  LUT5 #(
    .INIT(32'hBAAABABA)) 
    errsoths_i_6
       (.I0(align_done_i_17_n_0),
        .I1(rxsynchs_i_9_n_0),
        .I2(rxsynchs_i_7_n_0),
        .I3(errsoths_i_16_n_0),
        .I4(h_reg[6]),
        .O(errsoths_i_6_n_0));
  LUT6 #(
    .INIT(64'h4000944000004000)) 
    errsoths_i_7
       (.I0(h_reg[7]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[12]),
        .I4(h_reg[11]),
        .I5(h_reg[10]),
        .O(errsoths_i_7_n_0));
  LUT6 #(
    .INIT(64'h2000922000002000)) 
    errsoths_i_8
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[9]),
        .I5(h_reg[10]),
        .O(errsoths_i_8_n_0));
  LUT6 #(
    .INIT(64'h0000800080006880)) 
    errsoths_i_9
       (.I0(h_reg[7]),
        .I1(h_reg[11]),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(h_reg[10]),
        .I5(h_reg[6]),
        .O(errsoths_i_9_n_0));
  FDRE errsoths_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsoths_i_1_n_0),
        .Q(dl0_errsoths),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    errsotsynchs_i_1
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(errsotsynchs_i_2_n_0),
        .I3(rxsynchs_i_3_n_0),
        .I4(dl0_errsotsynchs),
        .O(errsotsynchs_i_1_n_0));
  LUT6 #(
    .INIT(64'h8A8A8AAA8A8A8A8A)) 
    errsotsynchs_i_2
       (.I0(errsotsynchs_i_3_n_0),
        .I1(rxsynchs_i_4_n_0),
        .I2(align_done_i_3_n_0),
        .I3(rxsynchs_i_5_n_0),
        .I4(errsotsynchs_i_4_n_0),
        .I5(errsotsynchs_i_5_n_0),
        .O(errsotsynchs_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hC4)) 
    errsotsynchs_i_3
       (.I0(align_done_i_9_n_0),
        .I1(\start_bit[0]_i_2_n_0 ),
        .I2(\start_bit[0]_i_3_n_0 ),
        .O(errsotsynchs_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    errsotsynchs_i_4
       (.I0(align_done_i_16_n_0),
        .I1(align_done_i_4_n_0),
        .O(errsotsynchs_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h3F37)) 
    errsotsynchs_i_5
       (.I0(align_done_i_7_n_0),
        .I1(align_done_i_8_n_0),
        .I2(align_done_i_5_n_0),
        .I3(align_done_i_4_n_0),
        .O(errsotsynchs_i_5_n_0));
  FDRE errsotsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsotsynchs_i_1_n_0),
        .Q(dl0_errsotsynchs),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[8]),
        .Q(h_reg[0]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[2]),
        .Q(h_reg[10]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[3]),
        .Q(h_reg[11]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[4]),
        .Q(h_reg[12]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[5]),
        .Q(h_reg[13]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[6]),
        .Q(h_reg[14]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[7]),
        .Q(h_reg[15]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[9]),
        .Q(h_reg[1]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[10]),
        .Q(h_reg[2]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[11]),
        .Q(h_reg[3]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[12]),
        .Q(h_reg[4]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[13]),
        .Q(h_reg[5]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[14]),
        .Q(h_reg[6]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[15]),
        .Q(h_reg[7]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[0]),
        .Q(h_reg[8]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[1]),
        .Q(h_reg[9]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[0]_i_1 
       (.I0(\hs_data[4]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[0]_i_2_n_0 ),
        .O(hs_data[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[0]_i_2 
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[2]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[1]),
        .O(\hs_data[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[1]_i_1 
       (.I0(\hs_data[5]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[1]_i_2_n_0 ),
        .O(hs_data[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[1]_i_2 
       (.I0(h_reg[5]),
        .I1(h_reg[4]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[3]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[2]),
        .O(\hs_data[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[2]_i_1 
       (.I0(\hs_data[6]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[2]_i_2_n_0 ),
        .O(hs_data[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[2]_i_2 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[4]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[3]),
        .O(\hs_data[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[3]_i_1 
       (.I0(\hs_data[7]_i_4_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[3]_i_2_n_0 ),
        .O(hs_data[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[3]_i_2 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[5]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[4]),
        .O(\hs_data[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[4]_i_1 
       (.I0(\hs_data[4]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[4]_i_3_n_0 ),
        .O(hs_data[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_2 
       (.I0(h_reg[12]),
        .I1(h_reg[11]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[10]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[9]),
        .O(\hs_data[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_3 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[6]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[5]),
        .O(\hs_data[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[5]_i_1 
       (.I0(\hs_data[5]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[5]_i_3_n_0 ),
        .O(hs_data[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_2 
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[11]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[10]),
        .O(\hs_data[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_3 
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[7]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[6]),
        .O(\hs_data[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[6]_i_1 
       (.I0(\hs_data[6]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[6]_i_3_n_0 ),
        .O(hs_data[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_2 
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[12]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[11]),
        .O(\hs_data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_3 
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[8]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[7]),
        .O(\hs_data[6]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_data[7]_i_1 
       (.I0(en_hs_lpn_sync_r),
        .O(\hs_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[7]_i_2 
       (.I0(\hs_data[7]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[7]_i_4_n_0 ),
        .O(hs_data[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_3 
       (.I0(h_reg[15]),
        .I1(h_reg[14]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[13]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[12]),
        .O(\hs_data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_4 
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[9]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[8]),
        .O(\hs_data[7]_i_4_n_0 ));
  FDRE \hs_data_reg[0] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[0]),
        .Q(dl0_rxdatahs[0]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[1] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[1]),
        .Q(dl0_rxdatahs[1]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[2] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[2]),
        .Q(dl0_rxdatahs[2]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[3] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[3]),
        .Q(dl0_rxdatahs[3]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[4] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[4]),
        .Q(dl0_rxdatahs[4]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[5] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[5]),
        .Q(dl0_rxdatahs[5]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[6] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[6]),
        .Q(dl0_rxdatahs[6]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[7] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[7]),
        .Q(dl0_rxdatahs[7]),
        .R(\hs_data[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    hs_dvalid_i_1
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(dl0_rxvalidhs),
        .O(hs_dvalid_i_1_n_0));
  FDRE hs_dvalid_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(hs_dvalid_i_1_n_0),
        .Q(dl0_rxvalidhs),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \pkt_cnt_r[0]_i_1 
       (.I0(E),
        .I1(dl0_errsotsynchs),
        .I2(dl0_rxsynchs),
        .I3(dl0_errsoths),
        .O(pkt_cnt_r0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[0]),
        .Q(rx_hs_dp_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[1]),
        .Q(rx_hs_dp_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[2]),
        .Q(rx_hs_dp_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[3]),
        .Q(rx_hs_dp_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[4]),
        .Q(rx_hs_dp_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[5]),
        .Q(rx_hs_dp_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[6]),
        .Q(rx_hs_dp_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[7]),
        .Q(rx_hs_dp_r[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    rxsynchs_i_1
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(rxsynchs_i_2_n_0),
        .I3(rxsynchs_i_3_n_0),
        .I4(dl0_rxsynchs),
        .O(rxsynchs_i_1_n_0));
  LUT5 #(
    .INIT(32'h08000000)) 
    rxsynchs_i_10
       (.I0(h_reg[6]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[8]),
        .I4(h_reg[7]),
        .O(rxsynchs_i_10_n_0));
  LUT5 #(
    .INIT(32'h404444CC)) 
    rxsynchs_i_11
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(h_reg[9]),
        .I3(h_reg[8]),
        .I4(h_reg[10]),
        .O(rxsynchs_i_11_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    rxsynchs_i_12
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .O(rxsynchs_i_12_n_0));
  LUT6 #(
    .INIT(64'h00000E0E00FF0E0E)) 
    rxsynchs_i_13
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(h_reg[6]),
        .I3(h_reg[8]),
        .I4(h_reg[7]),
        .I5(rxsynchs_i_14_n_0),
        .O(rxsynchs_i_13_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    rxsynchs_i_14
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .O(rxsynchs_i_14_n_0));
  LUT6 #(
    .INIT(64'h0000000000004F7F)) 
    rxsynchs_i_2
       (.I0(rxsynchs_i_4_n_0),
        .I1(rxsynchs_i_5_n_0),
        .I2(align_done_i_3_n_0),
        .I3(rxsynchs_i_6_n_0),
        .I4(align_done_i_10_n_0),
        .I5(\start_bit[0]_i_3_n_0 ),
        .O(rxsynchs_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hFDFF)) 
    rxsynchs_i_3
       (.I0(align_done_i_3_n_0),
        .I1(align_done_i_2__0_n_0),
        .I2(E),
        .I3(en_hs_lpn_sync_r),
        .O(rxsynchs_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    rxsynchs_i_4
       (.I0(rxsynchs_i_7_n_0),
        .I1(rxsynchs_i_8_n_0),
        .I2(rxsynchs_i_9_n_0),
        .I3(align_done_i_17_n_0),
        .O(rxsynchs_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEFFFEFE)) 
    rxsynchs_i_5
       (.I0(\start_bit[2]_i_8_n_0 ),
        .I1(\start_bit[0]_i_7_n_0 ),
        .I2(align_done_i_17_n_0),
        .I3(rxsynchs_i_9_n_0),
        .I4(rxsynchs_i_7_n_0),
        .I5(rxsynchs_i_10_n_0),
        .O(rxsynchs_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    rxsynchs_i_6
       (.I0(align_done_i_6_n_0),
        .I1(align_done_i_16_n_0),
        .I2(align_done_i_4_n_0),
        .I3(align_done_i_15_n_0),
        .O(rxsynchs_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFEEEEEE)) 
    rxsynchs_i_7
       (.I0(rxsynchs_i_11_n_0),
        .I1(h_reg[5]),
        .I2(h_reg[6]),
        .I3(h_reg[7]),
        .I4(rxsynchs_i_12_n_0),
        .I5(rxsynchs_i_13_n_0),
        .O(rxsynchs_i_7_n_0));
  LUT6 #(
    .INIT(64'hDF4DFFDFFFDFFFFF)) 
    rxsynchs_i_8
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[12]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(rxsynchs_i_8_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    rxsynchs_i_9
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[6]),
        .O(rxsynchs_i_9_n_0));
  FDRE rxsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rxsynchs_i_1_n_0),
        .Q(dl0_rxsynchs),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFF00000002020000)) 
    \start_bit[0]_i_1 
       (.I0(\start_bit[0]_i_2_n_0 ),
        .I1(\start_bit[0]_i_3_n_0 ),
        .I2(\start_bit[0]_i_4_n_0 ),
        .I3(\start_bit_reg_n_0_[0] ),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(\start_bit[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4054454540405545)) 
    \start_bit[0]_i_10 
       (.I0(\start_bit[0]_i_11_n_0 ),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[10]),
        .I4(h_reg[7]),
        .I5(h_reg[11]),
        .O(\start_bit[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hABABABAA)) 
    \start_bit[0]_i_11 
       (.I0(h_reg[6]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[5]),
        .I4(h_reg[4]),
        .O(\start_bit[0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \start_bit[0]_i_2 
       (.I0(align_done_i_10_n_0),
        .I1(\start_bit[0]_i_5_n_0 ),
        .O(\start_bit[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0080000080E80080)) 
    \start_bit[0]_i_3 
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(\start_bit[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00FF000000F2)) 
    \start_bit[0]_i_4 
       (.I0(align_done_i_8_n_0),
        .I1(\start_bit[0]_i_6__0_n_0 ),
        .I2(\start_bit[2]_i_8_n_0 ),
        .I3(\start_bit[2]_i_9_n_0 ),
        .I4(\start_bit[0]_i_7_n_0 ),
        .I5(errsoths_i_6_n_0),
        .O(\start_bit[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF555101110110011)) 
    \start_bit[0]_i_5 
       (.I0(h_reg[3]),
        .I1(\start_bit[0]_i_8_n_0 ),
        .I2(\start_bit[0]_i_9_n_0 ),
        .I3(h_reg[4]),
        .I4(h_reg[5]),
        .I5(h_reg[6]),
        .O(\start_bit[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h10100010)) 
    \start_bit[0]_i_6__0 
       (.I0(align_done_i_4_n_0),
        .I1(align_done_i_5_n_0),
        .I2(align_done_i_8_n_0),
        .I3(align_done_i_6_n_0),
        .I4(align_done_i_7_n_0),
        .O(\start_bit[0]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \start_bit[0]_i_7 
       (.I0(rxsynchs_i_9_n_0),
        .I1(\start_bit[0]_i_10_n_0 ),
        .I2(rxsynchs_i_8_n_0),
        .O(\start_bit[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E000E0F0E0F0E)) 
    \start_bit[0]_i_8 
       (.I0(h_reg[2]),
        .I1(h_reg[1]),
        .I2(h_reg[4]),
        .I3(h_reg[5]),
        .I4(h_reg[8]),
        .I5(h_reg[7]),
        .O(\start_bit[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \start_bit[0]_i_9 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .O(\start_bit[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF100010)) 
    \start_bit[1]_i_1 
       (.I0(\start_bit[1]_i_2_n_0 ),
        .I1(\start_bit[1]_i_3__0_n_0 ),
        .I2(\start_bit[1]_i_4__0_n_0 ),
        .I3(\start_bit[2]_i_3_n_0 ),
        .I4(\start_bit_reg_n_0_[1] ),
        .I5(\start_bit[2]_i_6_n_0 ),
        .O(\start_bit[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \start_bit[1]_i_2 
       (.I0(\start_bit[2]_i_8_n_0 ),
        .I1(\start_bit[2]_i_7_n_0 ),
        .O(\start_bit[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \start_bit[1]_i_3__0 
       (.I0(\start_bit[2]_i_9_n_0 ),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .O(\start_bit[1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFF0000)) 
    \start_bit[1]_i_4__0 
       (.I0(align_done_i_4_n_0),
        .I1(align_done_i_5_n_0),
        .I2(align_done_i_7_n_0),
        .I3(align_done_i_6_n_0),
        .I4(align_done_i_8_n_0),
        .I5(\start_bit[2]_i_7_n_0 ),
        .O(\start_bit[1]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000040404540)) 
    \start_bit[2]_i_1 
       (.I0(\start_bit[2]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\start_bit[2]_i_3_n_0 ),
        .I3(\start_bit[2]_i_4_n_0 ),
        .I4(\start_bit[2]_i_5_n_0 ),
        .I5(\start_bit[2]_i_6_n_0 ),
        .O(\start_bit[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA2AAAAAAAAAAAAAA)) 
    \start_bit[2]_i_10 
       (.I0(h_reg[7]),
        .I1(h_reg[12]),
        .I2(h_reg[11]),
        .I3(h_reg[10]),
        .I4(h_reg[9]),
        .I5(h_reg[8]),
        .O(\start_bit[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h22BB330F33FF110F)) 
    \start_bit[2]_i_11 
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(\start_bit[2]_i_12_n_0 ),
        .I3(h_reg[9]),
        .I4(h_reg[8]),
        .I5(h_reg[12]),
        .O(\start_bit[2]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \start_bit[2]_i_12 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .O(\start_bit[2]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \start_bit[2]_i_2__0 
       (.I0(\start_bit[2]_i_7_n_0 ),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .O(\start_bit[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \start_bit[2]_i_3 
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .O(\start_bit[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \start_bit[2]_i_4 
       (.I0(\start_bit[2]_i_8_n_0 ),
        .I1(align_done_i_2__0_n_0),
        .O(\start_bit[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \start_bit[2]_i_5 
       (.I0(\start_bit[2]_i_7_n_0 ),
        .I1(en_hs_lpn_sync_r),
        .I2(E),
        .I3(\start_bit[2]_i_9_n_0 ),
        .O(\start_bit[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \start_bit[2]_i_6 
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(align_done_i_3_n_0),
        .O(\start_bit[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF00D0)) 
    \start_bit[2]_i_7 
       (.I0(h_reg[6]),
        .I1(errsoths_i_16_n_0),
        .I2(rxsynchs_i_7_n_0),
        .I3(rxsynchs_i_9_n_0),
        .I4(align_done_i_17_n_0),
        .I5(\start_bit[0]_i_7_n_0 ),
        .O(\start_bit[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h54FF)) 
    \start_bit[2]_i_8 
       (.I0(align_done_i_15_n_0),
        .I1(\start_bit[2]_i_10_n_0 ),
        .I2(\start_bit[2]_i_11_n_0 ),
        .I3(rxsynchs_i_8_n_0),
        .O(\start_bit[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \start_bit[2]_i_9 
       (.I0(align_done_i_10_n_0),
        .I1(align_done_i_9_n_0),
        .O(\start_bit[2]_i_9_n_0 ));
  FDRE \start_bit_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[0]_i_1_n_0 ),
        .Q(\start_bit_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \start_bit_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[1]_i_1_n_0 ),
        .Q(\start_bit_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \start_bit_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[2]_i_1_n_0 ),
        .Q(\start_bit_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_1 
       (.I0(E),
        .I1(dl0_rxvalidhs),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'hB0008000)) 
    \two_lane_hs_rx_timeout.maxfrm_wait_done_i_1 
       (.I0(s_level_out_d3_reg),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg[14] ),
        .I2(dl0_rxvalidhs),
        .I3(E),
        .I4(prmry_in),
        .O(\two_lane_hs_rx_timeout.maxfrm_wait_done_reg ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_support_rst_logic" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_support_rst_logic
   (out,
    \s_level_out_bus_d6_reg[0] ,
    cl_status_reg_bit_0,
    stopstate0,
    system_rst_in,
    core_clk,
    \s_level_out_bus_d3_reg[1] ,
    p_5_in,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    core_rst);
  output out;
  output \s_level_out_bus_d6_reg[0] ;
  output cl_status_reg_bit_0;
  output stopstate0;
  input system_rst_in;
  input core_clk;
  input [0:0]\s_level_out_bus_d3_reg[1] ;
  input p_5_in;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input core_rst;

  wire \FSM_sequential_rst_blk_state[0]_i_1_n_0 ;
  wire \FSM_sequential_rst_blk_state[0]_i_2_n_0 ;
  wire \FSM_sequential_rst_blk_state[1]_i_1_n_0 ;
  wire \FSM_sequential_rst_blk_state[1]_i_2_n_0 ;
  wire \FSM_sequential_rst_blk_state[2]_i_1_n_0 ;
  wire \FSM_sequential_rst_blk_state[2]_i_2_n_0 ;
  wire \FSM_sequential_rst_blk_state[2]_i_3_n_0 ;
  wire cl_status_reg_bit_0;
  wire core_clk;
  wire core_rst;
  wire core_rst_sync;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  (* DONT_TOUCH *) wire out;
  wire p_5_in;
  wire phy_rdy_sync;
  (* RTL_KEEP = "yes" *) wire [2:0]rst_blk_state;
  wire [0:0]\s_level_out_bus_d3_reg[1] ;
  (* DONT_TOUCH *) wire \s_level_out_bus_d6_reg[0] ;
  wire stopstate0;
  wire system_rst_byteclk_i_1_n_0;
  wire system_rst_byteclk_i_2_n_0;
  wire system_rst_i_1_n_0;
  wire system_rst_i_2_n_0;
  wire system_rst_in;
  wire NLW_core_rst_sync_i_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED;
  wire NLW_phy_rdy_sync_i_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_phy_rdy_sync_i_scndry_vect_out_UNCONNECTED;

  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_rst_blk_state[0]_i_1 
       (.I0(\FSM_sequential_rst_blk_state[0]_i_2_n_0 ),
        .I1(\FSM_sequential_rst_blk_state[2]_i_3_n_0 ),
        .I2(rst_blk_state[0]),
        .O(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCC888C88CC8C8C8C)) 
    \FSM_sequential_rst_blk_state[0]_i_2 
       (.I0(rst_blk_state[2]),
        .I1(\s_level_out_bus_d3_reg[1] ),
        .I2(rst_blk_state[0]),
        .I3(p_5_in),
        .I4(rst_blk_state[1]),
        .I5(phy_rdy_sync),
        .O(\FSM_sequential_rst_blk_state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_rst_blk_state[1]_i_1 
       (.I0(\FSM_sequential_rst_blk_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_rst_blk_state[2]_i_3_n_0 ),
        .I2(rst_blk_state[1]),
        .O(\FSM_sequential_rst_blk_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AF0F8800000000)) 
    \FSM_sequential_rst_blk_state[1]_i_2 
       (.I0(p_5_in),
        .I1(phy_rdy_sync),
        .I2(rst_blk_state[1]),
        .I3(rst_blk_state[2]),
        .I4(rst_blk_state[0]),
        .I5(\s_level_out_bus_d3_reg[1] ),
        .O(\FSM_sequential_rst_blk_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_rst_blk_state[2]_i_1 
       (.I0(\FSM_sequential_rst_blk_state[2]_i_2_n_0 ),
        .I1(\FSM_sequential_rst_blk_state[2]_i_3_n_0 ),
        .I2(rst_blk_state[2]),
        .O(\FSM_sequential_rst_blk_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044500000)) 
    \FSM_sequential_rst_blk_state[2]_i_2 
       (.I0(p_5_in),
        .I1(rst_blk_state[1]),
        .I2(phy_rdy_sync),
        .I3(rst_blk_state[0]),
        .I4(\s_level_out_bus_d3_reg[1] ),
        .I5(rst_blk_state[2]),
        .O(\FSM_sequential_rst_blk_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000AF3CFFFFFFFFF)) 
    \FSM_sequential_rst_blk_state[2]_i_3 
       (.I0(p_5_in),
        .I1(phy_rdy_sync),
        .I2(rst_blk_state[1]),
        .I3(rst_blk_state[0]),
        .I4(rst_blk_state[2]),
        .I5(\s_level_out_bus_d3_reg[1] ),
        .O(\FSM_sequential_rst_blk_state[2]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,ASSERT_ALL_RESETS:001,RELEASE_PHY_RESET:010,CHECK_SRST:100,RESET_FSM_DONE:011" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ),
        .Q(rst_blk_state[0]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,ASSERT_ALL_RESETS:001,RELEASE_PHY_RESET:010,CHECK_SRST:100,RESET_FSM_DONE:011" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[1]_i_1_n_0 ),
        .Q(rst_blk_state[1]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,ASSERT_ALL_RESETS:001,RELEASE_PHY_RESET:010,CHECK_SRST:100,RESET_FSM_DONE:011" *) 
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_rst_blk_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[2]_i_1_n_0 ),
        .Q(rst_blk_state[2]));
  LUT4 #(
    .INIT(16'hFF8F)) 
    cl_stopstate_i_1
       (.I0(\s_level_out_bus_d6_reg[0] ),
        .I1(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I2(\s_level_out_bus_d3_reg[1] ),
        .I3(core_rst),
        .O(cl_status_reg_bit_0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5 core_rst_sync_i
       (.prmry_ack(NLW_core_rst_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(system_rst_in),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_sync),
        .scndry_rst_n(1'b0),
        .scndry_vect_out(NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_hs_high_rates.stopstate_i_1 
       (.I0(\s_level_out_bus_d6_reg[0] ),
        .I1(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(stopstate0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "6'b000010" *) 
  bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6 phy_rdy_sync_i
       (.prmry_ack(NLW_phy_rdy_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(1'b0),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(phy_rdy_sync),
        .scndry_rst_n(1'b0),
        .scndry_vect_out(NLW_phy_rdy_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'hB)) 
    system_rst_byteclk_i_1
       (.I0(system_rst_byteclk_i_2_n_0),
        .I1(\s_level_out_bus_d3_reg[1] ),
        .O(system_rst_byteclk_i_1_n_0));
  LUT6 #(
    .INIT(64'h003D000DFFFF00CF)) 
    system_rst_byteclk_i_2
       (.I0(phy_rdy_sync),
        .I1(rst_blk_state[0]),
        .I2(rst_blk_state[1]),
        .I3(rst_blk_state[2]),
        .I4(out),
        .I5(p_5_in),
        .O(system_rst_byteclk_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_byteclk_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(out));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'hB)) 
    system_rst_i_1
       (.I0(system_rst_i_2_n_0),
        .I1(\s_level_out_bus_d3_reg[1] ),
        .O(system_rst_i_1_n_0));
  LUT6 #(
    .INIT(64'h003D000DFFFF00CF)) 
    system_rst_i_2
       (.I0(phy_rdy_sync),
        .I1(rst_blk_state[0]),
        .I2(rst_blk_state[1]),
        .I3(rst_blk_state[2]),
        .I4(\s_level_out_bus_d6_reg[0] ),
        .I5(p_5_in),
        .O(system_rst_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(\s_level_out_bus_d6_reg[0] ));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire p_0_in;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;
  wire scndry_rst_n;

  assign prmry_ack = \<const0> ;
  assign scndry_out = \<const0> ;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    s_level_out_d1_cdc_to_i_1
       (.I0(scndry_rst_n),
        .O(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(p_0_in));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__1
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__2
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__3
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire p_0_in;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;
  wire scndry_rst_n;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    s_level_out_d1_cdc_to_i_1
       (.I0(scndry_rst_n),
        .O(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(p_0_in));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__4
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire p_0_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;
  wire scndry_rst_n;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    s_level_out_d1_cdc_to_i_1
       (.I0(scndry_rst_n),
        .O(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(p_0_in));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__5
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "6'b000010" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__6
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0
   (out,
    dl_en_hs_lpn_i,
    rx_div4_clk);
  output out;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;

  wire p_level_in_int;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = dl_en_hs_lpn_i;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_10
   (out,
    dl_en_hs_lpn_i,
    rx_div4_clk);
  output out;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;

  wire p_level_in_int;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = dl_en_hs_lpn_i;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_11
   (out,
    dl_status_reg_bit_0_reg,
    dl_stopstate_reg,
    D,
    rx_dl0_lp_dn,
    core_clk,
    lp_11_r_dly,
    s_level_out_d2_reg_0,
    \FSM_sequential_dl_rx_state_reg[3] ,
    system_rst_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    dl_status_reg,
    lp_11_r_reg,
    \FSM_sequential_dl_rx_state_reg[0] ,
    lp_10_r,
    lp_00_r,
    cl_rxclkactivehs_reg,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[2] );
  output out;
  output dl_status_reg_bit_0_reg;
  output dl_stopstate_reg;
  output [1:0]D;
  input rx_dl0_lp_dn;
  input core_clk;
  input lp_11_r_dly;
  input s_level_out_d2_reg_0;
  input [3:0]\FSM_sequential_dl_rx_state_reg[3] ;
  input system_rst_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input [0:0]dl_status_reg;
  input lp_11_r_reg;
  input \FSM_sequential_dl_rx_state_reg[0] ;
  input lp_10_r;
  input lp_00_r;
  input cl_rxclkactivehs_reg;
  input \FSM_sequential_dl_rx_state_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[2] ;

  wire [1:0]D;
  wire \FSM_sequential_dl_rx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire [3:0]\FSM_sequential_dl_rx_state_reg[3] ;
  wire cl_rxclkactivehs_reg;
  wire core_clk;
  wire dl_rx_state09_out;
  wire [0:0]dl_status_reg;
  wire dl_status_reg_bit_0;
  wire dl_status_reg_bit_0_i_4_n_0;
  wire dl_status_reg_bit_0_reg;
  wire dl_stopstate_reg;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire lp_00_r;
  wire lp_10_r;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl0_lp_dn;
  LUT5 #(
    .INIT(32'hFFE2E2E2)) 
    \FSM_sequential_dl_rx_state[1]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[2] ),
        .I3(system_rst_reg),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h000000000202AA80)) 
    \FSM_sequential_dl_rx_state[1]_i_2 
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I4(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .I5(\FSM_sequential_dl_rx_state_reg[3] [3]),
        .O(\FSM_sequential_dl_rx_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00E2E2E2)) 
    \FSM_sequential_dl_rx_state[2]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[2]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .I3(system_rst_reg),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h30303330C8C8C8C8)) 
    \FSM_sequential_dl_rx_state[2]_i_2 
       (.I0(cl_rxclkactivehs_reg),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [3]),
        .I2(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .I5(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .O(\FSM_sequential_dl_rx_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h004F4F4F00404040)) 
    dl_status_reg_bit_0_i_1
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I2(dl_status_reg_bit_0),
        .I3(system_rst_reg),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I5(dl_status_reg),
        .O(dl_status_reg_bit_0_reg));
  LUT6 #(
    .INIT(64'h0F008F8F0F008080)) 
    dl_status_reg_bit_0_i_2
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .I1(lp_11_r_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I3(\FSM_sequential_dl_rx_state_reg[0] ),
        .I4(\FSM_sequential_dl_rx_state_reg[3] [3]),
        .I5(dl_status_reg_bit_0_i_4_n_0),
        .O(dl_status_reg_bit_0));
  LUT6 #(
    .INIT(64'h000FEE0E00000000)) 
    dl_status_reg_bit_0_i_4
       (.I0(lp_10_r),
        .I1(lp_00_r),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .I4(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I5(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .O(dl_status_reg_bit_0_i_4_n_0));
  LUT6 #(
    .INIT(64'hEFAF4A0AEFAF4A0F)) 
    dl_stopstate_i_2
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I1(dl_rx_state09_out),
        .I2(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .I3(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I4(lp_11_r_reg),
        .I5(cl_rxclkactivehs_reg),
        .O(dl_stopstate_reg));
  LUT3 #(
    .INIT(8'h80)) 
    dl_stopstate_i_5
       (.I0(lp_11_r_dly),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .O(dl_rx_state09_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_12
   (out,
    E,
    D,
    dl_en_hs_lpn_reg,
    dl_status_reg_bit_4_reg,
    dl_stopstate_reg,
    \FSM_sequential_dl_rx_state_reg[3] ,
    rx_dl0_lp_dp,
    core_clk,
    \FSM_sequential_dl_rx_state_reg[3]_0 ,
    system_rst_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    s_level_out_d2_reg_0,
    Q,
    lp_11_r_reg,
    lp_01_r,
    lp_10_r_reg,
    \lp_st_cnt_reg[3] ,
    lp_10_r,
    lp_00_r,
    \lp_st_dup_reg[1] ,
    time_out_settle_reg,
    lp_11_r_reg_0,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    dl_en_hs_lpn_reg_0,
    cl_rxclkactivehs_reg,
    dl_status_reg,
    \FSM_sequential_dl_rx_state_reg[1] ,
    dl_stopstate,
    cl_rxclkactivehs_reg_0,
    \FSM_sequential_dl_rx_state_reg[2] ,
    lp_11_r_dly,
    \FSM_sequential_dl_rx_state_reg[0] );
  output out;
  output [0:0]E;
  output [4:0]D;
  output dl_en_hs_lpn_reg;
  output dl_status_reg_bit_4_reg;
  output dl_stopstate_reg;
  output [0:0]\FSM_sequential_dl_rx_state_reg[3] ;
  input rx_dl0_lp_dp;
  input core_clk;
  input [3:0]\FSM_sequential_dl_rx_state_reg[3]_0 ;
  input system_rst_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input s_level_out_d2_reg_0;
  input [4:0]Q;
  input lp_11_r_reg;
  input lp_01_r;
  input lp_10_r_reg;
  input \lp_st_cnt_reg[3] ;
  input lp_10_r;
  input lp_00_r;
  input [1:0]\lp_st_dup_reg[1] ;
  input time_out_settle_reg;
  input lp_11_r_reg_0;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input dl_en_hs_lpn_reg_0;
  input cl_rxclkactivehs_reg;
  input [0:0]dl_status_reg;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input dl_stopstate;
  input cl_rxclkactivehs_reg_0;
  input \FSM_sequential_dl_rx_state_reg[2] ;
  input lp_11_r_dly;
  input \FSM_sequential_dl_rx_state_reg[0] ;

  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_rx_state[3]_i_10_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_3_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_4_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_5_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire [0:0]\FSM_sequential_dl_rx_state_reg[3] ;
  wire [3:0]\FSM_sequential_dl_rx_state_reg[3]_0 ;
  wire [4:0]Q;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire core_clk;
  wire dl_en_hs_lpn_i_4_n_0;
  wire dl_en_hs_lpn_reg;
  wire dl_en_hs_lpn_reg_0;
  wire dl_en_hs_lpn_reg_i_3_n_0;
  wire [0:0]dl_status_reg;
  wire dl_status_reg_bit_4_i_3_n_0;
  wire dl_status_reg_bit_4_i_4_n_0;
  wire dl_status_reg_bit_4_reg;
  wire dl_stopstate;
  wire dl_stopstate_i_3_n_0;
  wire dl_stopstate_i_4_n_0;
  wire dl_stopstate_i_6_n_0;
  wire dl_stopstate_reg;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire lp_00_r;
  wire lp_01_r;
  wire lp_10_r;
  wire lp_10_r_reg;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire lp_11_r_reg_0;
  wire \lp_st_cnt[0]_i_3_n_0 ;
  wire \lp_st_cnt[4]_i_2_n_0 ;
  wire \lp_st_cnt_reg[3] ;
  wire [1:0]\lp_st_dup_reg[1] ;
  wire p_0_in8_in;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;
  wire time_out_settle_reg;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl0_lp_dp;
  LUT6 #(
    .INIT(64'hFFFFEEE2EEE2EEE2)) 
    \FSM_sequential_dl_rx_state[3]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_3_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I3(\FSM_sequential_dl_rx_state[3]_i_4_n_0 ),
        .I4(system_rst_reg),
        .I5(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(E));
  LUT6 #(
    .INIT(64'hB33FB33FB33F830C)) 
    \FSM_sequential_dl_rx_state[3]_i_10 
       (.I0(lp_11_r_dly),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .I4(lp_00_r),
        .I5(lp_10_r),
        .O(\FSM_sequential_dl_rx_state[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \FSM_sequential_dl_rx_state[3]_i_2 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_5_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I3(\FSM_sequential_dl_rx_state_reg[0] ),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I5(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .O(\FSM_sequential_dl_rx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFCDFFFFFFCD0000)) 
    \FSM_sequential_dl_rx_state[3]_i_3 
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(lp_11_r_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I5(\FSM_sequential_dl_rx_state[3]_i_8_n_0 ),
        .O(\FSM_sequential_dl_rx_state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF800FFFFFFFF)) 
    \FSM_sequential_dl_rx_state[3]_i_4 
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(time_out_settle_reg),
        .I2(lp_11_r_reg),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(p_0_in8_in),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .O(\FSM_sequential_dl_rx_state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0300030304040404)) 
    \FSM_sequential_dl_rx_state[3]_i_5 
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .O(\FSM_sequential_dl_rx_state[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBBB88BB88BB88)) 
    \FSM_sequential_dl_rx_state[3]_i_8 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_10_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I2(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I4(s_level_out_d2),
        .I5(s_level_out_d2_reg_0),
        .O(\FSM_sequential_dl_rx_state[3]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_dl_rx_state[3]_i_9__0 
       (.I0(s_level_out_d2),
        .I1(s_level_out_d2_reg_0),
        .O(p_0_in8_in));
  LUT6 #(
    .INIT(64'h000020FF00002000)) 
    dl_en_hs_lpn_i_1
       (.I0(time_out_settle_reg),
        .I1(lp_11_r_reg_0),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(dl_en_hs_lpn_reg_i_3_n_0),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I5(dl_en_hs_lpn_reg_0),
        .O(dl_en_hs_lpn_reg));
  LUT6 #(
    .INIT(64'h0045FFFF00450000)) 
    dl_en_hs_lpn_i_4
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I1(lp_11_r_reg),
        .I2(cl_rxclkactivehs_reg_0),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I5(dl_status_reg_bit_4_i_4_n_0),
        .O(dl_en_hs_lpn_i_4_n_0));
  MUXF7 dl_en_hs_lpn_reg_i_3
       (.I0(dl_en_hs_lpn_i_4_n_0),
        .I1(\FSM_sequential_dl_rx_state_reg[2] ),
        .O(dl_en_hs_lpn_reg_i_3_n_0),
        .S(\FSM_sequential_dl_rx_state_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000F8FF00000800)) 
    dl_status_reg_bit_4_i_1
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I1(cl_rxclkactivehs_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I3(dl_status_reg_bit_4_i_3_n_0),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I5(dl_status_reg),
        .O(dl_status_reg_bit_4_reg));
  LUT6 #(
    .INIT(64'h00D1FFFF00D10000)) 
    dl_status_reg_bit_4_i_3
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I2(lp_11_r_reg),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I5(dl_status_reg_bit_4_i_4_n_0),
        .O(dl_status_reg_bit_4_i_3_n_0));
  LUT6 #(
    .INIT(64'h4545450000000000)) 
    dl_status_reg_bit_4_i_4
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(lp_00_r),
        .I4(lp_10_r),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .O(dl_status_reg_bit_4_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000ABFB0000A808)) 
    dl_stopstate_i_1
       (.I0(\FSM_sequential_dl_rx_state_reg[1] ),
        .I1(dl_stopstate_i_3_n_0),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I3(dl_stopstate_i_4_n_0),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I5(dl_stopstate),
        .O(dl_stopstate_reg));
  LUT6 #(
    .INIT(64'h00FF0000CD00CD00)) 
    dl_stopstate_i_3
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(lp_11_r_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I4(dl_stopstate_i_6_n_0),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .O(dl_stopstate_i_3_n_0));
  LUT6 #(
    .INIT(64'h00000000FF800080)) 
    dl_stopstate_i_4
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(lp_11_r_reg),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .O(dl_stopstate_i_4_n_0));
  LUT6 #(
    .INIT(64'hB333B333B3338300)) 
    dl_stopstate_i_6
       (.I0(lp_11_r_dly),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .I4(lp_00_r),
        .I5(lp_10_r),
        .O(dl_stopstate_i_6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'h5755000057555555)) 
    \lp_st_cnt[0]_i_1__0 
       (.I0(Q[0]),
        .I1(lp_11_r_reg),
        .I2(lp_01_r),
        .I3(lp_10_r_reg),
        .I4(\lp_st_cnt[0]_i_3_n_0 ),
        .I5(\lp_st_cnt_reg[3] ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \lp_st_cnt[0]_i_3 
       (.I0(\lp_st_dup_reg[1] [1]),
        .I1(s_level_out_d2),
        .I2(\lp_st_dup_reg[1] [0]),
        .I3(s_level_out_d2_reg_0),
        .O(\lp_st_cnt[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000555555540000)) 
    \lp_st_cnt[1]_i_1__0 
       (.I0(\lp_st_cnt[4]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \lp_st_cnt[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\lp_st_cnt[4]_i_2_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \lp_st_cnt[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\lp_st_cnt[4]_i_2_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \lp_st_cnt[4]_i_1__0 
       (.I0(\lp_st_cnt[4]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(D[4]));
  LUT5 #(
    .INIT(32'h00000002)) 
    \lp_st_cnt[4]_i_2 
       (.I0(\lp_st_cnt[0]_i_3_n_0 ),
        .I1(lp_11_r_reg),
        .I2(lp_01_r),
        .I3(lp_10_r),
        .I4(lp_00_r),
        .O(\lp_st_cnt[4]_i_2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_26
   (out,
    \cl_rx_state_reg[1] ,
    cl_rx_state,
    cl_stopstate_reg,
    D,
    cl_status_reg_bit_0_reg,
    SR,
    \cl_rx_state_reg[0] ,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    rx_cl_lp_dn,
    core_clk,
    \cl_rx_state_reg[1]_0 ,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    p_0_out,
    \s_level_out_bus_d3_reg[1] ,
    core_rst,
    \cl_rx_state_reg[0]_0 ,
    s_level_out_d2_reg_0,
    \cl_rx_state_reg[2] ,
    lp_11_r_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ,
    Q,
    \lp_st_dup_reg[1] ,
    lp_00_r_reg,
    lp_11_r_reg_0,
    cl_status_reg_bit_0_reg_0,
    CO);
  output out;
  output \cl_rx_state_reg[1] ;
  output cl_rx_state;
  output cl_stopstate_reg;
  output [4:0]D;
  output cl_status_reg_bit_0_reg;
  output [0:0]SR;
  output \cl_rx_state_reg[0] ;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input rx_cl_lp_dn;
  input core_clk;
  input \cl_rx_state_reg[1]_0 ;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input [0:0]p_0_out;
  input [0:0]\s_level_out_bus_d3_reg[1] ;
  input core_rst;
  input \cl_rx_state_reg[0]_0 ;
  input s_level_out_d2_reg_0;
  input \cl_rx_state_reg[2] ;
  input lp_11_r_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ;
  input [4:0]Q;
  input [1:0]\lp_st_dup_reg[1] ;
  input lp_00_r_reg;
  input lp_11_r_reg_0;
  input [0:0]cl_status_reg_bit_0_reg_0;
  input [0:0]CO;

  wire [0:0]CO;
  wire [4:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire cl_rx_state;
  wire \cl_rx_state[0]_i_2_n_0 ;
  wire \cl_rx_state[2]_i_5_n_0 ;
  wire \cl_rx_state_reg[0] ;
  wire \cl_rx_state_reg[0]_0 ;
  wire \cl_rx_state_reg[1] ;
  wire \cl_rx_state_reg[1]_0 ;
  wire \cl_rx_state_reg[2] ;
  wire cl_status_reg_bit_0_i_2_n_0;
  wire cl_status_reg_bit_0_reg;
  wire [0:0]cl_status_reg_bit_0_reg_0;
  wire cl_stopstate_reg;
  wire core_clk;
  wire core_rst;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ;
  wire lp_00_r_reg;
  wire lp_11_r_reg;
  wire lp_11_r_reg_0;
  wire \lp_st_cnt[4]_i_2__1_n_0 ;
  wire [1:0]\lp_st_dup_reg[1] ;
  wire [0:0]p_0_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire [0:0]\s_level_out_bus_d3_reg[1] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_cl_lp_dn;
  LUT6 #(
    .INIT(64'h00D8FFFFFFFF0000)) 
    \cl_rx_state[0]_i_1 
       (.I0(\cl_rx_state_reg[2] ),
        .I1(lp_11_r_reg_0),
        .I2(\cl_rx_state[0]_i_2_n_0 ),
        .I3(\cl_rx_state_reg[1]_0 ),
        .I4(cl_rx_state),
        .I5(\cl_rx_state_reg[0]_0 ),
        .O(\cl_rx_state_reg[0] ));
  LUT3 #(
    .INIT(8'h08)) 
    \cl_rx_state[0]_i_2 
       (.I0(s_level_out_d2),
        .I1(s_level_out_d2_reg_0),
        .I2(\en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ),
        .O(\cl_rx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FECE0000)) 
    \cl_rx_state[1]_i_1 
       (.I0(\cl_rx_state_reg[1]_0 ),
        .I1(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I2(cl_rx_state),
        .I3(p_0_out),
        .I4(\s_level_out_bus_d3_reg[1] ),
        .I5(core_rst),
        .O(\cl_rx_state_reg[1] ));
  LUT3 #(
    .INIT(8'h8A)) 
    \cl_rx_state[2]_i_4 
       (.I0(\cl_rx_state[2]_i_5_n_0 ),
        .I1(lp_11_r_reg),
        .I2(\cl_rx_state_reg[2] ),
        .O(cl_rx_state));
  LUT6 #(
    .INIT(64'hFFFFFFFF3B0CCC0C)) 
    \cl_rx_state[2]_i_5 
       (.I0(\en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ),
        .I1(\cl_rx_state_reg[0]_0 ),
        .I2(\cl_rx_state_reg[1]_0 ),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .I5(\cl_rx_state_reg[2] ),
        .O(\cl_rx_state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF77F555F0000000A)) 
    cl_status_reg_bit_0_i_1
       (.I0(\cl_rx_state_reg[2] ),
        .I1(lp_11_r_reg_0),
        .I2(\cl_rx_state_reg[0]_0 ),
        .I3(\cl_rx_state_reg[1]_0 ),
        .I4(cl_status_reg_bit_0_i_2_n_0),
        .I5(cl_status_reg_bit_0_reg_0),
        .O(cl_status_reg_bit_0_reg));
  LUT4 #(
    .INIT(16'hFFFE)) 
    cl_status_reg_bit_0_i_2
       (.I0(\cl_rx_state_reg[0]_0 ),
        .I1(\cl_rx_state_reg[1]_0 ),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .O(cl_status_reg_bit_0_i_2_n_0));
  LUT5 #(
    .INIT(32'h00480000)) 
    cl_stopstate_i_5
       (.I0(\cl_rx_state_reg[0]_0 ),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\cl_rx_state_reg[2] ),
        .I4(\cl_rx_state_reg[1]_0 ),
        .O(cl_stopstate_reg));
  LUT6 #(
    .INIT(64'hAEAEAEAEAEAEAE00)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_1 
       (.I0(\en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ),
        .I1(CO),
        .I2(SR),
        .I3(\cl_rx_state_reg[2] ),
        .I4(\cl_rx_state_reg[1]_0 ),
        .I5(\cl_rx_state_reg[0]_0 ),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_reg ));
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_1 
       (.I0(\cl_rx_state_reg[0]_0 ),
        .I1(\cl_rx_state_reg[2] ),
        .I2(\cl_rx_state_reg[1]_0 ),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .O(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hFFFF0000FFFDFFFD)) 
    \lp_st_cnt[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I5(Q[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0000555555540000)) 
    \lp_st_cnt[1]_i_1 
       (.I0(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \lp_st_cnt[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\lp_st_cnt[4]_i_2__1_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \lp_st_cnt[3]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\lp_st_cnt[4]_i_2__1_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \lp_st_cnt[4]_i_1 
       (.I0(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(D[4]));
  LUT5 #(
    .INIT(32'h00006FF6)) 
    \lp_st_cnt[4]_i_2__1 
       (.I0(s_level_out_d2),
        .I1(\lp_st_dup_reg[1] [0]),
        .I2(s_level_out_d2_reg_0),
        .I3(\lp_st_dup_reg[1] [1]),
        .I4(lp_00_r_reg),
        .O(\lp_st_cnt[4]_i_2__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_27
   (out,
    cl_init_done_coreclk0,
    \en_cl_init_to_blk.init_to_cnt_level20 ,
    cl_status_reg_bit_4__0,
    p_0_out,
    \cl_rx_state_reg[1] ,
    cl_stopstate_reg,
    \cl_rx_state_reg[2] ,
    rx_cl_lp_dp,
    core_clk,
    CO,
    s_level_out_d2_reg_0,
    \cl_rx_state_reg[1]_0 ,
    \cl_rx_state_reg[2]_0 ,
    \cl_rx_state_reg[0] ,
    \en_cl_init_to_blk.init_to_cnt_level1_tc ,
    lp_11_r_dly,
    lp_11_r_reg,
    \cl_rx_state_reg[1]_1 ,
    D,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    \cl_rx_state_reg[0]_0 ,
    cl_stopstate,
    cl_rx_state);
  output out;
  output cl_init_done_coreclk0;
  output \en_cl_init_to_blk.init_to_cnt_level20 ;
  output cl_status_reg_bit_4__0;
  output [0:0]p_0_out;
  output \cl_rx_state_reg[1] ;
  output cl_stopstate_reg;
  output \cl_rx_state_reg[2] ;
  input rx_cl_lp_dp;
  input core_clk;
  input [0:0]CO;
  input s_level_out_d2_reg_0;
  input \cl_rx_state_reg[1]_0 ;
  input \cl_rx_state_reg[2]_0 ;
  input \cl_rx_state_reg[0] ;
  input \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  input lp_11_r_dly;
  input lp_11_r_reg;
  input \cl_rx_state_reg[1]_1 ;
  input [0:0]D;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input \cl_rx_state_reg[0]_0 ;
  input cl_stopstate;
  input cl_rx_state;

  wire [0:0]CO;
  wire [0:0]D;
  wire cl_init_done_coreclk0;
  wire cl_rx_state;
  wire \cl_rx_state[2]_i_2_n_0 ;
  wire \cl_rx_state[2]_i_3_n_0 ;
  wire \cl_rx_state_reg[0] ;
  wire \cl_rx_state_reg[0]_0 ;
  wire \cl_rx_state_reg[1] ;
  wire \cl_rx_state_reg[1]_0 ;
  wire \cl_rx_state_reg[1]_1 ;
  wire \cl_rx_state_reg[2] ;
  wire \cl_rx_state_reg[2]_0 ;
  wire cl_status_reg_bit_4__0;
  wire cl_status_reg_bit_4_i_3_n_0;
  wire cl_stopstate;
  wire cl_stopstate_i_3_n_0;
  wire cl_stopstate_i_4_n_0;
  wire cl_stopstate_i_6_n_0;
  wire cl_stopstate_reg;
  wire core_clk;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  wire \en_cl_init_to_blk.init_to_cnt_level20 ;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire [0:0]p_0_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_cl_lp_dp;
  LUT6 #(
    .INIT(64'h5555FEFE5555AA80)) 
    \cl_rx_state[1]_i_2 
       (.I0(\cl_rx_state_reg[0] ),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I4(\cl_rx_state_reg[1]_0 ),
        .I5(\cl_rx_state_reg[2]_0 ),
        .O(p_0_out));
  LUT5 #(
    .INIT(32'hF0FFF400)) 
    \cl_rx_state[2]_i_1 
       (.I0(\cl_rx_state[2]_i_2_n_0 ),
        .I1(\cl_rx_state_reg[0] ),
        .I2(\cl_rx_state[2]_i_3_n_0 ),
        .I3(cl_rx_state),
        .I4(\cl_rx_state_reg[2]_0 ),
        .O(\cl_rx_state_reg[2] ));
  LUT4 #(
    .INIT(16'h4555)) 
    \cl_rx_state[2]_i_2 
       (.I0(\cl_rx_state_reg[1]_0 ),
        .I1(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .O(\cl_rx_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000F1100000000)) 
    \cl_rx_state[2]_i_3 
       (.I0(s_level_out_d2),
        .I1(s_level_out_d2_reg_0),
        .I2(lp_11_r_reg),
        .I3(\cl_rx_state_reg[0] ),
        .I4(\cl_rx_state_reg[1]_0 ),
        .I5(\cl_rx_state_reg[2]_0 ),
        .O(\cl_rx_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFB88888BB)) 
    \cl_rx_state[2]_i_6 
       (.I0(lp_11_r_reg),
        .I1(\cl_rx_state_reg[1]_0 ),
        .I2(lp_11_r_dly),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .I5(\cl_rx_state_reg[0] ),
        .O(\cl_rx_state_reg[1] ));
  LUT6 #(
    .INIT(64'hFFF70000FFF7FFF7)) 
    cl_status_reg_bit_4_i_1
       (.I0(\cl_rx_state_reg[1]_1 ),
        .I1(s_level_out_d2_reg_0),
        .I2(s_level_out_d2),
        .I3(\cl_rx_state_reg[2]_0 ),
        .I4(D),
        .I5(cl_status_reg_bit_4_i_3_n_0),
        .O(cl_status_reg_bit_4__0));
  LUT6 #(
    .INIT(64'hF0303F5FF03F3FFF)) 
    cl_status_reg_bit_4_i_3
       (.I0(lp_11_r_dly),
        .I1(lp_11_r_reg),
        .I2(\cl_rx_state_reg[2]_0 ),
        .I3(\cl_rx_state_reg[0] ),
        .I4(\cl_rx_state_reg[1]_0 ),
        .I5(cl_stopstate_i_6_n_0),
        .O(cl_status_reg_bit_4_i_3_n_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    cl_stopstate_i_2
       (.I0(cl_stopstate_i_3_n_0),
        .I1(cl_stopstate_i_4_n_0),
        .I2(\cl_rx_state_reg[0]_0 ),
        .I3(cl_stopstate),
        .O(cl_stopstate_reg));
  LUT6 #(
    .INIT(64'hFFEA004000FF00FF)) 
    cl_stopstate_i_3
       (.I0(\cl_rx_state_reg[1]_0 ),
        .I1(cl_stopstate_i_6_n_0),
        .I2(lp_11_r_dly),
        .I3(\cl_rx_state_reg[0] ),
        .I4(lp_11_r_reg),
        .I5(\cl_rx_state_reg[2]_0 ),
        .O(cl_stopstate_i_3_n_0));
  LUT6 #(
    .INIT(64'h2A28282802000000)) 
    cl_stopstate_i_4
       (.I0(\cl_rx_state_reg[2]_0 ),
        .I1(\cl_rx_state_reg[0] ),
        .I2(\cl_rx_state_reg[1]_0 ),
        .I3(cl_stopstate_i_6_n_0),
        .I4(lp_11_r_dly),
        .I5(lp_11_r_reg),
        .O(cl_stopstate_i_4_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    cl_stopstate_i_6
       (.I0(s_level_out_d2),
        .I1(s_level_out_d2_reg_0),
        .O(cl_stopstate_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \en_cl_init_to_blk.cl_init_done_div4clk_i_2 
       (.I0(CO),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\cl_rx_state_reg[1]_0 ),
        .I4(\cl_rx_state_reg[2]_0 ),
        .I5(\cl_rx_state_reg[0] ),
        .O(cl_init_done_coreclk0));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\cl_rx_state_reg[1]_0 ),
        .I4(\cl_rx_state_reg[2]_0 ),
        .I5(\cl_rx_state_reg[0] ),
        .O(\en_cl_init_to_blk.init_to_cnt_level20 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_4
   (out,
    dl_status_reg_bit_0_reg,
    dl_stopstate_reg,
    D,
    rx_dl1_lp_dn,
    core_clk,
    lp_11_r_dly,
    s_level_out_d2_reg_0,
    \FSM_sequential_dl_rx_state_reg[3] ,
    system_rst_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    dl_status_reg,
    lp_11_r_reg,
    \FSM_sequential_dl_rx_state_reg[0] ,
    lp_10_r,
    lp_00_r,
    cl_rxclkactivehs_reg,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[2] );
  output out;
  output dl_status_reg_bit_0_reg;
  output dl_stopstate_reg;
  output [1:0]D;
  input rx_dl1_lp_dn;
  input core_clk;
  input lp_11_r_dly;
  input s_level_out_d2_reg_0;
  input [3:0]\FSM_sequential_dl_rx_state_reg[3] ;
  input system_rst_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input [0:0]dl_status_reg;
  input lp_11_r_reg;
  input \FSM_sequential_dl_rx_state_reg[0] ;
  input lp_10_r;
  input lp_00_r;
  input cl_rxclkactivehs_reg;
  input \FSM_sequential_dl_rx_state_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[2] ;

  wire [1:0]D;
  wire \FSM_sequential_dl_rx_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire [3:0]\FSM_sequential_dl_rx_state_reg[3] ;
  wire cl_rxclkactivehs_reg;
  wire core_clk;
  wire dl_rx_state09_out;
  wire [0:0]dl_status_reg;
  wire dl_status_reg_bit_0;
  wire dl_status_reg_bit_0_i_4__0_n_0;
  wire dl_status_reg_bit_0_reg;
  wire dl_stopstate_reg;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire lp_00_r;
  wire lp_10_r;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl1_lp_dn;
  LUT5 #(
    .INIT(32'hFFE2E2E2)) 
    \FSM_sequential_dl_rx_state[1]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[2] ),
        .I3(system_rst_reg),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h000000000202AA80)) 
    \FSM_sequential_dl_rx_state[1]_i_2__0 
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I4(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .I5(\FSM_sequential_dl_rx_state_reg[3] [3]),
        .O(\FSM_sequential_dl_rx_state[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00E2E2E2)) 
    \FSM_sequential_dl_rx_state[2]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[2]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .I3(system_rst_reg),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h30303330C8C8C8C8)) 
    \FSM_sequential_dl_rx_state[2]_i_2__0 
       (.I0(cl_rxclkactivehs_reg),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [3]),
        .I2(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .I5(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .O(\FSM_sequential_dl_rx_state[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h004F4F4F00404040)) 
    dl_status_reg_bit_0_i_1__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I1(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I2(dl_status_reg_bit_0),
        .I3(system_rst_reg),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I5(dl_status_reg),
        .O(dl_status_reg_bit_0_reg));
  LUT6 #(
    .INIT(64'h0F008F8F0F008080)) 
    dl_status_reg_bit_0_i_2__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .I1(lp_11_r_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I3(\FSM_sequential_dl_rx_state_reg[0] ),
        .I4(\FSM_sequential_dl_rx_state_reg[3] [3]),
        .I5(dl_status_reg_bit_0_i_4__0_n_0),
        .O(dl_status_reg_bit_0));
  LUT6 #(
    .INIT(64'h000FEE0E00000000)) 
    dl_status_reg_bit_0_i_4__0
       (.I0(lp_10_r),
        .I1(lp_00_r),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .I4(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I5(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .O(dl_status_reg_bit_0_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hEFAF4A0AEFAF4A0F)) 
    dl_stopstate_i_2__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3] [1]),
        .I1(dl_rx_state09_out),
        .I2(\FSM_sequential_dl_rx_state_reg[3] [2]),
        .I3(\FSM_sequential_dl_rx_state_reg[3] [0]),
        .I4(lp_11_r_reg),
        .I5(cl_rxclkactivehs_reg),
        .O(dl_stopstate_reg));
  LUT3 #(
    .INIT(8'h80)) 
    dl_stopstate_i_5__0
       (.I0(lp_11_r_dly),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .O(dl_rx_state09_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized0_5
   (out,
    E,
    D,
    dl_en_hs_lpn_reg,
    dl_status_reg_bit_4_reg,
    dl_stopstate_reg,
    \FSM_sequential_dl_rx_state_reg[3] ,
    rx_dl1_lp_dp,
    core_clk,
    \FSM_sequential_dl_rx_state_reg[3]_0 ,
    system_rst_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    s_level_out_d2_reg_0,
    Q,
    lp_11_r_reg,
    lp_01_r,
    lp_10_r_reg,
    \lp_st_cnt_reg[3] ,
    lp_10_r,
    lp_00_r,
    \lp_st_dup_reg[1] ,
    time_out_settle_reg,
    lp_11_r_reg_0,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    dl_en_hs_lpn_reg_0,
    cl_rxclkactivehs_reg,
    dl_status_reg,
    \FSM_sequential_dl_rx_state_reg[1] ,
    dl_stopstate,
    cl_rxclkactivehs_reg_0,
    \FSM_sequential_dl_rx_state_reg[2] ,
    lp_11_r_dly,
    \FSM_sequential_dl_rx_state_reg[0] );
  output out;
  output [0:0]E;
  output [4:0]D;
  output dl_en_hs_lpn_reg;
  output dl_status_reg_bit_4_reg;
  output dl_stopstate_reg;
  output [0:0]\FSM_sequential_dl_rx_state_reg[3] ;
  input rx_dl1_lp_dp;
  input core_clk;
  input [3:0]\FSM_sequential_dl_rx_state_reg[3]_0 ;
  input system_rst_reg;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  input s_level_out_d2_reg_0;
  input [4:0]Q;
  input lp_11_r_reg;
  input lp_01_r;
  input lp_10_r_reg;
  input \lp_st_cnt_reg[3] ;
  input lp_10_r;
  input lp_00_r;
  input [1:0]\lp_st_dup_reg[1] ;
  input time_out_settle_reg;
  input lp_11_r_reg_0;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input dl_en_hs_lpn_reg_0;
  input cl_rxclkactivehs_reg;
  input [0:0]dl_status_reg;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input dl_stopstate;
  input cl_rxclkactivehs_reg_0;
  input \FSM_sequential_dl_rx_state_reg[2] ;
  input lp_11_r_dly;
  input \FSM_sequential_dl_rx_state_reg[0] ;

  wire [4:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_rx_state[3]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_7_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_9_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire [0:0]\FSM_sequential_dl_rx_state_reg[3] ;
  wire [3:0]\FSM_sequential_dl_rx_state_reg[3]_0 ;
  wire [4:0]Q;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire core_clk;
  wire dl_en_hs_lpn_i_4__0_n_0;
  wire dl_en_hs_lpn_reg;
  wire dl_en_hs_lpn_reg_0;
  wire dl_en_hs_lpn_reg_i_3__0_n_0;
  wire [0:0]dl_status_reg;
  wire dl_status_reg_bit_4_i_3__0_n_0;
  wire dl_status_reg_bit_4_i_4__0_n_0;
  wire dl_status_reg_bit_4_reg;
  wire dl_stopstate;
  wire dl_stopstate_i_3__0_n_0;
  wire dl_stopstate_i_4__0_n_0;
  wire dl_stopstate_i_6__0_n_0;
  wire dl_stopstate_reg;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire lp_00_r;
  wire lp_01_r;
  wire lp_10_r;
  wire lp_10_r_reg;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire lp_11_r_reg_0;
  wire \lp_st_cnt[0]_i_3__0_n_0 ;
  wire \lp_st_cnt[4]_i_2__0_n_0 ;
  wire \lp_st_cnt_reg[3] ;
  wire [1:0]\lp_st_dup_reg[1] ;
  wire p_0_in8_in;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;
  wire time_out_settle_reg;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl1_lp_dp;
  LUT6 #(
    .INIT(64'hFFFFEEE2EEE2EEE2)) 
    \FSM_sequential_dl_rx_state[3]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_3__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I3(\FSM_sequential_dl_rx_state[3]_i_4__0_n_0 ),
        .I4(system_rst_reg),
        .I5(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .O(E));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \FSM_sequential_dl_rx_state[3]_i_2__0 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_5__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I3(\FSM_sequential_dl_rx_state_reg[0] ),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I5(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .O(\FSM_sequential_dl_rx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFCDFFFFFFCD0000)) 
    \FSM_sequential_dl_rx_state[3]_i_3__0 
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(lp_11_r_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I5(\FSM_sequential_dl_rx_state[3]_i_7_n_0 ),
        .O(\FSM_sequential_dl_rx_state[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF800FFFFFFFF)) 
    \FSM_sequential_dl_rx_state[3]_i_4__0 
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(time_out_settle_reg),
        .I2(lp_11_r_reg),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(p_0_in8_in),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .O(\FSM_sequential_dl_rx_state[3]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0300030304040404)) 
    \FSM_sequential_dl_rx_state[3]_i_5__0 
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(s_level_out_d2),
        .I4(s_level_out_d2_reg_0),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .O(\FSM_sequential_dl_rx_state[3]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBBB88BB88BB88)) 
    \FSM_sequential_dl_rx_state[3]_i_7 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_9_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I2(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I4(s_level_out_d2),
        .I5(s_level_out_d2_reg_0),
        .O(\FSM_sequential_dl_rx_state[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_dl_rx_state[3]_i_8__0 
       (.I0(s_level_out_d2),
        .I1(s_level_out_d2_reg_0),
        .O(p_0_in8_in));
  LUT6 #(
    .INIT(64'hB33FB33FB33F830C)) 
    \FSM_sequential_dl_rx_state[3]_i_9 
       (.I0(lp_11_r_dly),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .I4(lp_00_r),
        .I5(lp_10_r),
        .O(\FSM_sequential_dl_rx_state[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h000020FF00002000)) 
    dl_en_hs_lpn_i_1__0
       (.I0(time_out_settle_reg),
        .I1(lp_11_r_reg_0),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(dl_en_hs_lpn_reg_i_3__0_n_0),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I5(dl_en_hs_lpn_reg_0),
        .O(dl_en_hs_lpn_reg));
  LUT6 #(
    .INIT(64'h0045FFFF00450000)) 
    dl_en_hs_lpn_i_4__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I1(lp_11_r_reg),
        .I2(cl_rxclkactivehs_reg_0),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I5(dl_status_reg_bit_4_i_4__0_n_0),
        .O(dl_en_hs_lpn_i_4__0_n_0));
  MUXF7 dl_en_hs_lpn_reg_i_3__0
       (.I0(dl_en_hs_lpn_i_4__0_n_0),
        .I1(\FSM_sequential_dl_rx_state_reg[2] ),
        .O(dl_en_hs_lpn_reg_i_3__0_n_0),
        .S(\FSM_sequential_dl_rx_state_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000F8FF00000800)) 
    dl_status_reg_bit_4_i_1__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I1(cl_rxclkactivehs_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I3(dl_status_reg_bit_4_i_3__0_n_0),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I5(dl_status_reg),
        .O(dl_status_reg_bit_4_reg));
  LUT6 #(
    .INIT(64'h00D1FFFF00D10000)) 
    dl_status_reg_bit_4_i_3__0
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I2(lp_11_r_reg),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I5(dl_status_reg_bit_4_i_4__0_n_0),
        .O(dl_status_reg_bit_4_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h4545450000000000)) 
    dl_status_reg_bit_4_i_4__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(lp_00_r),
        .I4(lp_10_r),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .O(dl_status_reg_bit_4_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h0000ABFB0000A808)) 
    dl_stopstate_i_1__0
       (.I0(\FSM_sequential_dl_rx_state_reg[1] ),
        .I1(dl_stopstate_i_3__0_n_0),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [1]),
        .I3(dl_stopstate_i_4__0_n_0),
        .I4(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I5(dl_stopstate),
        .O(dl_stopstate_reg));
  LUT6 #(
    .INIT(64'h00FF0000CD00CD00)) 
    dl_stopstate_i_3__0
       (.I0(cl_rxclkactivehs_reg_0),
        .I1(lp_11_r_reg),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .I4(dl_stopstate_i_6__0_n_0),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .O(dl_stopstate_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h00000000FF800080)) 
    dl_stopstate_i_4__0
       (.I0(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I1(s_level_out_d2),
        .I2(s_level_out_d2_reg_0),
        .I3(\FSM_sequential_dl_rx_state_reg[3]_0 [2]),
        .I4(lp_11_r_reg),
        .I5(\FSM_sequential_dl_rx_state_reg[3]_0 [3]),
        .O(dl_stopstate_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hB333B333B3338300)) 
    dl_stopstate_i_6__0
       (.I0(lp_11_r_dly),
        .I1(\FSM_sequential_dl_rx_state_reg[3]_0 [0]),
        .I2(s_level_out_d2),
        .I3(s_level_out_d2_reg_0),
        .I4(lp_00_r),
        .I5(lp_10_r),
        .O(dl_stopstate_i_6__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'h5755000057555555)) 
    \lp_st_cnt[0]_i_1__1 
       (.I0(Q[0]),
        .I1(lp_11_r_reg),
        .I2(lp_01_r),
        .I3(lp_10_r_reg),
        .I4(\lp_st_cnt[0]_i_3__0_n_0 ),
        .I5(\lp_st_cnt_reg[3] ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \lp_st_cnt[0]_i_3__0 
       (.I0(\lp_st_dup_reg[1] [1]),
        .I1(s_level_out_d2),
        .I2(\lp_st_dup_reg[1] [0]),
        .I3(s_level_out_d2_reg_0),
        .O(\lp_st_cnt[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000555555540000)) 
    \lp_st_cnt[1]_i_1__1 
       (.I0(\lp_st_cnt[4]_i_2__0_n_0 ),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \lp_st_cnt[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\lp_st_cnt[4]_i_2__0_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \lp_st_cnt[3]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(\lp_st_cnt[4]_i_2__0_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \lp_st_cnt[4]_i_1__1 
       (.I0(\lp_st_cnt[4]_i_2__0_n_0 ),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(D[4]));
  LUT5 #(
    .INIT(32'h00000002)) 
    \lp_st_cnt[4]_i_2__0 
       (.I0(\lp_st_cnt[0]_i_3__0_n_0 ),
        .I1(lp_11_r_reg),
        .I2(lp_01_r),
        .I3(lp_10_r),
        .I4(lp_00_r),
        .O(\lp_st_cnt[4]_i_2__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1
   (cl_enable,
    core_clk);
  input cl_enable;
  input core_clk;

  wire cl_enable;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_0
   (clk_active_r,
    core_clk);
  input clk_active_r;
  input core_clk;

  wire clk_active_r;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(clk_active_r),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_2
   (cal_done,
    rx_div4_clk);
  input cal_done;
  input rx_div4_clk;

  wire cal_done;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(cal_done),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_3
   (out,
    \gen_hs_high_rates.active_sm_r_reg ,
    active_sm_r__2,
    dl1_rxactivehs,
    core_clk,
    \gen_hs_high_rates.active_sm_r_reg_0 ,
    stop_state_extn_r,
    \gen_hs_high_rates.dl_state_reg[0] ,
    \gen_hs_high_rates.dl_state_reg[1] ,
    dl_en_hs_lpn_i,
    rxactivehs_coreclk_sync_r);
  output out;
  output \gen_hs_high_rates.active_sm_r_reg ;
  output active_sm_r__2;
  input dl1_rxactivehs;
  input core_clk;
  input \gen_hs_high_rates.active_sm_r_reg_0 ;
  input stop_state_extn_r;
  input \gen_hs_high_rates.dl_state_reg[0] ;
  input \gen_hs_high_rates.dl_state_reg[1] ;
  input dl_en_hs_lpn_i;
  input rxactivehs_coreclk_sync_r;

  wire active_sm_r__2;
  wire core_clk;
  wire dl1_rxactivehs;
  wire dl_en_hs_lpn_i;
  wire \gen_hs_high_rates.active_sm_r_i_2__0_n_0 ;
  wire \gen_hs_high_rates.active_sm_r_reg ;
  wire \gen_hs_high_rates.active_sm_r_reg_0 ;
  wire \gen_hs_high_rates.dl_state_reg[0] ;
  wire \gen_hs_high_rates.dl_state_reg[1] ;
  wire rxactivehs_coreclk_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire stop_state_extn_r;

  assign out = s_level_out_d2;
  LUT6 #(
    .INIT(64'hAF0AAA0AA02AAA2A)) 
    \gen_hs_high_rates.active_sm_r_i_1__0 
       (.I0(\gen_hs_high_rates.active_sm_r_reg_0 ),
        .I1(stop_state_extn_r),
        .I2(\gen_hs_high_rates.dl_state_reg[0] ),
        .I3(\gen_hs_high_rates.dl_state_reg[1] ),
        .I4(\gen_hs_high_rates.active_sm_r_i_2__0_n_0 ),
        .I5(dl_en_hs_lpn_i),
        .O(\gen_hs_high_rates.active_sm_r_reg ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_hs_high_rates.active_sm_r_i_2__0 
       (.I0(rxactivehs_coreclk_sync_r),
        .I1(s_level_out_d2),
        .O(\gen_hs_high_rates.active_sm_r_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h4)) 
    \gen_hs_high_rates.stopstate_i_3__0 
       (.I0(s_level_out_d2),
        .I1(rxactivehs_coreclk_sync_r),
        .O(active_sm_r__2));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_rxactivehs),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_6
   (cal_done,
    rx_div4_clk);
  input cal_done;
  input rx_div4_clk;

  wire cal_done;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(cal_done),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized1_9
   (out,
    \gen_hs_high_rates.active_sm_r_reg ,
    active_sm_r__2,
    dl0_rxactivehs,
    core_clk,
    \gen_hs_high_rates.active_sm_r_reg_0 ,
    stop_state_extn_r,
    \gen_hs_high_rates.dl_state_reg[0] ,
    \gen_hs_high_rates.dl_state_reg[1] ,
    dl_en_hs_lpn_i,
    rxactivehs_coreclk_sync_r);
  output out;
  output \gen_hs_high_rates.active_sm_r_reg ;
  output active_sm_r__2;
  input dl0_rxactivehs;
  input core_clk;
  input \gen_hs_high_rates.active_sm_r_reg_0 ;
  input stop_state_extn_r;
  input \gen_hs_high_rates.dl_state_reg[0] ;
  input \gen_hs_high_rates.dl_state_reg[1] ;
  input dl_en_hs_lpn_i;
  input rxactivehs_coreclk_sync_r;

  wire active_sm_r__2;
  wire core_clk;
  wire dl0_rxactivehs;
  wire dl_en_hs_lpn_i;
  wire \gen_hs_high_rates.active_sm_r_i_2_n_0 ;
  wire \gen_hs_high_rates.active_sm_r_reg ;
  wire \gen_hs_high_rates.active_sm_r_reg_0 ;
  wire \gen_hs_high_rates.dl_state_reg[0] ;
  wire \gen_hs_high_rates.dl_state_reg[1] ;
  wire rxactivehs_coreclk_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire stop_state_extn_r;

  assign out = s_level_out_d2;
  LUT6 #(
    .INIT(64'hAF0AAA0AA02AAA2A)) 
    \gen_hs_high_rates.active_sm_r_i_1 
       (.I0(\gen_hs_high_rates.active_sm_r_reg_0 ),
        .I1(stop_state_extn_r),
        .I2(\gen_hs_high_rates.dl_state_reg[0] ),
        .I3(\gen_hs_high_rates.dl_state_reg[1] ),
        .I4(\gen_hs_high_rates.active_sm_r_i_2_n_0 ),
        .I5(dl_en_hs_lpn_i),
        .O(\gen_hs_high_rates.active_sm_r_reg ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_hs_high_rates.active_sm_r_i_2 
       (.I0(rxactivehs_coreclk_sync_r),
        .I1(s_level_out_d2),
        .O(\gen_hs_high_rates.active_sm_r_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h4)) 
    \gen_hs_high_rates.stopstate_i_4 
       (.I0(s_level_out_d2),
        .I1(rxactivehs_coreclk_sync_r),
        .O(active_sm_r__2));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_rxactivehs),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2
   (D,
    \rd_addr_reg[6] ,
    \s_level_out_bus_d3_reg[15]_0 ,
    \s_level_out_bus_d3_reg[15]_1 ,
    \rd_addr_reg[5] ,
    \rd_addr_reg[5]_0 ,
    Q,
    \rd_addr_reg[3] ,
    \s_level_out_bus_d3_reg[15]_2 ,
    \rd_addr_reg[3]_0 ,
    SR,
    dl_pkt_cnt,
    s_axi_aclk);
  output [15:0]D;
  input \rd_addr_reg[6] ;
  input [15:0]\s_level_out_bus_d3_reg[15]_0 ;
  input [15:0]\s_level_out_bus_d3_reg[15]_1 ;
  input \rd_addr_reg[5] ;
  input \rd_addr_reg[5]_0 ;
  input [15:0]Q;
  input \rd_addr_reg[3] ;
  input [15:0]\s_level_out_bus_d3_reg[15]_2 ;
  input \rd_addr_reg[3]_0 ;
  input [0:0]SR;
  input [15:0]dl_pkt_cnt;
  input s_axi_aclk;

  wire [15:0]D;
  wire [15:0]Q;
  wire [0:0]SR;
  wire [15:0]dl_pkt_cnt;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0 ;
  wire \rd_addr_reg[3] ;
  wire \rd_addr_reg[3]_0 ;
  wire \rd_addr_reg[5] ;
  wire \rd_addr_reg[5]_0 ;
  wire \rd_addr_reg[6] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  wire [15:0]\s_level_out_bus_d3_reg[15]_0 ;
  wire [15:0]\s_level_out_bus_d3_reg[15]_1 ;
  wire [15:0]\s_level_out_bus_d3_reg[15]_2 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [0]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [0]),
        .I4(\rd_addr_reg[5] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[0]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[0]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [0]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [1]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [1]),
        .I4(\rd_addr_reg[5] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[1]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[1]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [1]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [2]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [2]),
        .I4(\rd_addr_reg[5] ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[2]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[2]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [2]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [3]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [3]),
        .I4(\rd_addr_reg[5] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[3]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[3]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [3]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [4]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [4]),
        .I4(\rd_addr_reg[5] ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[4]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[4]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [4]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [5]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [5]),
        .I4(\rd_addr_reg[5] ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[5]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[5]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [5]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [6]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [6]),
        .I4(\rd_addr_reg[5] ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[6]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[6]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [6]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [7]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [7]),
        .I4(\rd_addr_reg[5] ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[7]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[7]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [7]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [8]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [8]),
        .I4(\rd_addr_reg[5] ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[8]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[8]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [8]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [9]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [9]),
        .I4(\rd_addr_reg[5] ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[9]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[9]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [9]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [10]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [10]),
        .I4(\rd_addr_reg[5] ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[10]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[10]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [10]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [11]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [11]),
        .I4(\rd_addr_reg[5] ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[11]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[11]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [11]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [12]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [12]),
        .I4(\rd_addr_reg[5] ),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[12]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[12]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [12]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [13]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [13]),
        .I4(\rd_addr_reg[5] ),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[13]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[13]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [13]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [14]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [14]),
        .I4(\rd_addr_reg[5] ),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[14]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[14]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [14]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0 ),
        .I1(\rd_addr_reg[6] ),
        .I2(\s_level_out_bus_d3_reg[15]_0 [15]),
        .I3(\s_level_out_bus_d3_reg[15]_1 [15]),
        .I4(\rd_addr_reg[5] ),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4 
       (.I0(\rd_addr_reg[5]_0 ),
        .I1(Q[15]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[15]),
        .I4(\s_level_out_bus_d3_reg[15]_2 [15]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_17
   (D,
    SR,
    dl_pkt_cnt,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input [15:0]dl_pkt_cnt;
  input s_axi_aclk;

  wire [0:0]SR;
  wire [15:0]dl_pkt_cnt;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_pkt_cnt[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_18
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized2_19
   (D,
    SR,
    s_axi_aresetn,
    s_axi_aclk);
  output [15:0]D;
  output [0:0]SR;
  input s_axi_aresetn;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h1)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_3 
       (.I0(s_axi_aresetn),
        .O(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3
   (SR,
    s_axi_aclk);
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized3_21
   (SR,
    dl_status_reg,
    s_axi_aclk);
  input [0:0]SR;
  input [1:0]dl_status_reg;
  input s_axi_aclk;

  wire [0:0]SR;
  wire [1:0]dl_status_reg;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [3:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[1]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[0]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4
   (D,
    \rd_addr_reg[5] ,
    Q,
    \rd_addr_reg[3] ,
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] ,
    \rd_addr_reg[2] ,
    \rd_addr_reg[6] ,
    \rd_addr_reg[5]_0 ,
    \rd_addr_reg[3]_0 ,
    \rd_addr_reg[3]_1 ,
    SR,
    dl_status_reg_bit_6_reg,
    s_axi_aclk);
  output [1:0]D;
  input \rd_addr_reg[5] ;
  input [1:0]Q;
  input \rd_addr_reg[3] ;
  input [1:0]\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] ;
  input \rd_addr_reg[2] ;
  input \rd_addr_reg[6] ;
  input \rd_addr_reg[5]_0 ;
  input \rd_addr_reg[3]_0 ;
  input \rd_addr_reg[3]_1 ;
  input [0:0]SR;
  input [2:0]dl_status_reg_bit_6_reg;
  input s_axi_aclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [2:0]dl_status_reg_bit_6_reg;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0 ;
  wire [1:0]\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] ;
  wire \rd_addr_reg[2] ;
  wire \rd_addr_reg[3] ;
  wire \rd_addr_reg[3]_0 ;
  wire \rd_addr_reg[3]_1 ;
  wire \rd_addr_reg[5] ;
  wire \rd_addr_reg[5]_0 ;
  wire \rd_addr_reg[6] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_1 
       (.I0(\rd_addr_reg[5] ),
        .I1(Q[0]),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[0]),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] [0]),
        .I5(\rd_addr_reg[2] ),
        .O(D[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2 
       (.I0(\rd_addr_reg[6] ),
        .I1(s_level_out_bus_d3[2]),
        .I2(\rd_addr_reg[2] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] [1]),
        .I4(s_level_out_bus_d3[1]),
        .I5(\rd_addr_reg[5]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3 
       (.I0(\rd_addr_reg[5] ),
        .I1(Q[1]),
        .I2(\rd_addr_reg[3]_0 ),
        .I3(s_level_out_bus_d3[4]),
        .I4(s_level_out_bus_d3[3]),
        .I5(\rd_addr_reg[3]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg_bit_6_reg[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg_bit_6_reg[1]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg_bit_6_reg[2]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized4_25
   (D,
    Q,
    \rd_addr_reg[2] ,
    \rd_addr_reg[5] ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] ,
    \rd_addr_reg[3] ,
    \rd_addr_reg[3]_0 ,
    \rd_addr_reg[3]_1 ,
    \rd_addr_reg[6] ,
    \rd_addr_reg[5]_0 ,
    SR,
    s_axi_aclk);
  output [0:0]D;
  input [0:0]Q;
  input \rd_addr_reg[2] ;
  input \rd_addr_reg[5] ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] ;
  input \rd_addr_reg[3] ;
  input \rd_addr_reg[3]_0 ;
  input \rd_addr_reg[3]_1 ;
  input \rd_addr_reg[6] ;
  input \rd_addr_reg[5]_0 ;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]D;
  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] ;
  wire \rd_addr_reg[2] ;
  wire \rd_addr_reg[3] ;
  wire \rd_addr_reg[3]_0 ;
  wire \rd_addr_reg[3]_1 ;
  wire \rd_addr_reg[5] ;
  wire \rd_addr_reg[5]_0 ;
  wire \rd_addr_reg[6] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [4:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT4 #(
    .INIT(16'hFEEE)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0 ),
        .I2(Q),
        .I3(\rd_addr_reg[2] ),
        .O(D));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2 
       (.I0(\rd_addr_reg[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] ),
        .I2(\rd_addr_reg[3] ),
        .I3(s_level_out_bus_d3[0]),
        .I4(s_level_out_bus_d3[4]),
        .I5(\rd_addr_reg[3]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3 
       (.I0(\rd_addr_reg[3]_1 ),
        .I1(s_level_out_bus_d3[3]),
        .I2(\rd_addr_reg[6] ),
        .I3(s_level_out_bus_d3[2]),
        .I4(s_level_out_bus_d3[1]),
        .I5(\rd_addr_reg[5]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized5
   (D,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] ,
    \rd_addr_reg[6] ,
    \rd_addr_reg[2] ,
    Q,
    \rd_addr_reg[5] ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] ,
    \rd_addr_reg[3] ,
    \rd_addr_reg[3]_0 ,
    \rd_addr_reg[3]_1 ,
    SR,
    s_axi_aclk,
    dl_status_reg_bit_0_reg);
  output [1:0]D;
  input \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] ;
  input \rd_addr_reg[6] ;
  input \rd_addr_reg[2] ;
  input [1:0]Q;
  input \rd_addr_reg[5] ;
  input \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] ;
  input \rd_addr_reg[3] ;
  input \rd_addr_reg[3]_0 ;
  input \rd_addr_reg[3]_1 ;
  input [0:0]SR;
  input s_axi_aclk;
  input [2:0]dl_status_reg_bit_0_reg;

  wire [1:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [2:0]dl_status_reg_bit_0_reg;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] ;
  wire \rd_addr_reg[2] ;
  wire \rd_addr_reg[3] ;
  wire \rd_addr_reg[3]_0 ;
  wire \rd_addr_reg[3]_1 ;
  wire \rd_addr_reg[5] ;
  wire \rd_addr_reg[6] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [9:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [9:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [9:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [9:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [9:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [9:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT3 #(
    .INIT(8'hFE)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3 
       (.I0(\rd_addr_reg[3] ),
        .I1(s_level_out_bus_d3[0]),
        .I2(\rd_addr_reg[3]_0 ),
        .I3(s_level_out_bus_d3[8]),
        .I4(s_level_out_bus_d3[6]),
        .I5(\rd_addr_reg[3]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4 
       (.I0(\rd_addr_reg[6] ),
        .I1(s_level_out_bus_d3[4]),
        .I2(\rd_addr_reg[2] ),
        .I3(Q[0]),
        .I4(s_level_out_bus_d3[2]),
        .I5(\rd_addr_reg[5] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3 
       (.I0(\rd_addr_reg[3] ),
        .I1(s_level_out_bus_d3[1]),
        .I2(\rd_addr_reg[3]_0 ),
        .I3(s_level_out_bus_d3[9]),
        .I4(s_level_out_bus_d3[7]),
        .I5(\rd_addr_reg[3]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4 
       (.I0(\rd_addr_reg[6] ),
        .I1(s_level_out_bus_d3[5]),
        .I2(\rd_addr_reg[2] ),
        .I3(Q[1]),
        .I4(s_level_out_bus_d3[3]),
        .I5(\rd_addr_reg[5] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg_bit_0_reg[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg_bit_0_reg[1]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg_bit_0_reg[2]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized6
   (out,
    p_5_in,
    cl_enable,
    data0,
    core_clk,
    p_5_in_0);
  output [1:0]out;
  output p_5_in;
  input cl_enable;
  input [0:0]data0;
  input core_clk;
  input [0:0]p_5_in_0;

  wire cl_enable;
  wire core_clk;
  wire [0:0]data0;
  wire p_5_in;
  wire [0:0]p_5_in_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out[1:0] = s_level_out_bus_d3;
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_rst_blk_state[2]_i_4 
       (.I0(cl_enable),
        .I1(s_level_out_bus_d3[0]),
        .O(p_5_in));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_5_in_0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(data0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_13
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_14
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_15
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_16
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_20
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_22
   (rx_div4_clk);
  input rx_div4_clk;

  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_23
   (system_rst_reg,
    core_clk);
  input system_rst_reg;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_reg;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized7_24
   (\s_level_out_bus_d4_reg[22]_0 ,
    Q,
    core_clk);
  output [14:0]\s_level_out_bus_d4_reg[22]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign \s_level_out_bus_d4_reg[22]_0 [14:0] = s_level_out_bus_d3[22:8];
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized8
   (S,
    \settle_cnt_reg[0] ,
    \settle_cnt_reg[0]_0 ,
    \settle_cnt_reg[0]_1 ,
    \settle_cnt_reg[0]_2 ,
    \settle_cnt_reg[0]_3 ,
    Q,
    \settle_cnt_reg[7] ,
    system_rst_reg,
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] ,
    core_clk);
  output [3:0]S;
  output [3:0]\settle_cnt_reg[0] ;
  output [2:0]\settle_cnt_reg[0]_0 ;
  output [3:0]\settle_cnt_reg[0]_1 ;
  output [2:0]\settle_cnt_reg[0]_2 ;
  output [3:0]\settle_cnt_reg[0]_3 ;
  input [7:0]Q;
  input [7:0]\settle_cnt_reg[7] ;
  input system_rst_reg;
  input [8:0]\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] ;
  input core_clk;

  wire [7:0]Q;
  wire [3:0]S;
  wire core_clk;
  wire [8:0]\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire [3:0]\settle_cnt_reg[0] ;
  wire [2:0]\settle_cnt_reg[0]_0 ;
  wire [3:0]\settle_cnt_reg[0]_1 ;
  wire [2:0]\settle_cnt_reg[0]_2 ;
  wire [3:0]\settle_cnt_reg[0]_3 ;
  wire [7:0]\settle_cnt_reg[7] ;
  wire system_rst_reg;
  wire time_out_settle0_carry_i_10_n_0;
  wire time_out_settle0_carry_i_11_n_0;
  wire time_out_settle0_carry_i_12_n_0;
  wire time_out_settle0_carry_i_13_n_0;
  wire time_out_settle0_carry_i_14_n_0;
  wire time_out_settle0_carry_i_15_n_0;
  wire time_out_settle0_carry_i_16_n_0;
  wire time_out_settle0_carry_i_17_n_0;
  wire time_out_settle0_carry_i_18_n_0;
  wire time_out_settle0_carry_i_19_n_0;
  wire time_out_settle0_carry_i_20_n_0;
  wire time_out_settle0_carry_i_21_n_0;
  wire time_out_settle0_carry_i_5_n_0;
  wire time_out_settle0_carry_i_6_n_0;
  wire time_out_settle0_carry_i_7_n_0;
  wire time_out_settle0_carry_i_8_n_0;
  wire time_out_settle0_carry_i_9_n_0;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] [8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_1
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_1 [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_1__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_3 [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_2
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_1 [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_2__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_3 [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_3
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_1 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_3__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_3 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_4
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_1 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__0_i_4__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_3 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__1_i_1
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_0 [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__1_i_1__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_2 [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__1_i_2
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_2 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__1_i_2__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_0 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__1_i_3
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_2 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry__1_i_3__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0]_0 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry_i_1
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(S[3]));
  LUT3 #(
    .INIT(8'h6A)) 
    time_out_settle0_carry_i_10
       (.I0(time_out_settle0_carry_i_17_n_0),
        .I1(time_out_settle0_carry_i_16_n_0),
        .I2(time_out_settle0_carry_i_15_n_0),
        .O(time_out_settle0_carry_i_10_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    time_out_settle0_carry_i_11
       (.I0(time_out_settle0_carry_i_15_n_0),
        .I1(time_out_settle0_carry_i_16_n_0),
        .O(time_out_settle0_carry_i_11_n_0));
  LUT6 #(
    .INIT(64'hDD55D5DDAA22882A)) 
    time_out_settle0_carry_i_12
       (.I0(time_out_settle0_carry_i_14_n_0),
        .I1(time_out_settle0_carry_i_18_n_0),
        .I2(s_level_out_bus_d3[0]),
        .I3(s_level_out_bus_d3[2]),
        .I4(s_level_out_bus_d3[1]),
        .I5(time_out_settle0_carry_i_19_n_0),
        .O(time_out_settle0_carry_i_12_n_0));
  LUT6 #(
    .INIT(64'h4ED45ED55485D48D)) 
    time_out_settle0_carry_i_13
       (.I0(time_out_settle0_carry_i_18_n_0),
        .I1(time_out_settle0_carry_i_14_n_0),
        .I2(s_level_out_bus_d3[2]),
        .I3(time_out_settle0_carry_i_19_n_0),
        .I4(s_level_out_bus_d3[0]),
        .I5(s_level_out_bus_d3[1]),
        .O(time_out_settle0_carry_i_13_n_0));
  LUT6 #(
    .INIT(64'h662B4400FFDD2B99)) 
    time_out_settle0_carry_i_14
       (.I0(s_level_out_bus_d3[3]),
        .I1(time_out_settle0_carry_i_15_n_0),
        .I2(s_level_out_bus_d3[1]),
        .I3(s_level_out_bus_d3[2]),
        .I4(time_out_settle0_carry_i_19_n_0),
        .I5(time_out_settle0_carry_i_20_n_0),
        .O(time_out_settle0_carry_i_14_n_0));
  LUT6 #(
    .INIT(64'hA56186A5A7E59EA7)) 
    time_out_settle0_carry_i_15
       (.I0(s_level_out_bus_d3[5]),
        .I1(s_level_out_bus_d3[8]),
        .I2(s_level_out_bus_d3[7]),
        .I3(s_level_out_bus_d3[6]),
        .I4(s_level_out_bus_d3[4]),
        .I5(s_level_out_bus_d3[3]),
        .O(time_out_settle0_carry_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAA22882A)) 
    time_out_settle0_carry_i_16
       (.I0(time_out_settle0_carry_i_14_n_0),
        .I1(time_out_settle0_carry_i_18_n_0),
        .I2(s_level_out_bus_d3[0]),
        .I3(s_level_out_bus_d3[2]),
        .I4(s_level_out_bus_d3[1]),
        .I5(time_out_settle0_carry_i_19_n_0),
        .O(time_out_settle0_carry_i_16_n_0));
  LUT5 #(
    .INIT(32'h9C23BD63)) 
    time_out_settle0_carry_i_17
       (.I0(s_level_out_bus_d3[5]),
        .I1(s_level_out_bus_d3[8]),
        .I2(s_level_out_bus_d3[7]),
        .I3(s_level_out_bus_d3[6]),
        .I4(s_level_out_bus_d3[4]),
        .O(time_out_settle0_carry_i_17_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    time_out_settle0_carry_i_18
       (.I0(time_out_settle0_carry_i_15_n_0),
        .I1(s_level_out_bus_d3[2]),
        .I2(s_level_out_bus_d3[3]),
        .O(time_out_settle0_carry_i_18_n_0));
  LUT6 #(
    .INIT(64'h3C4D3000FFF34DC3)) 
    time_out_settle0_carry_i_19
       (.I0(s_level_out_bus_d3[2]),
        .I1(s_level_out_bus_d3[4]),
        .I2(time_out_settle0_carry_i_17_n_0),
        .I3(s_level_out_bus_d3[3]),
        .I4(time_out_settle0_carry_i_15_n_0),
        .I5(time_out_settle0_carry_i_21_n_0),
        .O(time_out_settle0_carry_i_19_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFAFFFFFFEA)) 
    time_out_settle0_carry_i_1__0
       (.I0(time_out_settle0_carry_i_5_n_0),
        .I1(s_level_out_bus_d3[4]),
        .I2(s_level_out_bus_d3[6]),
        .I3(s_level_out_bus_d3[7]),
        .I4(s_level_out_bus_d3[8]),
        .I5(s_level_out_bus_d3[5]),
        .O(\settle_cnt_reg[0] [3]));
  LUT5 #(
    .INIT(32'h44401114)) 
    time_out_settle0_carry_i_2
       (.I0(\settle_cnt_reg[7] [7]),
        .I1(time_out_settle0_carry_i_6_n_0),
        .I2(time_out_settle0_carry_i_7_n_0),
        .I3(time_out_settle0_carry_i_8_n_0),
        .I4(\settle_cnt_reg[7] [6]),
        .O(\settle_cnt_reg[0] [2]));
  LUT6 #(
    .INIT(64'h63DCBD639C23429C)) 
    time_out_settle0_carry_i_20
       (.I0(s_level_out_bus_d3[5]),
        .I1(s_level_out_bus_d3[8]),
        .I2(s_level_out_bus_d3[7]),
        .I3(s_level_out_bus_d3[6]),
        .I4(s_level_out_bus_d3[4]),
        .I5(s_level_out_bus_d3[3]),
        .O(time_out_settle0_carry_i_20_n_0));
  LUT5 #(
    .INIT(32'h96A5A96A)) 
    time_out_settle0_carry_i_21
       (.I0(s_level_out_bus_d3[4]),
        .I1(s_level_out_bus_d3[6]),
        .I2(s_level_out_bus_d3[7]),
        .I3(s_level_out_bus_d3[8]),
        .I4(s_level_out_bus_d3[5]),
        .O(time_out_settle0_carry_i_21_n_0));
  LUT5 #(
    .INIT(32'h44401114)) 
    time_out_settle0_carry_i_2__0
       (.I0(Q[7]),
        .I1(time_out_settle0_carry_i_6_n_0),
        .I2(time_out_settle0_carry_i_7_n_0),
        .I3(time_out_settle0_carry_i_8_n_0),
        .I4(Q[6]),
        .O(S[2]));
  LUT6 #(
    .INIT(64'h0000066006600000)) 
    time_out_settle0_carry_i_3
       (.I0(time_out_settle0_carry_i_9_n_0),
        .I1(\settle_cnt_reg[7] [5]),
        .I2(\settle_cnt_reg[7] [4]),
        .I3(time_out_settle0_carry_i_10_n_0),
        .I4(\settle_cnt_reg[7] [3]),
        .I5(time_out_settle0_carry_i_11_n_0),
        .O(\settle_cnt_reg[0] [1]));
  LUT6 #(
    .INIT(64'h0000066006600000)) 
    time_out_settle0_carry_i_3__0
       (.I0(time_out_settle0_carry_i_9_n_0),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(time_out_settle0_carry_i_10_n_0),
        .I4(Q[3]),
        .I5(time_out_settle0_carry_i_11_n_0),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9000090000090090)) 
    time_out_settle0_carry_i_4
       (.I0(time_out_settle0_carry_i_12_n_0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(time_out_settle0_carry_i_13_n_0),
        .I4(time_out_settle0_carry_i_14_n_0),
        .I5(Q[0]),
        .O(S[0]));
  LUT6 #(
    .INIT(64'h9000090000090090)) 
    time_out_settle0_carry_i_4__0
       (.I0(time_out_settle0_carry_i_12_n_0),
        .I1(\settle_cnt_reg[7] [2]),
        .I2(\settle_cnt_reg[7] [1]),
        .I3(time_out_settle0_carry_i_13_n_0),
        .I4(time_out_settle0_carry_i_14_n_0),
        .I5(\settle_cnt_reg[7] [0]),
        .O(\settle_cnt_reg[0] [0]));
  LUT2 #(
    .INIT(4'h7)) 
    time_out_settle0_carry_i_5
       (.I0(time_out_settle0_carry_i_15_n_0),
        .I1(time_out_settle0_carry_i_16_n_0),
        .O(time_out_settle0_carry_i_5_n_0));
  LUT3 #(
    .INIT(8'hA8)) 
    time_out_settle0_carry_i_6
       (.I0(s_level_out_bus_d3[8]),
        .I1(s_level_out_bus_d3[6]),
        .I2(s_level_out_bus_d3[7]),
        .O(time_out_settle0_carry_i_6_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    time_out_settle0_carry_i_7
       (.I0(time_out_settle0_carry_i_16_n_0),
        .I1(time_out_settle0_carry_i_15_n_0),
        .I2(time_out_settle0_carry_i_17_n_0),
        .O(time_out_settle0_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9C18)) 
    time_out_settle0_carry_i_8
       (.I0(s_level_out_bus_d3[6]),
        .I1(s_level_out_bus_d3[7]),
        .I2(s_level_out_bus_d3[8]),
        .I3(s_level_out_bus_d3[5]),
        .O(time_out_settle0_carry_i_8_n_0));
  LUT4 #(
    .INIT(16'h9555)) 
    time_out_settle0_carry_i_9
       (.I0(time_out_settle0_carry_i_8_n_0),
        .I1(time_out_settle0_carry_i_17_n_0),
        .I2(time_out_settle0_carry_i_15_n_0),
        .I3(time_out_settle0_carry_i_16_n_0),
        .O(time_out_settle0_carry_i_9_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_0_1_rx_sync_cell" *) 
module bd_ca02_phy_0_mipi_dphy_v4_0_1_rx_sync_cell__parameterized9
   (s_level_out_d4_reg_0,
    out,
    rx_div4_clk);
  output s_level_out_d4_reg_0;
  input out;
  input rx_div4_clk;

  wire p_level_in_int;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign s_level_out_d4_reg_0 = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
